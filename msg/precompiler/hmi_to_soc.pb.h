// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hmi_to_soc.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_hmi_5fto_5fsoc_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_hmi_5fto_5fsoc_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_hmi_5fto_5fsoc_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_hmi_5fto_5fsoc_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_hmi_5fto_5fsoc_2eproto;
namespace minieye {
class HMI_HAVP_CALLBACKS;
class HMI_HAVP_CALLBACKSDefaultTypeInternal;
extern HMI_HAVP_CALLBACKSDefaultTypeInternal _HMI_HAVP_CALLBACKS_default_instance_;
class HmiToSoc;
class HmiToSocDefaultTypeInternal;
extern HmiToSocDefaultTypeInternal _HmiToSoc_default_instance_;
class RRM_1_AVM;
class RRM_1_AVMDefaultTypeInternal;
extern RRM_1_AVMDefaultTypeInternal _RRM_1_AVM_default_instance_;
class RRM_2_AVM;
class RRM_2_AVMDefaultTypeInternal;
extern RRM_2_AVMDefaultTypeInternal _RRM_2_AVM_default_instance_;
class RRM_3_AVM;
class RRM_3_AVMDefaultTypeInternal;
extern RRM_3_AVMDefaultTypeInternal _RRM_3_AVM_default_instance_;
}  // namespace minieye
PROTOBUF_NAMESPACE_OPEN
template<> ::minieye::HMI_HAVP_CALLBACKS* Arena::CreateMaybeMessage<::minieye::HMI_HAVP_CALLBACKS>(Arena*);
template<> ::minieye::HmiToSoc* Arena::CreateMaybeMessage<::minieye::HmiToSoc>(Arena*);
template<> ::minieye::RRM_1_AVM* Arena::CreateMaybeMessage<::minieye::RRM_1_AVM>(Arena*);
template<> ::minieye::RRM_2_AVM* Arena::CreateMaybeMessage<::minieye::RRM_2_AVM>(Arena*);
template<> ::minieye::RRM_3_AVM* Arena::CreateMaybeMessage<::minieye::RRM_3_AVM>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace minieye {

// ===================================================================

class RRM_1_AVM PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minieye.RRM_1_AVM) */ {
 public:
  inline RRM_1_AVM() : RRM_1_AVM(nullptr) {};
  virtual ~RRM_1_AVM();

  RRM_1_AVM(const RRM_1_AVM& from);
  RRM_1_AVM(RRM_1_AVM&& from) noexcept
    : RRM_1_AVM() {
    *this = ::std::move(from);
  }

  inline RRM_1_AVM& operator=(const RRM_1_AVM& from) {
    CopyFrom(from);
    return *this;
  }
  inline RRM_1_AVM& operator=(RRM_1_AVM&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RRM_1_AVM& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RRM_1_AVM* internal_default_instance() {
    return reinterpret_cast<const RRM_1_AVM*>(
               &_RRM_1_AVM_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(RRM_1_AVM& a, RRM_1_AVM& b) {
    a.Swap(&b);
  }
  inline void Swap(RRM_1_AVM* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RRM_1_AVM* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RRM_1_AVM* New() const final {
    return CreateMaybeMessage<RRM_1_AVM>(nullptr);
  }

  RRM_1_AVM* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RRM_1_AVM>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RRM_1_AVM& from);
  void MergeFrom(const RRM_1_AVM& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RRM_1_AVM* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minieye.RRM_1_AVM";
  }
  protected:
  explicit RRM_1_AVM(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hmi_5fto_5fsoc_2eproto);
    return ::descriptor_table_hmi_5fto_5fsoc_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLicenseplate1FieldNumber = 1,
    kLicenseplate2FieldNumber = 2,
    kLicenseplate3FieldNumber = 3,
    kLicenseplate4FieldNumber = 4,
    kLicenseplate5FieldNumber = 5,
    kLicenseplate6FieldNumber = 6,
    kLicenseplate7FieldNumber = 7,
    kLicenseplate8FieldNumber = 8,
  };
  // uint32 licenseplate_1 = 1;
  void clear_licenseplate_1();
  ::PROTOBUF_NAMESPACE_ID::uint32 licenseplate_1() const;
  void set_licenseplate_1(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_licenseplate_1() const;
  void _internal_set_licenseplate_1(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 licenseplate_2 = 2;
  void clear_licenseplate_2();
  ::PROTOBUF_NAMESPACE_ID::uint32 licenseplate_2() const;
  void set_licenseplate_2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_licenseplate_2() const;
  void _internal_set_licenseplate_2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 licenseplate_3 = 3;
  void clear_licenseplate_3();
  ::PROTOBUF_NAMESPACE_ID::uint32 licenseplate_3() const;
  void set_licenseplate_3(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_licenseplate_3() const;
  void _internal_set_licenseplate_3(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 licenseplate_4 = 4;
  void clear_licenseplate_4();
  ::PROTOBUF_NAMESPACE_ID::uint32 licenseplate_4() const;
  void set_licenseplate_4(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_licenseplate_4() const;
  void _internal_set_licenseplate_4(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 licenseplate_5 = 5;
  void clear_licenseplate_5();
  ::PROTOBUF_NAMESPACE_ID::uint32 licenseplate_5() const;
  void set_licenseplate_5(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_licenseplate_5() const;
  void _internal_set_licenseplate_5(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 licenseplate_6 = 6;
  void clear_licenseplate_6();
  ::PROTOBUF_NAMESPACE_ID::uint32 licenseplate_6() const;
  void set_licenseplate_6(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_licenseplate_6() const;
  void _internal_set_licenseplate_6(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 licenseplate_7 = 7;
  void clear_licenseplate_7();
  ::PROTOBUF_NAMESPACE_ID::uint32 licenseplate_7() const;
  void set_licenseplate_7(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_licenseplate_7() const;
  void _internal_set_licenseplate_7(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 licenseplate_8 = 8;
  void clear_licenseplate_8();
  ::PROTOBUF_NAMESPACE_ID::uint32 licenseplate_8() const;
  void set_licenseplate_8(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_licenseplate_8() const;
  void _internal_set_licenseplate_8(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:minieye.RRM_1_AVM)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 licenseplate_1_;
  ::PROTOBUF_NAMESPACE_ID::uint32 licenseplate_2_;
  ::PROTOBUF_NAMESPACE_ID::uint32 licenseplate_3_;
  ::PROTOBUF_NAMESPACE_ID::uint32 licenseplate_4_;
  ::PROTOBUF_NAMESPACE_ID::uint32 licenseplate_5_;
  ::PROTOBUF_NAMESPACE_ID::uint32 licenseplate_6_;
  ::PROTOBUF_NAMESPACE_ID::uint32 licenseplate_7_;
  ::PROTOBUF_NAMESPACE_ID::uint32 licenseplate_8_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_hmi_5fto_5fsoc_2eproto;
};
// -------------------------------------------------------------------

class RRM_2_AVM PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minieye.RRM_2_AVM) */ {
 public:
  inline RRM_2_AVM() : RRM_2_AVM(nullptr) {};
  virtual ~RRM_2_AVM();

  RRM_2_AVM(const RRM_2_AVM& from);
  RRM_2_AVM(RRM_2_AVM&& from) noexcept
    : RRM_2_AVM() {
    *this = ::std::move(from);
  }

  inline RRM_2_AVM& operator=(const RRM_2_AVM& from) {
    CopyFrom(from);
    return *this;
  }
  inline RRM_2_AVM& operator=(RRM_2_AVM&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RRM_2_AVM& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RRM_2_AVM* internal_default_instance() {
    return reinterpret_cast<const RRM_2_AVM*>(
               &_RRM_2_AVM_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(RRM_2_AVM& a, RRM_2_AVM& b) {
    a.Swap(&b);
  }
  inline void Swap(RRM_2_AVM* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RRM_2_AVM* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RRM_2_AVM* New() const final {
    return CreateMaybeMessage<RRM_2_AVM>(nullptr);
  }

  RRM_2_AVM* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RRM_2_AVM>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RRM_2_AVM& from);
  void MergeFrom(const RRM_2_AVM& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RRM_2_AVM* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minieye.RRM_2_AVM";
  }
  protected:
  explicit RRM_2_AVM(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hmi_5fto_5fsoc_2eproto);
    return ::descriptor_table_hmi_5fto_5fsoc_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBtnPressInputValueXFieldNumber = 1,
    kBtnPressInputValueYFieldNumber = 2,
    kTouchEvtFieldNumber = 3,
    kAVMViewModeSwitchFieldNumber = 4,
    kAVMTransparentHoodSwitchFieldNumber = 5,
    kAVMTrailSwitchFieldNumber = 6,
  };
  // uint32 BtnPressInputValueX = 1;
  void clear_btnpressinputvaluex();
  ::PROTOBUF_NAMESPACE_ID::uint32 btnpressinputvaluex() const;
  void set_btnpressinputvaluex(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_btnpressinputvaluex() const;
  void _internal_set_btnpressinputvaluex(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 BtnPressInputValueY = 2;
  void clear_btnpressinputvaluey();
  ::PROTOBUF_NAMESPACE_ID::uint32 btnpressinputvaluey() const;
  void set_btnpressinputvaluey(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_btnpressinputvaluey() const;
  void _internal_set_btnpressinputvaluey(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 TouchEvt = 3;
  void clear_touchevt();
  ::PROTOBUF_NAMESPACE_ID::uint32 touchevt() const;
  void set_touchevt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_touchevt() const;
  void _internal_set_touchevt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 AVMViewModeSwitch = 4;
  void clear_avmviewmodeswitch();
  ::PROTOBUF_NAMESPACE_ID::uint32 avmviewmodeswitch() const;
  void set_avmviewmodeswitch(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_avmviewmodeswitch() const;
  void _internal_set_avmviewmodeswitch(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bool AVMTransparentHoodSwitch = 5;
  void clear_avmtransparenthoodswitch();
  bool avmtransparenthoodswitch() const;
  void set_avmtransparenthoodswitch(bool value);
  private:
  bool _internal_avmtransparenthoodswitch() const;
  void _internal_set_avmtransparenthoodswitch(bool value);
  public:

  // bool AVMTrailSwitch = 6;
  void clear_avmtrailswitch();
  bool avmtrailswitch() const;
  void set_avmtrailswitch(bool value);
  private:
  bool _internal_avmtrailswitch() const;
  void _internal_set_avmtrailswitch(bool value);
  public:

  // @@protoc_insertion_point(class_scope:minieye.RRM_2_AVM)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 btnpressinputvaluex_;
  ::PROTOBUF_NAMESPACE_ID::uint32 btnpressinputvaluey_;
  ::PROTOBUF_NAMESPACE_ID::uint32 touchevt_;
  ::PROTOBUF_NAMESPACE_ID::uint32 avmviewmodeswitch_;
  bool avmtransparenthoodswitch_;
  bool avmtrailswitch_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_hmi_5fto_5fsoc_2eproto;
};
// -------------------------------------------------------------------

class RRM_3_AVM PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minieye.RRM_3_AVM) */ {
 public:
  inline RRM_3_AVM() : RRM_3_AVM(nullptr) {};
  virtual ~RRM_3_AVM();

  RRM_3_AVM(const RRM_3_AVM& from);
  RRM_3_AVM(RRM_3_AVM&& from) noexcept
    : RRM_3_AVM() {
    *this = ::std::move(from);
  }

  inline RRM_3_AVM& operator=(const RRM_3_AVM& from) {
    CopyFrom(from);
    return *this;
  }
  inline RRM_3_AVM& operator=(RRM_3_AVM&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RRM_3_AVM& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RRM_3_AVM* internal_default_instance() {
    return reinterpret_cast<const RRM_3_AVM*>(
               &_RRM_3_AVM_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(RRM_3_AVM& a, RRM_3_AVM& b) {
    a.Swap(&b);
  }
  inline void Swap(RRM_3_AVM* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RRM_3_AVM* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RRM_3_AVM* New() const final {
    return CreateMaybeMessage<RRM_3_AVM>(nullptr);
  }

  RRM_3_AVM* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RRM_3_AVM>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RRM_3_AVM& from);
  void MergeFrom(const RRM_3_AVM& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RRM_3_AVM* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minieye.RRM_3_AVM";
  }
  protected:
  explicit RRM_3_AVM(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hmi_5fto_5fsoc_2eproto);
    return ::descriptor_table_hmi_5fto_5fsoc_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAPAOPSWFieldNumber = 1,
    kAPASlotChosenFieldNumber = 2,
    kAPAEngageConfirmFieldNumber = 3,
    kAPASuspendResumeFieldNumber = 4,
    kAPAPullOutOptionFieldNumber = 5,
    kAPAPullOutDirectionFieldNumber = 6,
    kAPAParkInDirectionFieldNumber = 7,
    kAVMOPVIEWDVRSWFieldNumber = 8,
    kSetSteeringWheelFieldNumber = 9,
    kSetLanguageFieldNumber = 10,
    kSetRadarWariningFieldNumber = 11,
    kSetTurnIndicationFieldNumber = 12,
    kSetBodyColorFieldNumber = 13,
    kSetAutoZoomFieldNumber = 14,
    kSetPASTriggerFieldNumber = 15,
    kSetTransparencyFieldNumber = 16,
    kSetAutoExitFieldNumber = 17,
    kSetLicensePlateFieldNumber = 18,
    kSetGuideLineFieldNumber = 19,
    kSetFactoryDefaultFieldNumber = 20,
    kPlanTypeFieldNumber = 21,
  };
  // uint32 APA_OP_SW = 1;
  void clear_apa_op_sw();
  ::PROTOBUF_NAMESPACE_ID::uint32 apa_op_sw() const;
  void set_apa_op_sw(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_apa_op_sw() const;
  void _internal_set_apa_op_sw(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 APA_Slot_Chosen = 2;
  void clear_apa_slot_chosen();
  ::PROTOBUF_NAMESPACE_ID::uint32 apa_slot_chosen() const;
  void set_apa_slot_chosen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_apa_slot_chosen() const;
  void _internal_set_apa_slot_chosen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bool APA_Engage_Confirm = 3;
  void clear_apa_engage_confirm();
  bool apa_engage_confirm() const;
  void set_apa_engage_confirm(bool value);
  private:
  bool _internal_apa_engage_confirm() const;
  void _internal_set_apa_engage_confirm(bool value);
  public:

  // uint32 APA_Suspend_Resume = 4;
  void clear_apa_suspend_resume();
  ::PROTOBUF_NAMESPACE_ID::uint32 apa_suspend_resume() const;
  void set_apa_suspend_resume(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_apa_suspend_resume() const;
  void _internal_set_apa_suspend_resume(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 APA_PullOut_Option = 5;
  void clear_apa_pullout_option();
  ::PROTOBUF_NAMESPACE_ID::uint32 apa_pullout_option() const;
  void set_apa_pullout_option(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_apa_pullout_option() const;
  void _internal_set_apa_pullout_option(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 APA_PullOut_Direction = 6;
  void clear_apa_pullout_direction();
  ::PROTOBUF_NAMESPACE_ID::uint32 apa_pullout_direction() const;
  void set_apa_pullout_direction(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_apa_pullout_direction() const;
  void _internal_set_apa_pullout_direction(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 APA_ParkIn_Direction = 7;
  void clear_apa_parkin_direction();
  ::PROTOBUF_NAMESPACE_ID::uint32 apa_parkin_direction() const;
  void set_apa_parkin_direction(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_apa_parkin_direction() const;
  void _internal_set_apa_parkin_direction(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 AVM_OP_VIEW_DVR_SW = 8;
  void clear_avm_op_view_dvr_sw();
  ::PROTOBUF_NAMESPACE_ID::uint32 avm_op_view_dvr_sw() const;
  void set_avm_op_view_dvr_sw(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_avm_op_view_dvr_sw() const;
  void _internal_set_avm_op_view_dvr_sw(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 Set_SteeringWheel = 9;
  void clear_set_steeringwheel();
  ::PROTOBUF_NAMESPACE_ID::uint32 set_steeringwheel() const;
  void set_set_steeringwheel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_set_steeringwheel() const;
  void _internal_set_set_steeringwheel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 Set_Language = 10;
  void clear_set_language();
  ::PROTOBUF_NAMESPACE_ID::uint32 set_language() const;
  void set_set_language(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_set_language() const;
  void _internal_set_set_language(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 Set_RadarWarining = 11;
  void clear_set_radarwarining();
  ::PROTOBUF_NAMESPACE_ID::uint32 set_radarwarining() const;
  void set_set_radarwarining(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_set_radarwarining() const;
  void _internal_set_set_radarwarining(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 Set_TurnIndication = 12;
  void clear_set_turnindication();
  ::PROTOBUF_NAMESPACE_ID::uint32 set_turnindication() const;
  void set_set_turnindication(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_set_turnindication() const;
  void _internal_set_set_turnindication(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 Set_BodyColor = 13;
  void clear_set_bodycolor();
  ::PROTOBUF_NAMESPACE_ID::uint32 set_bodycolor() const;
  void set_set_bodycolor(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_set_bodycolor() const;
  void _internal_set_set_bodycolor(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 Set_AutoZoom = 14;
  void clear_set_autozoom();
  ::PROTOBUF_NAMESPACE_ID::uint32 set_autozoom() const;
  void set_set_autozoom(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_set_autozoom() const;
  void _internal_set_set_autozoom(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 Set_PASTrigger = 15;
  void clear_set_pastrigger();
  ::PROTOBUF_NAMESPACE_ID::uint32 set_pastrigger() const;
  void set_set_pastrigger(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_set_pastrigger() const;
  void _internal_set_set_pastrigger(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 Set_Transparency = 16;
  void clear_set_transparency();
  ::PROTOBUF_NAMESPACE_ID::uint32 set_transparency() const;
  void set_set_transparency(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_set_transparency() const;
  void _internal_set_set_transparency(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 Set_AutoExit = 17;
  void clear_set_autoexit();
  ::PROTOBUF_NAMESPACE_ID::uint32 set_autoexit() const;
  void set_set_autoexit(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_set_autoexit() const;
  void _internal_set_set_autoexit(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 Set_LicensePlate = 18;
  void clear_set_licenseplate();
  ::PROTOBUF_NAMESPACE_ID::uint32 set_licenseplate() const;
  void set_set_licenseplate(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_set_licenseplate() const;
  void _internal_set_set_licenseplate(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 Set_GuideLine = 19;
  void clear_set_guideline();
  ::PROTOBUF_NAMESPACE_ID::uint32 set_guideline() const;
  void set_set_guideline(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_set_guideline() const;
  void _internal_set_set_guideline(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 Set_FactoryDefault = 20;
  void clear_set_factorydefault();
  ::PROTOBUF_NAMESPACE_ID::uint32 set_factorydefault() const;
  void set_set_factorydefault(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_set_factorydefault() const;
  void _internal_set_set_factorydefault(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 Plan_type = 21;
  void clear_plan_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 plan_type() const;
  void set_plan_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_plan_type() const;
  void _internal_set_plan_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:minieye.RRM_3_AVM)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 apa_op_sw_;
  ::PROTOBUF_NAMESPACE_ID::uint32 apa_slot_chosen_;
  bool apa_engage_confirm_;
  ::PROTOBUF_NAMESPACE_ID::uint32 apa_suspend_resume_;
  ::PROTOBUF_NAMESPACE_ID::uint32 apa_pullout_option_;
  ::PROTOBUF_NAMESPACE_ID::uint32 apa_pullout_direction_;
  ::PROTOBUF_NAMESPACE_ID::uint32 apa_parkin_direction_;
  ::PROTOBUF_NAMESPACE_ID::uint32 avm_op_view_dvr_sw_;
  ::PROTOBUF_NAMESPACE_ID::uint32 set_steeringwheel_;
  ::PROTOBUF_NAMESPACE_ID::uint32 set_language_;
  ::PROTOBUF_NAMESPACE_ID::uint32 set_radarwarining_;
  ::PROTOBUF_NAMESPACE_ID::uint32 set_turnindication_;
  ::PROTOBUF_NAMESPACE_ID::uint32 set_bodycolor_;
  ::PROTOBUF_NAMESPACE_ID::uint32 set_autozoom_;
  ::PROTOBUF_NAMESPACE_ID::uint32 set_pastrigger_;
  ::PROTOBUF_NAMESPACE_ID::uint32 set_transparency_;
  ::PROTOBUF_NAMESPACE_ID::uint32 set_autoexit_;
  ::PROTOBUF_NAMESPACE_ID::uint32 set_licenseplate_;
  ::PROTOBUF_NAMESPACE_ID::uint32 set_guideline_;
  ::PROTOBUF_NAMESPACE_ID::uint32 set_factorydefault_;
  ::PROTOBUF_NAMESPACE_ID::uint32 plan_type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_hmi_5fto_5fsoc_2eproto;
};
// -------------------------------------------------------------------

class HMI_HAVP_CALLBACKS PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minieye.HMI_HAVP_CALLBACKS) */ {
 public:
  inline HMI_HAVP_CALLBACKS() : HMI_HAVP_CALLBACKS(nullptr) {};
  virtual ~HMI_HAVP_CALLBACKS();

  HMI_HAVP_CALLBACKS(const HMI_HAVP_CALLBACKS& from);
  HMI_HAVP_CALLBACKS(HMI_HAVP_CALLBACKS&& from) noexcept
    : HMI_HAVP_CALLBACKS() {
    *this = ::std::move(from);
  }

  inline HMI_HAVP_CALLBACKS& operator=(const HMI_HAVP_CALLBACKS& from) {
    CopyFrom(from);
    return *this;
  }
  inline HMI_HAVP_CALLBACKS& operator=(HMI_HAVP_CALLBACKS&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HMI_HAVP_CALLBACKS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HMI_HAVP_CALLBACKS* internal_default_instance() {
    return reinterpret_cast<const HMI_HAVP_CALLBACKS*>(
               &_HMI_HAVP_CALLBACKS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(HMI_HAVP_CALLBACKS& a, HMI_HAVP_CALLBACKS& b) {
    a.Swap(&b);
  }
  inline void Swap(HMI_HAVP_CALLBACKS* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HMI_HAVP_CALLBACKS* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HMI_HAVP_CALLBACKS* New() const final {
    return CreateMaybeMessage<HMI_HAVP_CALLBACKS>(nullptr);
  }

  HMI_HAVP_CALLBACKS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HMI_HAVP_CALLBACKS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HMI_HAVP_CALLBACKS& from);
  void MergeFrom(const HMI_HAVP_CALLBACKS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HMI_HAVP_CALLBACKS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minieye.HMI_HAVP_CALLBACKS";
  }
  protected:
  explicit HMI_HAVP_CALLBACKS(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hmi_5fto_5fsoc_2eproto);
    return ::descriptor_table_hmi_5fto_5fsoc_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHAVPEngageConfimFieldNumber = 1,
    kHAVPBuildMapConfirmFieldNumber = 2,
    kHAVPBuildMapFinishedFieldNumber = 3,
    kHAVPExitFieldNumber = 4,
    kHAVPBuildMapParkManualFieldNumber = 5,
    kHAVPStartFieldNumber = 6,
    kHAVPBuildMapBackToLearningFieldNumber = 7,
    kHAVPParkingContinueSearchParkingFieldNumber = 9,
    kHAVPParkingControlDecelerationEnumFieldNumber = 8,
  };
  // bool HAVP_Engage_Confim = 1;
  void clear_havp_engage_confim();
  bool havp_engage_confim() const;
  void set_havp_engage_confim(bool value);
  private:
  bool _internal_havp_engage_confim() const;
  void _internal_set_havp_engage_confim(bool value);
  public:

  // bool HAVP_Build_Map_Confirm = 2;
  void clear_havp_build_map_confirm();
  bool havp_build_map_confirm() const;
  void set_havp_build_map_confirm(bool value);
  private:
  bool _internal_havp_build_map_confirm() const;
  void _internal_set_havp_build_map_confirm(bool value);
  public:

  // bool HAVP_Build_Map_Finished = 3;
  void clear_havp_build_map_finished();
  bool havp_build_map_finished() const;
  void set_havp_build_map_finished(bool value);
  private:
  bool _internal_havp_build_map_finished() const;
  void _internal_set_havp_build_map_finished(bool value);
  public:

  // bool HAVP_Exit = 4;
  void clear_havp_exit();
  bool havp_exit() const;
  void set_havp_exit(bool value);
  private:
  bool _internal_havp_exit() const;
  void _internal_set_havp_exit(bool value);
  public:

  // bool HAVP_Build_Map_Park_Manual = 5;
  void clear_havp_build_map_park_manual();
  bool havp_build_map_park_manual() const;
  void set_havp_build_map_park_manual(bool value);
  private:
  bool _internal_havp_build_map_park_manual() const;
  void _internal_set_havp_build_map_park_manual(bool value);
  public:

  // bool HAVP_Start = 6;
  void clear_havp_start();
  bool havp_start() const;
  void set_havp_start(bool value);
  private:
  bool _internal_havp_start() const;
  void _internal_set_havp_start(bool value);
  public:

  // bool HAVP_Build_Map_Back_To_Learning = 7;
  void clear_havp_build_map_back_to_learning();
  bool havp_build_map_back_to_learning() const;
  void set_havp_build_map_back_to_learning(bool value);
  private:
  bool _internal_havp_build_map_back_to_learning() const;
  void _internal_set_havp_build_map_back_to_learning(bool value);
  public:

  // bool HAVP_Parking_Continue_Search_Parking = 9;
  void clear_havp_parking_continue_search_parking();
  bool havp_parking_continue_search_parking() const;
  void set_havp_parking_continue_search_parking(bool value);
  private:
  bool _internal_havp_parking_continue_search_parking() const;
  void _internal_set_havp_parking_continue_search_parking(bool value);
  public:

  // uint32 HAVP_Parking_Control_Deceleration_Enum = 8;
  void clear_havp_parking_control_deceleration_enum();
  ::PROTOBUF_NAMESPACE_ID::uint32 havp_parking_control_deceleration_enum() const;
  void set_havp_parking_control_deceleration_enum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_havp_parking_control_deceleration_enum() const;
  void _internal_set_havp_parking_control_deceleration_enum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:minieye.HMI_HAVP_CALLBACKS)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  bool havp_engage_confim_;
  bool havp_build_map_confirm_;
  bool havp_build_map_finished_;
  bool havp_exit_;
  bool havp_build_map_park_manual_;
  bool havp_start_;
  bool havp_build_map_back_to_learning_;
  bool havp_parking_continue_search_parking_;
  ::PROTOBUF_NAMESPACE_ID::uint32 havp_parking_control_deceleration_enum_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_hmi_5fto_5fsoc_2eproto;
};
// -------------------------------------------------------------------

class HmiToSoc PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minieye.HmiToSoc) */ {
 public:
  inline HmiToSoc() : HmiToSoc(nullptr) {};
  virtual ~HmiToSoc();

  HmiToSoc(const HmiToSoc& from);
  HmiToSoc(HmiToSoc&& from) noexcept
    : HmiToSoc() {
    *this = ::std::move(from);
  }

  inline HmiToSoc& operator=(const HmiToSoc& from) {
    CopyFrom(from);
    return *this;
  }
  inline HmiToSoc& operator=(HmiToSoc&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HmiToSoc& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HmiToSoc* internal_default_instance() {
    return reinterpret_cast<const HmiToSoc*>(
               &_HmiToSoc_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(HmiToSoc& a, HmiToSoc& b) {
    a.Swap(&b);
  }
  inline void Swap(HmiToSoc* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HmiToSoc* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HmiToSoc* New() const final {
    return CreateMaybeMessage<HmiToSoc>(nullptr);
  }

  HmiToSoc* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HmiToSoc>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HmiToSoc& from);
  void MergeFrom(const HmiToSoc& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HmiToSoc* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minieye.HmiToSoc";
  }
  protected:
  explicit HmiToSoc(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hmi_5fto_5fsoc_2eproto);
    return ::descriptor_table_hmi_5fto_5fsoc_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRrm1AvmFieldNumber = 1,
    kRrm2AvmFieldNumber = 2,
    kRrm3AvmFieldNumber = 3,
    kHmiHavpCallbacksFieldNumber = 4,
    kTimestampFieldNumber = 5,
    kTickFieldNumber = 6,
  };
  // .minieye.RRM_1_AVM rrm_1_avm = 1;
  bool has_rrm_1_avm() const;
  private:
  bool _internal_has_rrm_1_avm() const;
  public:
  void clear_rrm_1_avm();
  const ::minieye::RRM_1_AVM& rrm_1_avm() const;
  ::minieye::RRM_1_AVM* release_rrm_1_avm();
  ::minieye::RRM_1_AVM* mutable_rrm_1_avm();
  void set_allocated_rrm_1_avm(::minieye::RRM_1_AVM* rrm_1_avm);
  private:
  const ::minieye::RRM_1_AVM& _internal_rrm_1_avm() const;
  ::minieye::RRM_1_AVM* _internal_mutable_rrm_1_avm();
  public:
  void unsafe_arena_set_allocated_rrm_1_avm(
      ::minieye::RRM_1_AVM* rrm_1_avm);
  ::minieye::RRM_1_AVM* unsafe_arena_release_rrm_1_avm();

  // .minieye.RRM_2_AVM rrm_2_avm = 2;
  bool has_rrm_2_avm() const;
  private:
  bool _internal_has_rrm_2_avm() const;
  public:
  void clear_rrm_2_avm();
  const ::minieye::RRM_2_AVM& rrm_2_avm() const;
  ::minieye::RRM_2_AVM* release_rrm_2_avm();
  ::minieye::RRM_2_AVM* mutable_rrm_2_avm();
  void set_allocated_rrm_2_avm(::minieye::RRM_2_AVM* rrm_2_avm);
  private:
  const ::minieye::RRM_2_AVM& _internal_rrm_2_avm() const;
  ::minieye::RRM_2_AVM* _internal_mutable_rrm_2_avm();
  public:
  void unsafe_arena_set_allocated_rrm_2_avm(
      ::minieye::RRM_2_AVM* rrm_2_avm);
  ::minieye::RRM_2_AVM* unsafe_arena_release_rrm_2_avm();

  // .minieye.RRM_3_AVM rrm_3_avm = 3;
  bool has_rrm_3_avm() const;
  private:
  bool _internal_has_rrm_3_avm() const;
  public:
  void clear_rrm_3_avm();
  const ::minieye::RRM_3_AVM& rrm_3_avm() const;
  ::minieye::RRM_3_AVM* release_rrm_3_avm();
  ::minieye::RRM_3_AVM* mutable_rrm_3_avm();
  void set_allocated_rrm_3_avm(::minieye::RRM_3_AVM* rrm_3_avm);
  private:
  const ::minieye::RRM_3_AVM& _internal_rrm_3_avm() const;
  ::minieye::RRM_3_AVM* _internal_mutable_rrm_3_avm();
  public:
  void unsafe_arena_set_allocated_rrm_3_avm(
      ::minieye::RRM_3_AVM* rrm_3_avm);
  ::minieye::RRM_3_AVM* unsafe_arena_release_rrm_3_avm();

  // .minieye.HMI_HAVP_CALLBACKS hmi_havp_callbacks = 4;
  bool has_hmi_havp_callbacks() const;
  private:
  bool _internal_has_hmi_havp_callbacks() const;
  public:
  void clear_hmi_havp_callbacks();
  const ::minieye::HMI_HAVP_CALLBACKS& hmi_havp_callbacks() const;
  ::minieye::HMI_HAVP_CALLBACKS* release_hmi_havp_callbacks();
  ::minieye::HMI_HAVP_CALLBACKS* mutable_hmi_havp_callbacks();
  void set_allocated_hmi_havp_callbacks(::minieye::HMI_HAVP_CALLBACKS* hmi_havp_callbacks);
  private:
  const ::minieye::HMI_HAVP_CALLBACKS& _internal_hmi_havp_callbacks() const;
  ::minieye::HMI_HAVP_CALLBACKS* _internal_mutable_hmi_havp_callbacks();
  public:
  void unsafe_arena_set_allocated_hmi_havp_callbacks(
      ::minieye::HMI_HAVP_CALLBACKS* hmi_havp_callbacks);
  ::minieye::HMI_HAVP_CALLBACKS* unsafe_arena_release_hmi_havp_callbacks();

  // uint64 timestamp = 5;
  void clear_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 timestamp() const;
  void set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_timestamp() const;
  void _internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 tick = 6;
  void clear_tick();
  ::PROTOBUF_NAMESPACE_ID::uint64 tick() const;
  void set_tick(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_tick() const;
  void _internal_set_tick(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:minieye.HmiToSoc)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::minieye::RRM_1_AVM* rrm_1_avm_;
  ::minieye::RRM_2_AVM* rrm_2_avm_;
  ::minieye::RRM_3_AVM* rrm_3_avm_;
  ::minieye::HMI_HAVP_CALLBACKS* hmi_havp_callbacks_;
  ::PROTOBUF_NAMESPACE_ID::uint64 timestamp_;
  ::PROTOBUF_NAMESPACE_ID::uint64 tick_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_hmi_5fto_5fsoc_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RRM_1_AVM

// uint32 licenseplate_1 = 1;
inline void RRM_1_AVM::clear_licenseplate_1() {
  licenseplate_1_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_1_AVM::_internal_licenseplate_1() const {
  return licenseplate_1_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_1_AVM::licenseplate_1() const {
  // @@protoc_insertion_point(field_get:minieye.RRM_1_AVM.licenseplate_1)
  return _internal_licenseplate_1();
}
inline void RRM_1_AVM::_internal_set_licenseplate_1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  licenseplate_1_ = value;
}
inline void RRM_1_AVM::set_licenseplate_1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_licenseplate_1(value);
  // @@protoc_insertion_point(field_set:minieye.RRM_1_AVM.licenseplate_1)
}

// uint32 licenseplate_2 = 2;
inline void RRM_1_AVM::clear_licenseplate_2() {
  licenseplate_2_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_1_AVM::_internal_licenseplate_2() const {
  return licenseplate_2_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_1_AVM::licenseplate_2() const {
  // @@protoc_insertion_point(field_get:minieye.RRM_1_AVM.licenseplate_2)
  return _internal_licenseplate_2();
}
inline void RRM_1_AVM::_internal_set_licenseplate_2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  licenseplate_2_ = value;
}
inline void RRM_1_AVM::set_licenseplate_2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_licenseplate_2(value);
  // @@protoc_insertion_point(field_set:minieye.RRM_1_AVM.licenseplate_2)
}

// uint32 licenseplate_3 = 3;
inline void RRM_1_AVM::clear_licenseplate_3() {
  licenseplate_3_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_1_AVM::_internal_licenseplate_3() const {
  return licenseplate_3_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_1_AVM::licenseplate_3() const {
  // @@protoc_insertion_point(field_get:minieye.RRM_1_AVM.licenseplate_3)
  return _internal_licenseplate_3();
}
inline void RRM_1_AVM::_internal_set_licenseplate_3(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  licenseplate_3_ = value;
}
inline void RRM_1_AVM::set_licenseplate_3(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_licenseplate_3(value);
  // @@protoc_insertion_point(field_set:minieye.RRM_1_AVM.licenseplate_3)
}

// uint32 licenseplate_4 = 4;
inline void RRM_1_AVM::clear_licenseplate_4() {
  licenseplate_4_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_1_AVM::_internal_licenseplate_4() const {
  return licenseplate_4_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_1_AVM::licenseplate_4() const {
  // @@protoc_insertion_point(field_get:minieye.RRM_1_AVM.licenseplate_4)
  return _internal_licenseplate_4();
}
inline void RRM_1_AVM::_internal_set_licenseplate_4(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  licenseplate_4_ = value;
}
inline void RRM_1_AVM::set_licenseplate_4(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_licenseplate_4(value);
  // @@protoc_insertion_point(field_set:minieye.RRM_1_AVM.licenseplate_4)
}

// uint32 licenseplate_5 = 5;
inline void RRM_1_AVM::clear_licenseplate_5() {
  licenseplate_5_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_1_AVM::_internal_licenseplate_5() const {
  return licenseplate_5_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_1_AVM::licenseplate_5() const {
  // @@protoc_insertion_point(field_get:minieye.RRM_1_AVM.licenseplate_5)
  return _internal_licenseplate_5();
}
inline void RRM_1_AVM::_internal_set_licenseplate_5(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  licenseplate_5_ = value;
}
inline void RRM_1_AVM::set_licenseplate_5(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_licenseplate_5(value);
  // @@protoc_insertion_point(field_set:minieye.RRM_1_AVM.licenseplate_5)
}

// uint32 licenseplate_6 = 6;
inline void RRM_1_AVM::clear_licenseplate_6() {
  licenseplate_6_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_1_AVM::_internal_licenseplate_6() const {
  return licenseplate_6_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_1_AVM::licenseplate_6() const {
  // @@protoc_insertion_point(field_get:minieye.RRM_1_AVM.licenseplate_6)
  return _internal_licenseplate_6();
}
inline void RRM_1_AVM::_internal_set_licenseplate_6(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  licenseplate_6_ = value;
}
inline void RRM_1_AVM::set_licenseplate_6(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_licenseplate_6(value);
  // @@protoc_insertion_point(field_set:minieye.RRM_1_AVM.licenseplate_6)
}

// uint32 licenseplate_7 = 7;
inline void RRM_1_AVM::clear_licenseplate_7() {
  licenseplate_7_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_1_AVM::_internal_licenseplate_7() const {
  return licenseplate_7_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_1_AVM::licenseplate_7() const {
  // @@protoc_insertion_point(field_get:minieye.RRM_1_AVM.licenseplate_7)
  return _internal_licenseplate_7();
}
inline void RRM_1_AVM::_internal_set_licenseplate_7(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  licenseplate_7_ = value;
}
inline void RRM_1_AVM::set_licenseplate_7(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_licenseplate_7(value);
  // @@protoc_insertion_point(field_set:minieye.RRM_1_AVM.licenseplate_7)
}

// uint32 licenseplate_8 = 8;
inline void RRM_1_AVM::clear_licenseplate_8() {
  licenseplate_8_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_1_AVM::_internal_licenseplate_8() const {
  return licenseplate_8_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_1_AVM::licenseplate_8() const {
  // @@protoc_insertion_point(field_get:minieye.RRM_1_AVM.licenseplate_8)
  return _internal_licenseplate_8();
}
inline void RRM_1_AVM::_internal_set_licenseplate_8(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  licenseplate_8_ = value;
}
inline void RRM_1_AVM::set_licenseplate_8(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_licenseplate_8(value);
  // @@protoc_insertion_point(field_set:minieye.RRM_1_AVM.licenseplate_8)
}

// -------------------------------------------------------------------

// RRM_2_AVM

// uint32 BtnPressInputValueX = 1;
inline void RRM_2_AVM::clear_btnpressinputvaluex() {
  btnpressinputvaluex_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_2_AVM::_internal_btnpressinputvaluex() const {
  return btnpressinputvaluex_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_2_AVM::btnpressinputvaluex() const {
  // @@protoc_insertion_point(field_get:minieye.RRM_2_AVM.BtnPressInputValueX)
  return _internal_btnpressinputvaluex();
}
inline void RRM_2_AVM::_internal_set_btnpressinputvaluex(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  btnpressinputvaluex_ = value;
}
inline void RRM_2_AVM::set_btnpressinputvaluex(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_btnpressinputvaluex(value);
  // @@protoc_insertion_point(field_set:minieye.RRM_2_AVM.BtnPressInputValueX)
}

// uint32 BtnPressInputValueY = 2;
inline void RRM_2_AVM::clear_btnpressinputvaluey() {
  btnpressinputvaluey_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_2_AVM::_internal_btnpressinputvaluey() const {
  return btnpressinputvaluey_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_2_AVM::btnpressinputvaluey() const {
  // @@protoc_insertion_point(field_get:minieye.RRM_2_AVM.BtnPressInputValueY)
  return _internal_btnpressinputvaluey();
}
inline void RRM_2_AVM::_internal_set_btnpressinputvaluey(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  btnpressinputvaluey_ = value;
}
inline void RRM_2_AVM::set_btnpressinputvaluey(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_btnpressinputvaluey(value);
  // @@protoc_insertion_point(field_set:minieye.RRM_2_AVM.BtnPressInputValueY)
}

// uint32 TouchEvt = 3;
inline void RRM_2_AVM::clear_touchevt() {
  touchevt_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_2_AVM::_internal_touchevt() const {
  return touchevt_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_2_AVM::touchevt() const {
  // @@protoc_insertion_point(field_get:minieye.RRM_2_AVM.TouchEvt)
  return _internal_touchevt();
}
inline void RRM_2_AVM::_internal_set_touchevt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  touchevt_ = value;
}
inline void RRM_2_AVM::set_touchevt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_touchevt(value);
  // @@protoc_insertion_point(field_set:minieye.RRM_2_AVM.TouchEvt)
}

// uint32 AVMViewModeSwitch = 4;
inline void RRM_2_AVM::clear_avmviewmodeswitch() {
  avmviewmodeswitch_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_2_AVM::_internal_avmviewmodeswitch() const {
  return avmviewmodeswitch_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_2_AVM::avmviewmodeswitch() const {
  // @@protoc_insertion_point(field_get:minieye.RRM_2_AVM.AVMViewModeSwitch)
  return _internal_avmviewmodeswitch();
}
inline void RRM_2_AVM::_internal_set_avmviewmodeswitch(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  avmviewmodeswitch_ = value;
}
inline void RRM_2_AVM::set_avmviewmodeswitch(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_avmviewmodeswitch(value);
  // @@protoc_insertion_point(field_set:minieye.RRM_2_AVM.AVMViewModeSwitch)
}

// bool AVMTransparentHoodSwitch = 5;
inline void RRM_2_AVM::clear_avmtransparenthoodswitch() {
  avmtransparenthoodswitch_ = false;
}
inline bool RRM_2_AVM::_internal_avmtransparenthoodswitch() const {
  return avmtransparenthoodswitch_;
}
inline bool RRM_2_AVM::avmtransparenthoodswitch() const {
  // @@protoc_insertion_point(field_get:minieye.RRM_2_AVM.AVMTransparentHoodSwitch)
  return _internal_avmtransparenthoodswitch();
}
inline void RRM_2_AVM::_internal_set_avmtransparenthoodswitch(bool value) {
  
  avmtransparenthoodswitch_ = value;
}
inline void RRM_2_AVM::set_avmtransparenthoodswitch(bool value) {
  _internal_set_avmtransparenthoodswitch(value);
  // @@protoc_insertion_point(field_set:minieye.RRM_2_AVM.AVMTransparentHoodSwitch)
}

// bool AVMTrailSwitch = 6;
inline void RRM_2_AVM::clear_avmtrailswitch() {
  avmtrailswitch_ = false;
}
inline bool RRM_2_AVM::_internal_avmtrailswitch() const {
  return avmtrailswitch_;
}
inline bool RRM_2_AVM::avmtrailswitch() const {
  // @@protoc_insertion_point(field_get:minieye.RRM_2_AVM.AVMTrailSwitch)
  return _internal_avmtrailswitch();
}
inline void RRM_2_AVM::_internal_set_avmtrailswitch(bool value) {
  
  avmtrailswitch_ = value;
}
inline void RRM_2_AVM::set_avmtrailswitch(bool value) {
  _internal_set_avmtrailswitch(value);
  // @@protoc_insertion_point(field_set:minieye.RRM_2_AVM.AVMTrailSwitch)
}

// -------------------------------------------------------------------

// RRM_3_AVM

// uint32 APA_OP_SW = 1;
inline void RRM_3_AVM::clear_apa_op_sw() {
  apa_op_sw_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::_internal_apa_op_sw() const {
  return apa_op_sw_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::apa_op_sw() const {
  // @@protoc_insertion_point(field_get:minieye.RRM_3_AVM.APA_OP_SW)
  return _internal_apa_op_sw();
}
inline void RRM_3_AVM::_internal_set_apa_op_sw(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  apa_op_sw_ = value;
}
inline void RRM_3_AVM::set_apa_op_sw(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_apa_op_sw(value);
  // @@protoc_insertion_point(field_set:minieye.RRM_3_AVM.APA_OP_SW)
}

// uint32 APA_Slot_Chosen = 2;
inline void RRM_3_AVM::clear_apa_slot_chosen() {
  apa_slot_chosen_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::_internal_apa_slot_chosen() const {
  return apa_slot_chosen_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::apa_slot_chosen() const {
  // @@protoc_insertion_point(field_get:minieye.RRM_3_AVM.APA_Slot_Chosen)
  return _internal_apa_slot_chosen();
}
inline void RRM_3_AVM::_internal_set_apa_slot_chosen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  apa_slot_chosen_ = value;
}
inline void RRM_3_AVM::set_apa_slot_chosen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_apa_slot_chosen(value);
  // @@protoc_insertion_point(field_set:minieye.RRM_3_AVM.APA_Slot_Chosen)
}

// bool APA_Engage_Confirm = 3;
inline void RRM_3_AVM::clear_apa_engage_confirm() {
  apa_engage_confirm_ = false;
}
inline bool RRM_3_AVM::_internal_apa_engage_confirm() const {
  return apa_engage_confirm_;
}
inline bool RRM_3_AVM::apa_engage_confirm() const {
  // @@protoc_insertion_point(field_get:minieye.RRM_3_AVM.APA_Engage_Confirm)
  return _internal_apa_engage_confirm();
}
inline void RRM_3_AVM::_internal_set_apa_engage_confirm(bool value) {
  
  apa_engage_confirm_ = value;
}
inline void RRM_3_AVM::set_apa_engage_confirm(bool value) {
  _internal_set_apa_engage_confirm(value);
  // @@protoc_insertion_point(field_set:minieye.RRM_3_AVM.APA_Engage_Confirm)
}

// uint32 APA_Suspend_Resume = 4;
inline void RRM_3_AVM::clear_apa_suspend_resume() {
  apa_suspend_resume_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::_internal_apa_suspend_resume() const {
  return apa_suspend_resume_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::apa_suspend_resume() const {
  // @@protoc_insertion_point(field_get:minieye.RRM_3_AVM.APA_Suspend_Resume)
  return _internal_apa_suspend_resume();
}
inline void RRM_3_AVM::_internal_set_apa_suspend_resume(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  apa_suspend_resume_ = value;
}
inline void RRM_3_AVM::set_apa_suspend_resume(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_apa_suspend_resume(value);
  // @@protoc_insertion_point(field_set:minieye.RRM_3_AVM.APA_Suspend_Resume)
}

// uint32 APA_PullOut_Option = 5;
inline void RRM_3_AVM::clear_apa_pullout_option() {
  apa_pullout_option_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::_internal_apa_pullout_option() const {
  return apa_pullout_option_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::apa_pullout_option() const {
  // @@protoc_insertion_point(field_get:minieye.RRM_3_AVM.APA_PullOut_Option)
  return _internal_apa_pullout_option();
}
inline void RRM_3_AVM::_internal_set_apa_pullout_option(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  apa_pullout_option_ = value;
}
inline void RRM_3_AVM::set_apa_pullout_option(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_apa_pullout_option(value);
  // @@protoc_insertion_point(field_set:minieye.RRM_3_AVM.APA_PullOut_Option)
}

// uint32 APA_PullOut_Direction = 6;
inline void RRM_3_AVM::clear_apa_pullout_direction() {
  apa_pullout_direction_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::_internal_apa_pullout_direction() const {
  return apa_pullout_direction_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::apa_pullout_direction() const {
  // @@protoc_insertion_point(field_get:minieye.RRM_3_AVM.APA_PullOut_Direction)
  return _internal_apa_pullout_direction();
}
inline void RRM_3_AVM::_internal_set_apa_pullout_direction(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  apa_pullout_direction_ = value;
}
inline void RRM_3_AVM::set_apa_pullout_direction(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_apa_pullout_direction(value);
  // @@protoc_insertion_point(field_set:minieye.RRM_3_AVM.APA_PullOut_Direction)
}

// uint32 APA_ParkIn_Direction = 7;
inline void RRM_3_AVM::clear_apa_parkin_direction() {
  apa_parkin_direction_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::_internal_apa_parkin_direction() const {
  return apa_parkin_direction_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::apa_parkin_direction() const {
  // @@protoc_insertion_point(field_get:minieye.RRM_3_AVM.APA_ParkIn_Direction)
  return _internal_apa_parkin_direction();
}
inline void RRM_3_AVM::_internal_set_apa_parkin_direction(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  apa_parkin_direction_ = value;
}
inline void RRM_3_AVM::set_apa_parkin_direction(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_apa_parkin_direction(value);
  // @@protoc_insertion_point(field_set:minieye.RRM_3_AVM.APA_ParkIn_Direction)
}

// uint32 AVM_OP_VIEW_DVR_SW = 8;
inline void RRM_3_AVM::clear_avm_op_view_dvr_sw() {
  avm_op_view_dvr_sw_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::_internal_avm_op_view_dvr_sw() const {
  return avm_op_view_dvr_sw_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::avm_op_view_dvr_sw() const {
  // @@protoc_insertion_point(field_get:minieye.RRM_3_AVM.AVM_OP_VIEW_DVR_SW)
  return _internal_avm_op_view_dvr_sw();
}
inline void RRM_3_AVM::_internal_set_avm_op_view_dvr_sw(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  avm_op_view_dvr_sw_ = value;
}
inline void RRM_3_AVM::set_avm_op_view_dvr_sw(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_avm_op_view_dvr_sw(value);
  // @@protoc_insertion_point(field_set:minieye.RRM_3_AVM.AVM_OP_VIEW_DVR_SW)
}

// uint32 Set_SteeringWheel = 9;
inline void RRM_3_AVM::clear_set_steeringwheel() {
  set_steeringwheel_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::_internal_set_steeringwheel() const {
  return set_steeringwheel_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::set_steeringwheel() const {
  // @@protoc_insertion_point(field_get:minieye.RRM_3_AVM.Set_SteeringWheel)
  return _internal_set_steeringwheel();
}
inline void RRM_3_AVM::_internal_set_set_steeringwheel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  set_steeringwheel_ = value;
}
inline void RRM_3_AVM::set_set_steeringwheel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_set_steeringwheel(value);
  // @@protoc_insertion_point(field_set:minieye.RRM_3_AVM.Set_SteeringWheel)
}

// uint32 Set_Language = 10;
inline void RRM_3_AVM::clear_set_language() {
  set_language_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::_internal_set_language() const {
  return set_language_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::set_language() const {
  // @@protoc_insertion_point(field_get:minieye.RRM_3_AVM.Set_Language)
  return _internal_set_language();
}
inline void RRM_3_AVM::_internal_set_set_language(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  set_language_ = value;
}
inline void RRM_3_AVM::set_set_language(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_set_language(value);
  // @@protoc_insertion_point(field_set:minieye.RRM_3_AVM.Set_Language)
}

// uint32 Set_RadarWarining = 11;
inline void RRM_3_AVM::clear_set_radarwarining() {
  set_radarwarining_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::_internal_set_radarwarining() const {
  return set_radarwarining_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::set_radarwarining() const {
  // @@protoc_insertion_point(field_get:minieye.RRM_3_AVM.Set_RadarWarining)
  return _internal_set_radarwarining();
}
inline void RRM_3_AVM::_internal_set_set_radarwarining(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  set_radarwarining_ = value;
}
inline void RRM_3_AVM::set_set_radarwarining(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_set_radarwarining(value);
  // @@protoc_insertion_point(field_set:minieye.RRM_3_AVM.Set_RadarWarining)
}

// uint32 Set_TurnIndication = 12;
inline void RRM_3_AVM::clear_set_turnindication() {
  set_turnindication_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::_internal_set_turnindication() const {
  return set_turnindication_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::set_turnindication() const {
  // @@protoc_insertion_point(field_get:minieye.RRM_3_AVM.Set_TurnIndication)
  return _internal_set_turnindication();
}
inline void RRM_3_AVM::_internal_set_set_turnindication(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  set_turnindication_ = value;
}
inline void RRM_3_AVM::set_set_turnindication(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_set_turnindication(value);
  // @@protoc_insertion_point(field_set:minieye.RRM_3_AVM.Set_TurnIndication)
}

// uint32 Set_BodyColor = 13;
inline void RRM_3_AVM::clear_set_bodycolor() {
  set_bodycolor_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::_internal_set_bodycolor() const {
  return set_bodycolor_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::set_bodycolor() const {
  // @@protoc_insertion_point(field_get:minieye.RRM_3_AVM.Set_BodyColor)
  return _internal_set_bodycolor();
}
inline void RRM_3_AVM::_internal_set_set_bodycolor(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  set_bodycolor_ = value;
}
inline void RRM_3_AVM::set_set_bodycolor(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_set_bodycolor(value);
  // @@protoc_insertion_point(field_set:minieye.RRM_3_AVM.Set_BodyColor)
}

// uint32 Set_AutoZoom = 14;
inline void RRM_3_AVM::clear_set_autozoom() {
  set_autozoom_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::_internal_set_autozoom() const {
  return set_autozoom_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::set_autozoom() const {
  // @@protoc_insertion_point(field_get:minieye.RRM_3_AVM.Set_AutoZoom)
  return _internal_set_autozoom();
}
inline void RRM_3_AVM::_internal_set_set_autozoom(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  set_autozoom_ = value;
}
inline void RRM_3_AVM::set_set_autozoom(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_set_autozoom(value);
  // @@protoc_insertion_point(field_set:minieye.RRM_3_AVM.Set_AutoZoom)
}

// uint32 Set_PASTrigger = 15;
inline void RRM_3_AVM::clear_set_pastrigger() {
  set_pastrigger_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::_internal_set_pastrigger() const {
  return set_pastrigger_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::set_pastrigger() const {
  // @@protoc_insertion_point(field_get:minieye.RRM_3_AVM.Set_PASTrigger)
  return _internal_set_pastrigger();
}
inline void RRM_3_AVM::_internal_set_set_pastrigger(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  set_pastrigger_ = value;
}
inline void RRM_3_AVM::set_set_pastrigger(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_set_pastrigger(value);
  // @@protoc_insertion_point(field_set:minieye.RRM_3_AVM.Set_PASTrigger)
}

// uint32 Set_Transparency = 16;
inline void RRM_3_AVM::clear_set_transparency() {
  set_transparency_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::_internal_set_transparency() const {
  return set_transparency_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::set_transparency() const {
  // @@protoc_insertion_point(field_get:minieye.RRM_3_AVM.Set_Transparency)
  return _internal_set_transparency();
}
inline void RRM_3_AVM::_internal_set_set_transparency(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  set_transparency_ = value;
}
inline void RRM_3_AVM::set_set_transparency(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_set_transparency(value);
  // @@protoc_insertion_point(field_set:minieye.RRM_3_AVM.Set_Transparency)
}

// uint32 Set_AutoExit = 17;
inline void RRM_3_AVM::clear_set_autoexit() {
  set_autoexit_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::_internal_set_autoexit() const {
  return set_autoexit_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::set_autoexit() const {
  // @@protoc_insertion_point(field_get:minieye.RRM_3_AVM.Set_AutoExit)
  return _internal_set_autoexit();
}
inline void RRM_3_AVM::_internal_set_set_autoexit(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  set_autoexit_ = value;
}
inline void RRM_3_AVM::set_set_autoexit(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_set_autoexit(value);
  // @@protoc_insertion_point(field_set:minieye.RRM_3_AVM.Set_AutoExit)
}

// uint32 Set_LicensePlate = 18;
inline void RRM_3_AVM::clear_set_licenseplate() {
  set_licenseplate_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::_internal_set_licenseplate() const {
  return set_licenseplate_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::set_licenseplate() const {
  // @@protoc_insertion_point(field_get:minieye.RRM_3_AVM.Set_LicensePlate)
  return _internal_set_licenseplate();
}
inline void RRM_3_AVM::_internal_set_set_licenseplate(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  set_licenseplate_ = value;
}
inline void RRM_3_AVM::set_set_licenseplate(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_set_licenseplate(value);
  // @@protoc_insertion_point(field_set:minieye.RRM_3_AVM.Set_LicensePlate)
}

// uint32 Set_GuideLine = 19;
inline void RRM_3_AVM::clear_set_guideline() {
  set_guideline_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::_internal_set_guideline() const {
  return set_guideline_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::set_guideline() const {
  // @@protoc_insertion_point(field_get:minieye.RRM_3_AVM.Set_GuideLine)
  return _internal_set_guideline();
}
inline void RRM_3_AVM::_internal_set_set_guideline(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  set_guideline_ = value;
}
inline void RRM_3_AVM::set_set_guideline(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_set_guideline(value);
  // @@protoc_insertion_point(field_set:minieye.RRM_3_AVM.Set_GuideLine)
}

// uint32 Set_FactoryDefault = 20;
inline void RRM_3_AVM::clear_set_factorydefault() {
  set_factorydefault_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::_internal_set_factorydefault() const {
  return set_factorydefault_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::set_factorydefault() const {
  // @@protoc_insertion_point(field_get:minieye.RRM_3_AVM.Set_FactoryDefault)
  return _internal_set_factorydefault();
}
inline void RRM_3_AVM::_internal_set_set_factorydefault(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  set_factorydefault_ = value;
}
inline void RRM_3_AVM::set_set_factorydefault(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_set_factorydefault(value);
  // @@protoc_insertion_point(field_set:minieye.RRM_3_AVM.Set_FactoryDefault)
}

// uint32 Plan_type = 21;
inline void RRM_3_AVM::clear_plan_type() {
  plan_type_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::_internal_plan_type() const {
  return plan_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RRM_3_AVM::plan_type() const {
  // @@protoc_insertion_point(field_get:minieye.RRM_3_AVM.Plan_type)
  return _internal_plan_type();
}
inline void RRM_3_AVM::_internal_set_plan_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  plan_type_ = value;
}
inline void RRM_3_AVM::set_plan_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_plan_type(value);
  // @@protoc_insertion_point(field_set:minieye.RRM_3_AVM.Plan_type)
}

// -------------------------------------------------------------------

// HMI_HAVP_CALLBACKS

// bool HAVP_Engage_Confim = 1;
inline void HMI_HAVP_CALLBACKS::clear_havp_engage_confim() {
  havp_engage_confim_ = false;
}
inline bool HMI_HAVP_CALLBACKS::_internal_havp_engage_confim() const {
  return havp_engage_confim_;
}
inline bool HMI_HAVP_CALLBACKS::havp_engage_confim() const {
  // @@protoc_insertion_point(field_get:minieye.HMI_HAVP_CALLBACKS.HAVP_Engage_Confim)
  return _internal_havp_engage_confim();
}
inline void HMI_HAVP_CALLBACKS::_internal_set_havp_engage_confim(bool value) {
  
  havp_engage_confim_ = value;
}
inline void HMI_HAVP_CALLBACKS::set_havp_engage_confim(bool value) {
  _internal_set_havp_engage_confim(value);
  // @@protoc_insertion_point(field_set:minieye.HMI_HAVP_CALLBACKS.HAVP_Engage_Confim)
}

// bool HAVP_Build_Map_Confirm = 2;
inline void HMI_HAVP_CALLBACKS::clear_havp_build_map_confirm() {
  havp_build_map_confirm_ = false;
}
inline bool HMI_HAVP_CALLBACKS::_internal_havp_build_map_confirm() const {
  return havp_build_map_confirm_;
}
inline bool HMI_HAVP_CALLBACKS::havp_build_map_confirm() const {
  // @@protoc_insertion_point(field_get:minieye.HMI_HAVP_CALLBACKS.HAVP_Build_Map_Confirm)
  return _internal_havp_build_map_confirm();
}
inline void HMI_HAVP_CALLBACKS::_internal_set_havp_build_map_confirm(bool value) {
  
  havp_build_map_confirm_ = value;
}
inline void HMI_HAVP_CALLBACKS::set_havp_build_map_confirm(bool value) {
  _internal_set_havp_build_map_confirm(value);
  // @@protoc_insertion_point(field_set:minieye.HMI_HAVP_CALLBACKS.HAVP_Build_Map_Confirm)
}

// bool HAVP_Build_Map_Finished = 3;
inline void HMI_HAVP_CALLBACKS::clear_havp_build_map_finished() {
  havp_build_map_finished_ = false;
}
inline bool HMI_HAVP_CALLBACKS::_internal_havp_build_map_finished() const {
  return havp_build_map_finished_;
}
inline bool HMI_HAVP_CALLBACKS::havp_build_map_finished() const {
  // @@protoc_insertion_point(field_get:minieye.HMI_HAVP_CALLBACKS.HAVP_Build_Map_Finished)
  return _internal_havp_build_map_finished();
}
inline void HMI_HAVP_CALLBACKS::_internal_set_havp_build_map_finished(bool value) {
  
  havp_build_map_finished_ = value;
}
inline void HMI_HAVP_CALLBACKS::set_havp_build_map_finished(bool value) {
  _internal_set_havp_build_map_finished(value);
  // @@protoc_insertion_point(field_set:minieye.HMI_HAVP_CALLBACKS.HAVP_Build_Map_Finished)
}

// bool HAVP_Exit = 4;
inline void HMI_HAVP_CALLBACKS::clear_havp_exit() {
  havp_exit_ = false;
}
inline bool HMI_HAVP_CALLBACKS::_internal_havp_exit() const {
  return havp_exit_;
}
inline bool HMI_HAVP_CALLBACKS::havp_exit() const {
  // @@protoc_insertion_point(field_get:minieye.HMI_HAVP_CALLBACKS.HAVP_Exit)
  return _internal_havp_exit();
}
inline void HMI_HAVP_CALLBACKS::_internal_set_havp_exit(bool value) {
  
  havp_exit_ = value;
}
inline void HMI_HAVP_CALLBACKS::set_havp_exit(bool value) {
  _internal_set_havp_exit(value);
  // @@protoc_insertion_point(field_set:minieye.HMI_HAVP_CALLBACKS.HAVP_Exit)
}

// bool HAVP_Build_Map_Park_Manual = 5;
inline void HMI_HAVP_CALLBACKS::clear_havp_build_map_park_manual() {
  havp_build_map_park_manual_ = false;
}
inline bool HMI_HAVP_CALLBACKS::_internal_havp_build_map_park_manual() const {
  return havp_build_map_park_manual_;
}
inline bool HMI_HAVP_CALLBACKS::havp_build_map_park_manual() const {
  // @@protoc_insertion_point(field_get:minieye.HMI_HAVP_CALLBACKS.HAVP_Build_Map_Park_Manual)
  return _internal_havp_build_map_park_manual();
}
inline void HMI_HAVP_CALLBACKS::_internal_set_havp_build_map_park_manual(bool value) {
  
  havp_build_map_park_manual_ = value;
}
inline void HMI_HAVP_CALLBACKS::set_havp_build_map_park_manual(bool value) {
  _internal_set_havp_build_map_park_manual(value);
  // @@protoc_insertion_point(field_set:minieye.HMI_HAVP_CALLBACKS.HAVP_Build_Map_Park_Manual)
}

// bool HAVP_Start = 6;
inline void HMI_HAVP_CALLBACKS::clear_havp_start() {
  havp_start_ = false;
}
inline bool HMI_HAVP_CALLBACKS::_internal_havp_start() const {
  return havp_start_;
}
inline bool HMI_HAVP_CALLBACKS::havp_start() const {
  // @@protoc_insertion_point(field_get:minieye.HMI_HAVP_CALLBACKS.HAVP_Start)
  return _internal_havp_start();
}
inline void HMI_HAVP_CALLBACKS::_internal_set_havp_start(bool value) {
  
  havp_start_ = value;
}
inline void HMI_HAVP_CALLBACKS::set_havp_start(bool value) {
  _internal_set_havp_start(value);
  // @@protoc_insertion_point(field_set:minieye.HMI_HAVP_CALLBACKS.HAVP_Start)
}

// bool HAVP_Build_Map_Back_To_Learning = 7;
inline void HMI_HAVP_CALLBACKS::clear_havp_build_map_back_to_learning() {
  havp_build_map_back_to_learning_ = false;
}
inline bool HMI_HAVP_CALLBACKS::_internal_havp_build_map_back_to_learning() const {
  return havp_build_map_back_to_learning_;
}
inline bool HMI_HAVP_CALLBACKS::havp_build_map_back_to_learning() const {
  // @@protoc_insertion_point(field_get:minieye.HMI_HAVP_CALLBACKS.HAVP_Build_Map_Back_To_Learning)
  return _internal_havp_build_map_back_to_learning();
}
inline void HMI_HAVP_CALLBACKS::_internal_set_havp_build_map_back_to_learning(bool value) {
  
  havp_build_map_back_to_learning_ = value;
}
inline void HMI_HAVP_CALLBACKS::set_havp_build_map_back_to_learning(bool value) {
  _internal_set_havp_build_map_back_to_learning(value);
  // @@protoc_insertion_point(field_set:minieye.HMI_HAVP_CALLBACKS.HAVP_Build_Map_Back_To_Learning)
}

// uint32 HAVP_Parking_Control_Deceleration_Enum = 8;
inline void HMI_HAVP_CALLBACKS::clear_havp_parking_control_deceleration_enum() {
  havp_parking_control_deceleration_enum_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HMI_HAVP_CALLBACKS::_internal_havp_parking_control_deceleration_enum() const {
  return havp_parking_control_deceleration_enum_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HMI_HAVP_CALLBACKS::havp_parking_control_deceleration_enum() const {
  // @@protoc_insertion_point(field_get:minieye.HMI_HAVP_CALLBACKS.HAVP_Parking_Control_Deceleration_Enum)
  return _internal_havp_parking_control_deceleration_enum();
}
inline void HMI_HAVP_CALLBACKS::_internal_set_havp_parking_control_deceleration_enum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  havp_parking_control_deceleration_enum_ = value;
}
inline void HMI_HAVP_CALLBACKS::set_havp_parking_control_deceleration_enum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_havp_parking_control_deceleration_enum(value);
  // @@protoc_insertion_point(field_set:minieye.HMI_HAVP_CALLBACKS.HAVP_Parking_Control_Deceleration_Enum)
}

// bool HAVP_Parking_Continue_Search_Parking = 9;
inline void HMI_HAVP_CALLBACKS::clear_havp_parking_continue_search_parking() {
  havp_parking_continue_search_parking_ = false;
}
inline bool HMI_HAVP_CALLBACKS::_internal_havp_parking_continue_search_parking() const {
  return havp_parking_continue_search_parking_;
}
inline bool HMI_HAVP_CALLBACKS::havp_parking_continue_search_parking() const {
  // @@protoc_insertion_point(field_get:minieye.HMI_HAVP_CALLBACKS.HAVP_Parking_Continue_Search_Parking)
  return _internal_havp_parking_continue_search_parking();
}
inline void HMI_HAVP_CALLBACKS::_internal_set_havp_parking_continue_search_parking(bool value) {
  
  havp_parking_continue_search_parking_ = value;
}
inline void HMI_HAVP_CALLBACKS::set_havp_parking_continue_search_parking(bool value) {
  _internal_set_havp_parking_continue_search_parking(value);
  // @@protoc_insertion_point(field_set:minieye.HMI_HAVP_CALLBACKS.HAVP_Parking_Continue_Search_Parking)
}

// -------------------------------------------------------------------

// HmiToSoc

// .minieye.RRM_1_AVM rrm_1_avm = 1;
inline bool HmiToSoc::_internal_has_rrm_1_avm() const {
  return this != internal_default_instance() && rrm_1_avm_ != nullptr;
}
inline bool HmiToSoc::has_rrm_1_avm() const {
  return _internal_has_rrm_1_avm();
}
inline void HmiToSoc::clear_rrm_1_avm() {
  if (GetArena() == nullptr && rrm_1_avm_ != nullptr) {
    delete rrm_1_avm_;
  }
  rrm_1_avm_ = nullptr;
}
inline const ::minieye::RRM_1_AVM& HmiToSoc::_internal_rrm_1_avm() const {
  const ::minieye::RRM_1_AVM* p = rrm_1_avm_;
  return p != nullptr ? *p : *reinterpret_cast<const ::minieye::RRM_1_AVM*>(
      &::minieye::_RRM_1_AVM_default_instance_);
}
inline const ::minieye::RRM_1_AVM& HmiToSoc::rrm_1_avm() const {
  // @@protoc_insertion_point(field_get:minieye.HmiToSoc.rrm_1_avm)
  return _internal_rrm_1_avm();
}
inline void HmiToSoc::unsafe_arena_set_allocated_rrm_1_avm(
    ::minieye::RRM_1_AVM* rrm_1_avm) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rrm_1_avm_);
  }
  rrm_1_avm_ = rrm_1_avm;
  if (rrm_1_avm) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:minieye.HmiToSoc.rrm_1_avm)
}
inline ::minieye::RRM_1_AVM* HmiToSoc::release_rrm_1_avm() {
  auto temp = unsafe_arena_release_rrm_1_avm();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::minieye::RRM_1_AVM* HmiToSoc::unsafe_arena_release_rrm_1_avm() {
  // @@protoc_insertion_point(field_release:minieye.HmiToSoc.rrm_1_avm)
  
  ::minieye::RRM_1_AVM* temp = rrm_1_avm_;
  rrm_1_avm_ = nullptr;
  return temp;
}
inline ::minieye::RRM_1_AVM* HmiToSoc::_internal_mutable_rrm_1_avm() {
  
  if (rrm_1_avm_ == nullptr) {
    auto* p = CreateMaybeMessage<::minieye::RRM_1_AVM>(GetArena());
    rrm_1_avm_ = p;
  }
  return rrm_1_avm_;
}
inline ::minieye::RRM_1_AVM* HmiToSoc::mutable_rrm_1_avm() {
  // @@protoc_insertion_point(field_mutable:minieye.HmiToSoc.rrm_1_avm)
  return _internal_mutable_rrm_1_avm();
}
inline void HmiToSoc::set_allocated_rrm_1_avm(::minieye::RRM_1_AVM* rrm_1_avm) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete rrm_1_avm_;
  }
  if (rrm_1_avm) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(rrm_1_avm);
    if (message_arena != submessage_arena) {
      rrm_1_avm = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rrm_1_avm, submessage_arena);
    }
    
  } else {
    
  }
  rrm_1_avm_ = rrm_1_avm;
  // @@protoc_insertion_point(field_set_allocated:minieye.HmiToSoc.rrm_1_avm)
}

// .minieye.RRM_2_AVM rrm_2_avm = 2;
inline bool HmiToSoc::_internal_has_rrm_2_avm() const {
  return this != internal_default_instance() && rrm_2_avm_ != nullptr;
}
inline bool HmiToSoc::has_rrm_2_avm() const {
  return _internal_has_rrm_2_avm();
}
inline void HmiToSoc::clear_rrm_2_avm() {
  if (GetArena() == nullptr && rrm_2_avm_ != nullptr) {
    delete rrm_2_avm_;
  }
  rrm_2_avm_ = nullptr;
}
inline const ::minieye::RRM_2_AVM& HmiToSoc::_internal_rrm_2_avm() const {
  const ::minieye::RRM_2_AVM* p = rrm_2_avm_;
  return p != nullptr ? *p : *reinterpret_cast<const ::minieye::RRM_2_AVM*>(
      &::minieye::_RRM_2_AVM_default_instance_);
}
inline const ::minieye::RRM_2_AVM& HmiToSoc::rrm_2_avm() const {
  // @@protoc_insertion_point(field_get:minieye.HmiToSoc.rrm_2_avm)
  return _internal_rrm_2_avm();
}
inline void HmiToSoc::unsafe_arena_set_allocated_rrm_2_avm(
    ::minieye::RRM_2_AVM* rrm_2_avm) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rrm_2_avm_);
  }
  rrm_2_avm_ = rrm_2_avm;
  if (rrm_2_avm) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:minieye.HmiToSoc.rrm_2_avm)
}
inline ::minieye::RRM_2_AVM* HmiToSoc::release_rrm_2_avm() {
  auto temp = unsafe_arena_release_rrm_2_avm();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::minieye::RRM_2_AVM* HmiToSoc::unsafe_arena_release_rrm_2_avm() {
  // @@protoc_insertion_point(field_release:minieye.HmiToSoc.rrm_2_avm)
  
  ::minieye::RRM_2_AVM* temp = rrm_2_avm_;
  rrm_2_avm_ = nullptr;
  return temp;
}
inline ::minieye::RRM_2_AVM* HmiToSoc::_internal_mutable_rrm_2_avm() {
  
  if (rrm_2_avm_ == nullptr) {
    auto* p = CreateMaybeMessage<::minieye::RRM_2_AVM>(GetArena());
    rrm_2_avm_ = p;
  }
  return rrm_2_avm_;
}
inline ::minieye::RRM_2_AVM* HmiToSoc::mutable_rrm_2_avm() {
  // @@protoc_insertion_point(field_mutable:minieye.HmiToSoc.rrm_2_avm)
  return _internal_mutable_rrm_2_avm();
}
inline void HmiToSoc::set_allocated_rrm_2_avm(::minieye::RRM_2_AVM* rrm_2_avm) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete rrm_2_avm_;
  }
  if (rrm_2_avm) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(rrm_2_avm);
    if (message_arena != submessage_arena) {
      rrm_2_avm = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rrm_2_avm, submessage_arena);
    }
    
  } else {
    
  }
  rrm_2_avm_ = rrm_2_avm;
  // @@protoc_insertion_point(field_set_allocated:minieye.HmiToSoc.rrm_2_avm)
}

// .minieye.RRM_3_AVM rrm_3_avm = 3;
inline bool HmiToSoc::_internal_has_rrm_3_avm() const {
  return this != internal_default_instance() && rrm_3_avm_ != nullptr;
}
inline bool HmiToSoc::has_rrm_3_avm() const {
  return _internal_has_rrm_3_avm();
}
inline void HmiToSoc::clear_rrm_3_avm() {
  if (GetArena() == nullptr && rrm_3_avm_ != nullptr) {
    delete rrm_3_avm_;
  }
  rrm_3_avm_ = nullptr;
}
inline const ::minieye::RRM_3_AVM& HmiToSoc::_internal_rrm_3_avm() const {
  const ::minieye::RRM_3_AVM* p = rrm_3_avm_;
  return p != nullptr ? *p : *reinterpret_cast<const ::minieye::RRM_3_AVM*>(
      &::minieye::_RRM_3_AVM_default_instance_);
}
inline const ::minieye::RRM_3_AVM& HmiToSoc::rrm_3_avm() const {
  // @@protoc_insertion_point(field_get:minieye.HmiToSoc.rrm_3_avm)
  return _internal_rrm_3_avm();
}
inline void HmiToSoc::unsafe_arena_set_allocated_rrm_3_avm(
    ::minieye::RRM_3_AVM* rrm_3_avm) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rrm_3_avm_);
  }
  rrm_3_avm_ = rrm_3_avm;
  if (rrm_3_avm) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:minieye.HmiToSoc.rrm_3_avm)
}
inline ::minieye::RRM_3_AVM* HmiToSoc::release_rrm_3_avm() {
  auto temp = unsafe_arena_release_rrm_3_avm();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::minieye::RRM_3_AVM* HmiToSoc::unsafe_arena_release_rrm_3_avm() {
  // @@protoc_insertion_point(field_release:minieye.HmiToSoc.rrm_3_avm)
  
  ::minieye::RRM_3_AVM* temp = rrm_3_avm_;
  rrm_3_avm_ = nullptr;
  return temp;
}
inline ::minieye::RRM_3_AVM* HmiToSoc::_internal_mutable_rrm_3_avm() {
  
  if (rrm_3_avm_ == nullptr) {
    auto* p = CreateMaybeMessage<::minieye::RRM_3_AVM>(GetArena());
    rrm_3_avm_ = p;
  }
  return rrm_3_avm_;
}
inline ::minieye::RRM_3_AVM* HmiToSoc::mutable_rrm_3_avm() {
  // @@protoc_insertion_point(field_mutable:minieye.HmiToSoc.rrm_3_avm)
  return _internal_mutable_rrm_3_avm();
}
inline void HmiToSoc::set_allocated_rrm_3_avm(::minieye::RRM_3_AVM* rrm_3_avm) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete rrm_3_avm_;
  }
  if (rrm_3_avm) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(rrm_3_avm);
    if (message_arena != submessage_arena) {
      rrm_3_avm = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rrm_3_avm, submessage_arena);
    }
    
  } else {
    
  }
  rrm_3_avm_ = rrm_3_avm;
  // @@protoc_insertion_point(field_set_allocated:minieye.HmiToSoc.rrm_3_avm)
}

// .minieye.HMI_HAVP_CALLBACKS hmi_havp_callbacks = 4;
inline bool HmiToSoc::_internal_has_hmi_havp_callbacks() const {
  return this != internal_default_instance() && hmi_havp_callbacks_ != nullptr;
}
inline bool HmiToSoc::has_hmi_havp_callbacks() const {
  return _internal_has_hmi_havp_callbacks();
}
inline void HmiToSoc::clear_hmi_havp_callbacks() {
  if (GetArena() == nullptr && hmi_havp_callbacks_ != nullptr) {
    delete hmi_havp_callbacks_;
  }
  hmi_havp_callbacks_ = nullptr;
}
inline const ::minieye::HMI_HAVP_CALLBACKS& HmiToSoc::_internal_hmi_havp_callbacks() const {
  const ::minieye::HMI_HAVP_CALLBACKS* p = hmi_havp_callbacks_;
  return p != nullptr ? *p : *reinterpret_cast<const ::minieye::HMI_HAVP_CALLBACKS*>(
      &::minieye::_HMI_HAVP_CALLBACKS_default_instance_);
}
inline const ::minieye::HMI_HAVP_CALLBACKS& HmiToSoc::hmi_havp_callbacks() const {
  // @@protoc_insertion_point(field_get:minieye.HmiToSoc.hmi_havp_callbacks)
  return _internal_hmi_havp_callbacks();
}
inline void HmiToSoc::unsafe_arena_set_allocated_hmi_havp_callbacks(
    ::minieye::HMI_HAVP_CALLBACKS* hmi_havp_callbacks) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(hmi_havp_callbacks_);
  }
  hmi_havp_callbacks_ = hmi_havp_callbacks;
  if (hmi_havp_callbacks) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:minieye.HmiToSoc.hmi_havp_callbacks)
}
inline ::minieye::HMI_HAVP_CALLBACKS* HmiToSoc::release_hmi_havp_callbacks() {
  auto temp = unsafe_arena_release_hmi_havp_callbacks();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::minieye::HMI_HAVP_CALLBACKS* HmiToSoc::unsafe_arena_release_hmi_havp_callbacks() {
  // @@protoc_insertion_point(field_release:minieye.HmiToSoc.hmi_havp_callbacks)
  
  ::minieye::HMI_HAVP_CALLBACKS* temp = hmi_havp_callbacks_;
  hmi_havp_callbacks_ = nullptr;
  return temp;
}
inline ::minieye::HMI_HAVP_CALLBACKS* HmiToSoc::_internal_mutable_hmi_havp_callbacks() {
  
  if (hmi_havp_callbacks_ == nullptr) {
    auto* p = CreateMaybeMessage<::minieye::HMI_HAVP_CALLBACKS>(GetArena());
    hmi_havp_callbacks_ = p;
  }
  return hmi_havp_callbacks_;
}
inline ::minieye::HMI_HAVP_CALLBACKS* HmiToSoc::mutable_hmi_havp_callbacks() {
  // @@protoc_insertion_point(field_mutable:minieye.HmiToSoc.hmi_havp_callbacks)
  return _internal_mutable_hmi_havp_callbacks();
}
inline void HmiToSoc::set_allocated_hmi_havp_callbacks(::minieye::HMI_HAVP_CALLBACKS* hmi_havp_callbacks) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete hmi_havp_callbacks_;
  }
  if (hmi_havp_callbacks) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(hmi_havp_callbacks);
    if (message_arena != submessage_arena) {
      hmi_havp_callbacks = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, hmi_havp_callbacks, submessage_arena);
    }
    
  } else {
    
  }
  hmi_havp_callbacks_ = hmi_havp_callbacks;
  // @@protoc_insertion_point(field_set_allocated:minieye.HmiToSoc.hmi_havp_callbacks)
}

// uint64 timestamp = 5;
inline void HmiToSoc::clear_timestamp() {
  timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HmiToSoc::_internal_timestamp() const {
  return timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HmiToSoc::timestamp() const {
  // @@protoc_insertion_point(field_get:minieye.HmiToSoc.timestamp)
  return _internal_timestamp();
}
inline void HmiToSoc::_internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  timestamp_ = value;
}
inline void HmiToSoc::set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:minieye.HmiToSoc.timestamp)
}

// uint64 tick = 6;
inline void HmiToSoc::clear_tick() {
  tick_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HmiToSoc::_internal_tick() const {
  return tick_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HmiToSoc::tick() const {
  // @@protoc_insertion_point(field_get:minieye.HmiToSoc.tick)
  return _internal_tick();
}
inline void HmiToSoc::_internal_set_tick(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  tick_ = value;
}
inline void HmiToSoc::set_tick(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_tick(value);
  // @@protoc_insertion_point(field_set:minieye.HmiToSoc.tick)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace minieye

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_hmi_5fto_5fsoc_2eproto
