// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pedestrian.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_pedestrian_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_pedestrian_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "geometry.pb.h"
#include "data_source.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_pedestrian_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_pedestrian_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_pedestrian_2eproto;
namespace perception {
class Pedestrian;
class PedestrianDefaultTypeInternal;
extern PedestrianDefaultTypeInternal _Pedestrian_default_instance_;
class Pedestrian_PedDetExport;
class Pedestrian_PedDetExportDefaultTypeInternal;
extern Pedestrian_PedDetExportDefaultTypeInternal _Pedestrian_PedDetExport_default_instance_;
class Pedestrian_PedWarningExport;
class Pedestrian_PedWarningExportDefaultTypeInternal;
extern Pedestrian_PedWarningExportDefaultTypeInternal _Pedestrian_PedWarningExport_default_instance_;
}  // namespace perception
PROTOBUF_NAMESPACE_OPEN
template<> ::perception::Pedestrian* Arena::CreateMaybeMessage<::perception::Pedestrian>(Arena*);
template<> ::perception::Pedestrian_PedDetExport* Arena::CreateMaybeMessage<::perception::Pedestrian_PedDetExport>(Arena*);
template<> ::perception::Pedestrian_PedWarningExport* Arena::CreateMaybeMessage<::perception::Pedestrian_PedWarningExport>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace perception {

// ===================================================================

class Pedestrian_PedDetExport PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perception.Pedestrian.PedDetExport) */ {
 public:
  inline Pedestrian_PedDetExport() : Pedestrian_PedDetExport(nullptr) {};
  virtual ~Pedestrian_PedDetExport();

  Pedestrian_PedDetExport(const Pedestrian_PedDetExport& from);
  Pedestrian_PedDetExport(Pedestrian_PedDetExport&& from) noexcept
    : Pedestrian_PedDetExport() {
    *this = ::std::move(from);
  }

  inline Pedestrian_PedDetExport& operator=(const Pedestrian_PedDetExport& from) {
    CopyFrom(from);
    return *this;
  }
  inline Pedestrian_PedDetExport& operator=(Pedestrian_PedDetExport&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Pedestrian_PedDetExport& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Pedestrian_PedDetExport* internal_default_instance() {
    return reinterpret_cast<const Pedestrian_PedDetExport*>(
               &_Pedestrian_PedDetExport_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Pedestrian_PedDetExport& a, Pedestrian_PedDetExport& b) {
    a.Swap(&b);
  }
  inline void Swap(Pedestrian_PedDetExport* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Pedestrian_PedDetExport* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Pedestrian_PedDetExport* New() const final {
    return CreateMaybeMessage<Pedestrian_PedDetExport>(nullptr);
  }

  Pedestrian_PedDetExport* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Pedestrian_PedDetExport>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Pedestrian_PedDetExport& from);
  void MergeFrom(const Pedestrian_PedDetExport& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Pedestrian_PedDetExport* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "perception.Pedestrian.PedDetExport";
  }
  protected:
  explicit Pedestrian_PedDetExport(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_pedestrian_2eproto);
    return ::descriptor_table_pedestrian_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDetectBoxFieldNumber = 1,
    kRegBoxFieldNumber = 2,
    kTrackBoxFieldNumber = 3,
    kBikeBoxFieldNumber = 4,
    kConfidenceFieldNumber = 5,
    kDetectStatusFieldNumber = 6,
    kTIdFieldNumber = 7,
    kUniqueIdFieldNumber = 8,
    kTimeMsFieldNumber = 9,
    kWorldXFieldNumber = 11,
    kWorldYFieldNumber = 12,
    kPosAngleFieldNumber = 13,
    kTtcMFieldNumber = 14,
    kTtcFieldNumber = 15,
    kLongitudinalVelocityFieldNumber = 16,
    kLateralVelocityFieldNumber = 17,
    kRealHFieldNumber = 18,
    kPredictedFieldNumber = 10,
    kIsLongitudinalCloseFieldNumber = 20,
    kIsLateralCloseFieldNumber = 21,
    kIsMeasureNotStableFieldNumber = 22,
    kRealWFieldNumber = 19,
    kHaveBikeFieldNumber = 23,
    kIsKeyFieldNumber = 24,
    kIsDangerFieldNumber = 25,
  };
  // .perception.common.Rect2f detect_box = 1;
  bool has_detect_box() const;
  private:
  bool _internal_has_detect_box() const;
  public:
  void clear_detect_box();
  const ::perception::common::Rect2f& detect_box() const;
  ::perception::common::Rect2f* release_detect_box();
  ::perception::common::Rect2f* mutable_detect_box();
  void set_allocated_detect_box(::perception::common::Rect2f* detect_box);
  private:
  const ::perception::common::Rect2f& _internal_detect_box() const;
  ::perception::common::Rect2f* _internal_mutable_detect_box();
  public:
  void unsafe_arena_set_allocated_detect_box(
      ::perception::common::Rect2f* detect_box);
  ::perception::common::Rect2f* unsafe_arena_release_detect_box();

  // .perception.common.Rect2f reg_box = 2;
  bool has_reg_box() const;
  private:
  bool _internal_has_reg_box() const;
  public:
  void clear_reg_box();
  const ::perception::common::Rect2f& reg_box() const;
  ::perception::common::Rect2f* release_reg_box();
  ::perception::common::Rect2f* mutable_reg_box();
  void set_allocated_reg_box(::perception::common::Rect2f* reg_box);
  private:
  const ::perception::common::Rect2f& _internal_reg_box() const;
  ::perception::common::Rect2f* _internal_mutable_reg_box();
  public:
  void unsafe_arena_set_allocated_reg_box(
      ::perception::common::Rect2f* reg_box);
  ::perception::common::Rect2f* unsafe_arena_release_reg_box();

  // .perception.common.Rect2f track_box = 3;
  bool has_track_box() const;
  private:
  bool _internal_has_track_box() const;
  public:
  void clear_track_box();
  const ::perception::common::Rect2f& track_box() const;
  ::perception::common::Rect2f* release_track_box();
  ::perception::common::Rect2f* mutable_track_box();
  void set_allocated_track_box(::perception::common::Rect2f* track_box);
  private:
  const ::perception::common::Rect2f& _internal_track_box() const;
  ::perception::common::Rect2f* _internal_mutable_track_box();
  public:
  void unsafe_arena_set_allocated_track_box(
      ::perception::common::Rect2f* track_box);
  ::perception::common::Rect2f* unsafe_arena_release_track_box();

  // .perception.common.Rect2f bike_box = 4;
  bool has_bike_box() const;
  private:
  bool _internal_has_bike_box() const;
  public:
  void clear_bike_box();
  const ::perception::common::Rect2f& bike_box() const;
  ::perception::common::Rect2f* release_bike_box();
  ::perception::common::Rect2f* mutable_bike_box();
  void set_allocated_bike_box(::perception::common::Rect2f* bike_box);
  private:
  const ::perception::common::Rect2f& _internal_bike_box() const;
  ::perception::common::Rect2f* _internal_mutable_bike_box();
  public:
  void unsafe_arena_set_allocated_bike_box(
      ::perception::common::Rect2f* bike_box);
  ::perception::common::Rect2f* unsafe_arena_release_bike_box();

  // float confidence = 5;
  void clear_confidence();
  float confidence() const;
  void set_confidence(float value);
  private:
  float _internal_confidence() const;
  void _internal_set_confidence(float value);
  public:

  // int32 detect_status = 6;
  void clear_detect_status();
  ::PROTOBUF_NAMESPACE_ID::int32 detect_status() const;
  void set_detect_status(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_detect_status() const;
  void _internal_set_detect_status(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 t_id = 7;
  void clear_t_id();
  ::PROTOBUF_NAMESPACE_ID::int32 t_id() const;
  void set_t_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_t_id() const;
  void _internal_set_t_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 unique_id = 8;
  void clear_unique_id();
  ::PROTOBUF_NAMESPACE_ID::int32 unique_id() const;
  void set_unique_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_unique_id() const;
  void _internal_set_unique_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 time_ms = 9;
  void clear_time_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 time_ms() const;
  void set_time_ms(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_time_ms() const;
  void _internal_set_time_ms(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // float world_x = 11;
  void clear_world_x();
  float world_x() const;
  void set_world_x(float value);
  private:
  float _internal_world_x() const;
  void _internal_set_world_x(float value);
  public:

  // float world_y = 12;
  void clear_world_y();
  float world_y() const;
  void set_world_y(float value);
  private:
  float _internal_world_y() const;
  void _internal_set_world_y(float value);
  public:

  // float pos_angle = 13;
  void clear_pos_angle();
  float pos_angle() const;
  void set_pos_angle(float value);
  private:
  float _internal_pos_angle() const;
  void _internal_set_pos_angle(float value);
  public:

  // float ttc_m = 14;
  void clear_ttc_m();
  float ttc_m() const;
  void set_ttc_m(float value);
  private:
  float _internal_ttc_m() const;
  void _internal_set_ttc_m(float value);
  public:

  // float ttc = 15;
  void clear_ttc();
  float ttc() const;
  void set_ttc(float value);
  private:
  float _internal_ttc() const;
  void _internal_set_ttc(float value);
  public:

  // float longitudinal_velocity = 16;
  void clear_longitudinal_velocity();
  float longitudinal_velocity() const;
  void set_longitudinal_velocity(float value);
  private:
  float _internal_longitudinal_velocity() const;
  void _internal_set_longitudinal_velocity(float value);
  public:

  // float lateral_velocity = 17;
  void clear_lateral_velocity();
  float lateral_velocity() const;
  void set_lateral_velocity(float value);
  private:
  float _internal_lateral_velocity() const;
  void _internal_set_lateral_velocity(float value);
  public:

  // float real_H = 18;
  void clear_real_h();
  float real_h() const;
  void set_real_h(float value);
  private:
  float _internal_real_h() const;
  void _internal_set_real_h(float value);
  public:

  // bool predicted = 10;
  void clear_predicted();
  bool predicted() const;
  void set_predicted(bool value);
  private:
  bool _internal_predicted() const;
  void _internal_set_predicted(bool value);
  public:

  // bool is_longitudinal_close = 20;
  void clear_is_longitudinal_close();
  bool is_longitudinal_close() const;
  void set_is_longitudinal_close(bool value);
  private:
  bool _internal_is_longitudinal_close() const;
  void _internal_set_is_longitudinal_close(bool value);
  public:

  // bool is_lateral_close = 21;
  void clear_is_lateral_close();
  bool is_lateral_close() const;
  void set_is_lateral_close(bool value);
  private:
  bool _internal_is_lateral_close() const;
  void _internal_set_is_lateral_close(bool value);
  public:

  // bool is_measure_not_stable = 22;
  void clear_is_measure_not_stable();
  bool is_measure_not_stable() const;
  void set_is_measure_not_stable(bool value);
  private:
  bool _internal_is_measure_not_stable() const;
  void _internal_set_is_measure_not_stable(bool value);
  public:

  // float real_W = 19;
  void clear_real_w();
  float real_w() const;
  void set_real_w(float value);
  private:
  float _internal_real_w() const;
  void _internal_set_real_w(float value);
  public:

  // bool have_bike = 23;
  void clear_have_bike();
  bool have_bike() const;
  void set_have_bike(bool value);
  private:
  bool _internal_have_bike() const;
  void _internal_set_have_bike(bool value);
  public:

  // bool is_key = 24;
  void clear_is_key();
  bool is_key() const;
  void set_is_key(bool value);
  private:
  bool _internal_is_key() const;
  void _internal_set_is_key(bool value);
  public:

  // bool is_danger = 25;
  void clear_is_danger();
  bool is_danger() const;
  void set_is_danger(bool value);
  private:
  bool _internal_is_danger() const;
  void _internal_set_is_danger(bool value);
  public:

  // @@protoc_insertion_point(class_scope:perception.Pedestrian.PedDetExport)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::perception::common::Rect2f* detect_box_;
  ::perception::common::Rect2f* reg_box_;
  ::perception::common::Rect2f* track_box_;
  ::perception::common::Rect2f* bike_box_;
  float confidence_;
  ::PROTOBUF_NAMESPACE_ID::int32 detect_status_;
  ::PROTOBUF_NAMESPACE_ID::int32 t_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 unique_id_;
  ::PROTOBUF_NAMESPACE_ID::int64 time_ms_;
  float world_x_;
  float world_y_;
  float pos_angle_;
  float ttc_m_;
  float ttc_;
  float longitudinal_velocity_;
  float lateral_velocity_;
  float real_h_;
  bool predicted_;
  bool is_longitudinal_close_;
  bool is_lateral_close_;
  bool is_measure_not_stable_;
  float real_w_;
  bool have_bike_;
  bool is_key_;
  bool is_danger_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_pedestrian_2eproto;
};
// -------------------------------------------------------------------

class Pedestrian_PedWarningExport PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perception.Pedestrian.PedWarningExport) */ {
 public:
  inline Pedestrian_PedWarningExport() : Pedestrian_PedWarningExport(nullptr) {};
  virtual ~Pedestrian_PedWarningExport();

  Pedestrian_PedWarningExport(const Pedestrian_PedWarningExport& from);
  Pedestrian_PedWarningExport(Pedestrian_PedWarningExport&& from) noexcept
    : Pedestrian_PedWarningExport() {
    *this = ::std::move(from);
  }

  inline Pedestrian_PedWarningExport& operator=(const Pedestrian_PedWarningExport& from) {
    CopyFrom(from);
    return *this;
  }
  inline Pedestrian_PedWarningExport& operator=(Pedestrian_PedWarningExport&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Pedestrian_PedWarningExport& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Pedestrian_PedWarningExport* internal_default_instance() {
    return reinterpret_cast<const Pedestrian_PedWarningExport*>(
               &_Pedestrian_PedWarningExport_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Pedestrian_PedWarningExport& a, Pedestrian_PedWarningExport& b) {
    a.Swap(&b);
  }
  inline void Swap(Pedestrian_PedWarningExport* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Pedestrian_PedWarningExport* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Pedestrian_PedWarningExport* New() const final {
    return CreateMaybeMessage<Pedestrian_PedWarningExport>(nullptr);
  }

  Pedestrian_PedWarningExport* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Pedestrian_PedWarningExport>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Pedestrian_PedWarningExport& from);
  void MergeFrom(const Pedestrian_PedWarningExport& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Pedestrian_PedWarningExport* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "perception.Pedestrian.PedWarningExport";
  }
  protected:
  explicit Pedestrian_PedWarningExport(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_pedestrian_2eproto);
    return ::descriptor_table_pedestrian_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPedOnFieldNumber = 1,
    kPcwOnFieldNumber = 2,
  };
  // bool ped_on = 1;
  void clear_ped_on();
  bool ped_on() const;
  void set_ped_on(bool value);
  private:
  bool _internal_ped_on() const;
  void _internal_set_ped_on(bool value);
  public:

  // bool pcw_on = 2;
  void clear_pcw_on();
  bool pcw_on() const;
  void set_pcw_on(bool value);
  private:
  bool _internal_pcw_on() const;
  void _internal_set_pcw_on(bool value);
  public:

  // @@protoc_insertion_point(class_scope:perception.Pedestrian.PedWarningExport)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  bool ped_on_;
  bool pcw_on_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_pedestrian_2eproto;
};
// -------------------------------------------------------------------

class Pedestrian PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perception.Pedestrian) */ {
 public:
  inline Pedestrian() : Pedestrian(nullptr) {};
  virtual ~Pedestrian();

  Pedestrian(const Pedestrian& from);
  Pedestrian(Pedestrian&& from) noexcept
    : Pedestrian() {
    *this = ::std::move(from);
  }

  inline Pedestrian& operator=(const Pedestrian& from) {
    CopyFrom(from);
    return *this;
  }
  inline Pedestrian& operator=(Pedestrian&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Pedestrian& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Pedestrian* internal_default_instance() {
    return reinterpret_cast<const Pedestrian*>(
               &_Pedestrian_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Pedestrian& a, Pedestrian& b) {
    a.Swap(&b);
  }
  inline void Swap(Pedestrian* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Pedestrian* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Pedestrian* New() const final {
    return CreateMaybeMessage<Pedestrian>(nullptr);
  }

  Pedestrian* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Pedestrian>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Pedestrian& from);
  void MergeFrom(const Pedestrian& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Pedestrian* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "perception.Pedestrian";
  }
  protected:
  explicit Pedestrian(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_pedestrian_2eproto);
    return ::descriptor_table_pedestrian_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef Pedestrian_PedDetExport PedDetExport;
  typedef Pedestrian_PedWarningExport PedWarningExport;

  // accessors -------------------------------------------------------

  enum : int {
    kPedListFieldNumber = 3,
    kPedWarningFieldNumber = 4,
    kFrameIdFieldNumber = 1,
    kTimestampFieldNumber = 2,
    kDataSourceFieldNumber = 5,
  };
  // repeated .perception.Pedestrian.PedDetExport ped_list = 3;
  int ped_list_size() const;
  private:
  int _internal_ped_list_size() const;
  public:
  void clear_ped_list();
  ::perception::Pedestrian_PedDetExport* mutable_ped_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perception::Pedestrian_PedDetExport >*
      mutable_ped_list();
  private:
  const ::perception::Pedestrian_PedDetExport& _internal_ped_list(int index) const;
  ::perception::Pedestrian_PedDetExport* _internal_add_ped_list();
  public:
  const ::perception::Pedestrian_PedDetExport& ped_list(int index) const;
  ::perception::Pedestrian_PedDetExport* add_ped_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perception::Pedestrian_PedDetExport >&
      ped_list() const;

  // .perception.Pedestrian.PedWarningExport ped_warning = 4;
  bool has_ped_warning() const;
  private:
  bool _internal_has_ped_warning() const;
  public:
  void clear_ped_warning();
  const ::perception::Pedestrian_PedWarningExport& ped_warning() const;
  ::perception::Pedestrian_PedWarningExport* release_ped_warning();
  ::perception::Pedestrian_PedWarningExport* mutable_ped_warning();
  void set_allocated_ped_warning(::perception::Pedestrian_PedWarningExport* ped_warning);
  private:
  const ::perception::Pedestrian_PedWarningExport& _internal_ped_warning() const;
  ::perception::Pedestrian_PedWarningExport* _internal_mutable_ped_warning();
  public:
  void unsafe_arena_set_allocated_ped_warning(
      ::perception::Pedestrian_PedWarningExport* ped_warning);
  ::perception::Pedestrian_PedWarningExport* unsafe_arena_release_ped_warning();

  // uint64 frame_id = 1;
  void clear_frame_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 frame_id() const;
  void set_frame_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_frame_id() const;
  void _internal_set_frame_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 timestamp = 2;
  void clear_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 timestamp() const;
  void set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_timestamp() const;
  void _internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // .minieye.DataSource data_source = 5;
  void clear_data_source();
  ::minieye::DataSource data_source() const;
  void set_data_source(::minieye::DataSource value);
  private:
  ::minieye::DataSource _internal_data_source() const;
  void _internal_set_data_source(::minieye::DataSource value);
  public:

  // @@protoc_insertion_point(class_scope:perception.Pedestrian)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perception::Pedestrian_PedDetExport > ped_list_;
  ::perception::Pedestrian_PedWarningExport* ped_warning_;
  ::PROTOBUF_NAMESPACE_ID::uint64 frame_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 timestamp_;
  int data_source_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_pedestrian_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Pedestrian_PedDetExport

// .perception.common.Rect2f detect_box = 1;
inline bool Pedestrian_PedDetExport::_internal_has_detect_box() const {
  return this != internal_default_instance() && detect_box_ != nullptr;
}
inline bool Pedestrian_PedDetExport::has_detect_box() const {
  return _internal_has_detect_box();
}
inline const ::perception::common::Rect2f& Pedestrian_PedDetExport::_internal_detect_box() const {
  const ::perception::common::Rect2f* p = detect_box_;
  return p != nullptr ? *p : *reinterpret_cast<const ::perception::common::Rect2f*>(
      &::perception::common::_Rect2f_default_instance_);
}
inline const ::perception::common::Rect2f& Pedestrian_PedDetExport::detect_box() const {
  // @@protoc_insertion_point(field_get:perception.Pedestrian.PedDetExport.detect_box)
  return _internal_detect_box();
}
inline void Pedestrian_PedDetExport::unsafe_arena_set_allocated_detect_box(
    ::perception::common::Rect2f* detect_box) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(detect_box_);
  }
  detect_box_ = detect_box;
  if (detect_box) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:perception.Pedestrian.PedDetExport.detect_box)
}
inline ::perception::common::Rect2f* Pedestrian_PedDetExport::release_detect_box() {
  auto temp = unsafe_arena_release_detect_box();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::perception::common::Rect2f* Pedestrian_PedDetExport::unsafe_arena_release_detect_box() {
  // @@protoc_insertion_point(field_release:perception.Pedestrian.PedDetExport.detect_box)
  
  ::perception::common::Rect2f* temp = detect_box_;
  detect_box_ = nullptr;
  return temp;
}
inline ::perception::common::Rect2f* Pedestrian_PedDetExport::_internal_mutable_detect_box() {
  
  if (detect_box_ == nullptr) {
    auto* p = CreateMaybeMessage<::perception::common::Rect2f>(GetArena());
    detect_box_ = p;
  }
  return detect_box_;
}
inline ::perception::common::Rect2f* Pedestrian_PedDetExport::mutable_detect_box() {
  // @@protoc_insertion_point(field_mutable:perception.Pedestrian.PedDetExport.detect_box)
  return _internal_mutable_detect_box();
}
inline void Pedestrian_PedDetExport::set_allocated_detect_box(::perception::common::Rect2f* detect_box) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(detect_box_);
  }
  if (detect_box) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(detect_box)->GetArena();
    if (message_arena != submessage_arena) {
      detect_box = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, detect_box, submessage_arena);
    }
    
  } else {
    
  }
  detect_box_ = detect_box;
  // @@protoc_insertion_point(field_set_allocated:perception.Pedestrian.PedDetExport.detect_box)
}

// .perception.common.Rect2f reg_box = 2;
inline bool Pedestrian_PedDetExport::_internal_has_reg_box() const {
  return this != internal_default_instance() && reg_box_ != nullptr;
}
inline bool Pedestrian_PedDetExport::has_reg_box() const {
  return _internal_has_reg_box();
}
inline const ::perception::common::Rect2f& Pedestrian_PedDetExport::_internal_reg_box() const {
  const ::perception::common::Rect2f* p = reg_box_;
  return p != nullptr ? *p : *reinterpret_cast<const ::perception::common::Rect2f*>(
      &::perception::common::_Rect2f_default_instance_);
}
inline const ::perception::common::Rect2f& Pedestrian_PedDetExport::reg_box() const {
  // @@protoc_insertion_point(field_get:perception.Pedestrian.PedDetExport.reg_box)
  return _internal_reg_box();
}
inline void Pedestrian_PedDetExport::unsafe_arena_set_allocated_reg_box(
    ::perception::common::Rect2f* reg_box) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(reg_box_);
  }
  reg_box_ = reg_box;
  if (reg_box) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:perception.Pedestrian.PedDetExport.reg_box)
}
inline ::perception::common::Rect2f* Pedestrian_PedDetExport::release_reg_box() {
  auto temp = unsafe_arena_release_reg_box();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::perception::common::Rect2f* Pedestrian_PedDetExport::unsafe_arena_release_reg_box() {
  // @@protoc_insertion_point(field_release:perception.Pedestrian.PedDetExport.reg_box)
  
  ::perception::common::Rect2f* temp = reg_box_;
  reg_box_ = nullptr;
  return temp;
}
inline ::perception::common::Rect2f* Pedestrian_PedDetExport::_internal_mutable_reg_box() {
  
  if (reg_box_ == nullptr) {
    auto* p = CreateMaybeMessage<::perception::common::Rect2f>(GetArena());
    reg_box_ = p;
  }
  return reg_box_;
}
inline ::perception::common::Rect2f* Pedestrian_PedDetExport::mutable_reg_box() {
  // @@protoc_insertion_point(field_mutable:perception.Pedestrian.PedDetExport.reg_box)
  return _internal_mutable_reg_box();
}
inline void Pedestrian_PedDetExport::set_allocated_reg_box(::perception::common::Rect2f* reg_box) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(reg_box_);
  }
  if (reg_box) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(reg_box)->GetArena();
    if (message_arena != submessage_arena) {
      reg_box = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, reg_box, submessage_arena);
    }
    
  } else {
    
  }
  reg_box_ = reg_box;
  // @@protoc_insertion_point(field_set_allocated:perception.Pedestrian.PedDetExport.reg_box)
}

// .perception.common.Rect2f track_box = 3;
inline bool Pedestrian_PedDetExport::_internal_has_track_box() const {
  return this != internal_default_instance() && track_box_ != nullptr;
}
inline bool Pedestrian_PedDetExport::has_track_box() const {
  return _internal_has_track_box();
}
inline const ::perception::common::Rect2f& Pedestrian_PedDetExport::_internal_track_box() const {
  const ::perception::common::Rect2f* p = track_box_;
  return p != nullptr ? *p : *reinterpret_cast<const ::perception::common::Rect2f*>(
      &::perception::common::_Rect2f_default_instance_);
}
inline const ::perception::common::Rect2f& Pedestrian_PedDetExport::track_box() const {
  // @@protoc_insertion_point(field_get:perception.Pedestrian.PedDetExport.track_box)
  return _internal_track_box();
}
inline void Pedestrian_PedDetExport::unsafe_arena_set_allocated_track_box(
    ::perception::common::Rect2f* track_box) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(track_box_);
  }
  track_box_ = track_box;
  if (track_box) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:perception.Pedestrian.PedDetExport.track_box)
}
inline ::perception::common::Rect2f* Pedestrian_PedDetExport::release_track_box() {
  auto temp = unsafe_arena_release_track_box();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::perception::common::Rect2f* Pedestrian_PedDetExport::unsafe_arena_release_track_box() {
  // @@protoc_insertion_point(field_release:perception.Pedestrian.PedDetExport.track_box)
  
  ::perception::common::Rect2f* temp = track_box_;
  track_box_ = nullptr;
  return temp;
}
inline ::perception::common::Rect2f* Pedestrian_PedDetExport::_internal_mutable_track_box() {
  
  if (track_box_ == nullptr) {
    auto* p = CreateMaybeMessage<::perception::common::Rect2f>(GetArena());
    track_box_ = p;
  }
  return track_box_;
}
inline ::perception::common::Rect2f* Pedestrian_PedDetExport::mutable_track_box() {
  // @@protoc_insertion_point(field_mutable:perception.Pedestrian.PedDetExport.track_box)
  return _internal_mutable_track_box();
}
inline void Pedestrian_PedDetExport::set_allocated_track_box(::perception::common::Rect2f* track_box) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(track_box_);
  }
  if (track_box) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(track_box)->GetArena();
    if (message_arena != submessage_arena) {
      track_box = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, track_box, submessage_arena);
    }
    
  } else {
    
  }
  track_box_ = track_box;
  // @@protoc_insertion_point(field_set_allocated:perception.Pedestrian.PedDetExport.track_box)
}

// .perception.common.Rect2f bike_box = 4;
inline bool Pedestrian_PedDetExport::_internal_has_bike_box() const {
  return this != internal_default_instance() && bike_box_ != nullptr;
}
inline bool Pedestrian_PedDetExport::has_bike_box() const {
  return _internal_has_bike_box();
}
inline const ::perception::common::Rect2f& Pedestrian_PedDetExport::_internal_bike_box() const {
  const ::perception::common::Rect2f* p = bike_box_;
  return p != nullptr ? *p : *reinterpret_cast<const ::perception::common::Rect2f*>(
      &::perception::common::_Rect2f_default_instance_);
}
inline const ::perception::common::Rect2f& Pedestrian_PedDetExport::bike_box() const {
  // @@protoc_insertion_point(field_get:perception.Pedestrian.PedDetExport.bike_box)
  return _internal_bike_box();
}
inline void Pedestrian_PedDetExport::unsafe_arena_set_allocated_bike_box(
    ::perception::common::Rect2f* bike_box) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(bike_box_);
  }
  bike_box_ = bike_box;
  if (bike_box) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:perception.Pedestrian.PedDetExport.bike_box)
}
inline ::perception::common::Rect2f* Pedestrian_PedDetExport::release_bike_box() {
  auto temp = unsafe_arena_release_bike_box();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::perception::common::Rect2f* Pedestrian_PedDetExport::unsafe_arena_release_bike_box() {
  // @@protoc_insertion_point(field_release:perception.Pedestrian.PedDetExport.bike_box)
  
  ::perception::common::Rect2f* temp = bike_box_;
  bike_box_ = nullptr;
  return temp;
}
inline ::perception::common::Rect2f* Pedestrian_PedDetExport::_internal_mutable_bike_box() {
  
  if (bike_box_ == nullptr) {
    auto* p = CreateMaybeMessage<::perception::common::Rect2f>(GetArena());
    bike_box_ = p;
  }
  return bike_box_;
}
inline ::perception::common::Rect2f* Pedestrian_PedDetExport::mutable_bike_box() {
  // @@protoc_insertion_point(field_mutable:perception.Pedestrian.PedDetExport.bike_box)
  return _internal_mutable_bike_box();
}
inline void Pedestrian_PedDetExport::set_allocated_bike_box(::perception::common::Rect2f* bike_box) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(bike_box_);
  }
  if (bike_box) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(bike_box)->GetArena();
    if (message_arena != submessage_arena) {
      bike_box = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bike_box, submessage_arena);
    }
    
  } else {
    
  }
  bike_box_ = bike_box;
  // @@protoc_insertion_point(field_set_allocated:perception.Pedestrian.PedDetExport.bike_box)
}

// float confidence = 5;
inline void Pedestrian_PedDetExport::clear_confidence() {
  confidence_ = 0;
}
inline float Pedestrian_PedDetExport::_internal_confidence() const {
  return confidence_;
}
inline float Pedestrian_PedDetExport::confidence() const {
  // @@protoc_insertion_point(field_get:perception.Pedestrian.PedDetExport.confidence)
  return _internal_confidence();
}
inline void Pedestrian_PedDetExport::_internal_set_confidence(float value) {
  
  confidence_ = value;
}
inline void Pedestrian_PedDetExport::set_confidence(float value) {
  _internal_set_confidence(value);
  // @@protoc_insertion_point(field_set:perception.Pedestrian.PedDetExport.confidence)
}

// int32 detect_status = 6;
inline void Pedestrian_PedDetExport::clear_detect_status() {
  detect_status_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Pedestrian_PedDetExport::_internal_detect_status() const {
  return detect_status_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Pedestrian_PedDetExport::detect_status() const {
  // @@protoc_insertion_point(field_get:perception.Pedestrian.PedDetExport.detect_status)
  return _internal_detect_status();
}
inline void Pedestrian_PedDetExport::_internal_set_detect_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  detect_status_ = value;
}
inline void Pedestrian_PedDetExport::set_detect_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_detect_status(value);
  // @@protoc_insertion_point(field_set:perception.Pedestrian.PedDetExport.detect_status)
}

// int32 t_id = 7;
inline void Pedestrian_PedDetExport::clear_t_id() {
  t_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Pedestrian_PedDetExport::_internal_t_id() const {
  return t_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Pedestrian_PedDetExport::t_id() const {
  // @@protoc_insertion_point(field_get:perception.Pedestrian.PedDetExport.t_id)
  return _internal_t_id();
}
inline void Pedestrian_PedDetExport::_internal_set_t_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  t_id_ = value;
}
inline void Pedestrian_PedDetExport::set_t_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_t_id(value);
  // @@protoc_insertion_point(field_set:perception.Pedestrian.PedDetExport.t_id)
}

// int32 unique_id = 8;
inline void Pedestrian_PedDetExport::clear_unique_id() {
  unique_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Pedestrian_PedDetExport::_internal_unique_id() const {
  return unique_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Pedestrian_PedDetExport::unique_id() const {
  // @@protoc_insertion_point(field_get:perception.Pedestrian.PedDetExport.unique_id)
  return _internal_unique_id();
}
inline void Pedestrian_PedDetExport::_internal_set_unique_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  unique_id_ = value;
}
inline void Pedestrian_PedDetExport::set_unique_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_unique_id(value);
  // @@protoc_insertion_point(field_set:perception.Pedestrian.PedDetExport.unique_id)
}

// int64 time_ms = 9;
inline void Pedestrian_PedDetExport::clear_time_ms() {
  time_ms_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Pedestrian_PedDetExport::_internal_time_ms() const {
  return time_ms_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Pedestrian_PedDetExport::time_ms() const {
  // @@protoc_insertion_point(field_get:perception.Pedestrian.PedDetExport.time_ms)
  return _internal_time_ms();
}
inline void Pedestrian_PedDetExport::_internal_set_time_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  time_ms_ = value;
}
inline void Pedestrian_PedDetExport::set_time_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_time_ms(value);
  // @@protoc_insertion_point(field_set:perception.Pedestrian.PedDetExport.time_ms)
}

// bool predicted = 10;
inline void Pedestrian_PedDetExport::clear_predicted() {
  predicted_ = false;
}
inline bool Pedestrian_PedDetExport::_internal_predicted() const {
  return predicted_;
}
inline bool Pedestrian_PedDetExport::predicted() const {
  // @@protoc_insertion_point(field_get:perception.Pedestrian.PedDetExport.predicted)
  return _internal_predicted();
}
inline void Pedestrian_PedDetExport::_internal_set_predicted(bool value) {
  
  predicted_ = value;
}
inline void Pedestrian_PedDetExport::set_predicted(bool value) {
  _internal_set_predicted(value);
  // @@protoc_insertion_point(field_set:perception.Pedestrian.PedDetExport.predicted)
}

// float world_x = 11;
inline void Pedestrian_PedDetExport::clear_world_x() {
  world_x_ = 0;
}
inline float Pedestrian_PedDetExport::_internal_world_x() const {
  return world_x_;
}
inline float Pedestrian_PedDetExport::world_x() const {
  // @@protoc_insertion_point(field_get:perception.Pedestrian.PedDetExport.world_x)
  return _internal_world_x();
}
inline void Pedestrian_PedDetExport::_internal_set_world_x(float value) {
  
  world_x_ = value;
}
inline void Pedestrian_PedDetExport::set_world_x(float value) {
  _internal_set_world_x(value);
  // @@protoc_insertion_point(field_set:perception.Pedestrian.PedDetExport.world_x)
}

// float world_y = 12;
inline void Pedestrian_PedDetExport::clear_world_y() {
  world_y_ = 0;
}
inline float Pedestrian_PedDetExport::_internal_world_y() const {
  return world_y_;
}
inline float Pedestrian_PedDetExport::world_y() const {
  // @@protoc_insertion_point(field_get:perception.Pedestrian.PedDetExport.world_y)
  return _internal_world_y();
}
inline void Pedestrian_PedDetExport::_internal_set_world_y(float value) {
  
  world_y_ = value;
}
inline void Pedestrian_PedDetExport::set_world_y(float value) {
  _internal_set_world_y(value);
  // @@protoc_insertion_point(field_set:perception.Pedestrian.PedDetExport.world_y)
}

// float pos_angle = 13;
inline void Pedestrian_PedDetExport::clear_pos_angle() {
  pos_angle_ = 0;
}
inline float Pedestrian_PedDetExport::_internal_pos_angle() const {
  return pos_angle_;
}
inline float Pedestrian_PedDetExport::pos_angle() const {
  // @@protoc_insertion_point(field_get:perception.Pedestrian.PedDetExport.pos_angle)
  return _internal_pos_angle();
}
inline void Pedestrian_PedDetExport::_internal_set_pos_angle(float value) {
  
  pos_angle_ = value;
}
inline void Pedestrian_PedDetExport::set_pos_angle(float value) {
  _internal_set_pos_angle(value);
  // @@protoc_insertion_point(field_set:perception.Pedestrian.PedDetExport.pos_angle)
}

// float ttc_m = 14;
inline void Pedestrian_PedDetExport::clear_ttc_m() {
  ttc_m_ = 0;
}
inline float Pedestrian_PedDetExport::_internal_ttc_m() const {
  return ttc_m_;
}
inline float Pedestrian_PedDetExport::ttc_m() const {
  // @@protoc_insertion_point(field_get:perception.Pedestrian.PedDetExport.ttc_m)
  return _internal_ttc_m();
}
inline void Pedestrian_PedDetExport::_internal_set_ttc_m(float value) {
  
  ttc_m_ = value;
}
inline void Pedestrian_PedDetExport::set_ttc_m(float value) {
  _internal_set_ttc_m(value);
  // @@protoc_insertion_point(field_set:perception.Pedestrian.PedDetExport.ttc_m)
}

// float ttc = 15;
inline void Pedestrian_PedDetExport::clear_ttc() {
  ttc_ = 0;
}
inline float Pedestrian_PedDetExport::_internal_ttc() const {
  return ttc_;
}
inline float Pedestrian_PedDetExport::ttc() const {
  // @@protoc_insertion_point(field_get:perception.Pedestrian.PedDetExport.ttc)
  return _internal_ttc();
}
inline void Pedestrian_PedDetExport::_internal_set_ttc(float value) {
  
  ttc_ = value;
}
inline void Pedestrian_PedDetExport::set_ttc(float value) {
  _internal_set_ttc(value);
  // @@protoc_insertion_point(field_set:perception.Pedestrian.PedDetExport.ttc)
}

// float longitudinal_velocity = 16;
inline void Pedestrian_PedDetExport::clear_longitudinal_velocity() {
  longitudinal_velocity_ = 0;
}
inline float Pedestrian_PedDetExport::_internal_longitudinal_velocity() const {
  return longitudinal_velocity_;
}
inline float Pedestrian_PedDetExport::longitudinal_velocity() const {
  // @@protoc_insertion_point(field_get:perception.Pedestrian.PedDetExport.longitudinal_velocity)
  return _internal_longitudinal_velocity();
}
inline void Pedestrian_PedDetExport::_internal_set_longitudinal_velocity(float value) {
  
  longitudinal_velocity_ = value;
}
inline void Pedestrian_PedDetExport::set_longitudinal_velocity(float value) {
  _internal_set_longitudinal_velocity(value);
  // @@protoc_insertion_point(field_set:perception.Pedestrian.PedDetExport.longitudinal_velocity)
}

// float lateral_velocity = 17;
inline void Pedestrian_PedDetExport::clear_lateral_velocity() {
  lateral_velocity_ = 0;
}
inline float Pedestrian_PedDetExport::_internal_lateral_velocity() const {
  return lateral_velocity_;
}
inline float Pedestrian_PedDetExport::lateral_velocity() const {
  // @@protoc_insertion_point(field_get:perception.Pedestrian.PedDetExport.lateral_velocity)
  return _internal_lateral_velocity();
}
inline void Pedestrian_PedDetExport::_internal_set_lateral_velocity(float value) {
  
  lateral_velocity_ = value;
}
inline void Pedestrian_PedDetExport::set_lateral_velocity(float value) {
  _internal_set_lateral_velocity(value);
  // @@protoc_insertion_point(field_set:perception.Pedestrian.PedDetExport.lateral_velocity)
}

// float real_H = 18;
inline void Pedestrian_PedDetExport::clear_real_h() {
  real_h_ = 0;
}
inline float Pedestrian_PedDetExport::_internal_real_h() const {
  return real_h_;
}
inline float Pedestrian_PedDetExport::real_h() const {
  // @@protoc_insertion_point(field_get:perception.Pedestrian.PedDetExport.real_H)
  return _internal_real_h();
}
inline void Pedestrian_PedDetExport::_internal_set_real_h(float value) {
  
  real_h_ = value;
}
inline void Pedestrian_PedDetExport::set_real_h(float value) {
  _internal_set_real_h(value);
  // @@protoc_insertion_point(field_set:perception.Pedestrian.PedDetExport.real_H)
}

// float real_W = 19;
inline void Pedestrian_PedDetExport::clear_real_w() {
  real_w_ = 0;
}
inline float Pedestrian_PedDetExport::_internal_real_w() const {
  return real_w_;
}
inline float Pedestrian_PedDetExport::real_w() const {
  // @@protoc_insertion_point(field_get:perception.Pedestrian.PedDetExport.real_W)
  return _internal_real_w();
}
inline void Pedestrian_PedDetExport::_internal_set_real_w(float value) {
  
  real_w_ = value;
}
inline void Pedestrian_PedDetExport::set_real_w(float value) {
  _internal_set_real_w(value);
  // @@protoc_insertion_point(field_set:perception.Pedestrian.PedDetExport.real_W)
}

// bool is_longitudinal_close = 20;
inline void Pedestrian_PedDetExport::clear_is_longitudinal_close() {
  is_longitudinal_close_ = false;
}
inline bool Pedestrian_PedDetExport::_internal_is_longitudinal_close() const {
  return is_longitudinal_close_;
}
inline bool Pedestrian_PedDetExport::is_longitudinal_close() const {
  // @@protoc_insertion_point(field_get:perception.Pedestrian.PedDetExport.is_longitudinal_close)
  return _internal_is_longitudinal_close();
}
inline void Pedestrian_PedDetExport::_internal_set_is_longitudinal_close(bool value) {
  
  is_longitudinal_close_ = value;
}
inline void Pedestrian_PedDetExport::set_is_longitudinal_close(bool value) {
  _internal_set_is_longitudinal_close(value);
  // @@protoc_insertion_point(field_set:perception.Pedestrian.PedDetExport.is_longitudinal_close)
}

// bool is_lateral_close = 21;
inline void Pedestrian_PedDetExport::clear_is_lateral_close() {
  is_lateral_close_ = false;
}
inline bool Pedestrian_PedDetExport::_internal_is_lateral_close() const {
  return is_lateral_close_;
}
inline bool Pedestrian_PedDetExport::is_lateral_close() const {
  // @@protoc_insertion_point(field_get:perception.Pedestrian.PedDetExport.is_lateral_close)
  return _internal_is_lateral_close();
}
inline void Pedestrian_PedDetExport::_internal_set_is_lateral_close(bool value) {
  
  is_lateral_close_ = value;
}
inline void Pedestrian_PedDetExport::set_is_lateral_close(bool value) {
  _internal_set_is_lateral_close(value);
  // @@protoc_insertion_point(field_set:perception.Pedestrian.PedDetExport.is_lateral_close)
}

// bool is_measure_not_stable = 22;
inline void Pedestrian_PedDetExport::clear_is_measure_not_stable() {
  is_measure_not_stable_ = false;
}
inline bool Pedestrian_PedDetExport::_internal_is_measure_not_stable() const {
  return is_measure_not_stable_;
}
inline bool Pedestrian_PedDetExport::is_measure_not_stable() const {
  // @@protoc_insertion_point(field_get:perception.Pedestrian.PedDetExport.is_measure_not_stable)
  return _internal_is_measure_not_stable();
}
inline void Pedestrian_PedDetExport::_internal_set_is_measure_not_stable(bool value) {
  
  is_measure_not_stable_ = value;
}
inline void Pedestrian_PedDetExport::set_is_measure_not_stable(bool value) {
  _internal_set_is_measure_not_stable(value);
  // @@protoc_insertion_point(field_set:perception.Pedestrian.PedDetExport.is_measure_not_stable)
}

// bool have_bike = 23;
inline void Pedestrian_PedDetExport::clear_have_bike() {
  have_bike_ = false;
}
inline bool Pedestrian_PedDetExport::_internal_have_bike() const {
  return have_bike_;
}
inline bool Pedestrian_PedDetExport::have_bike() const {
  // @@protoc_insertion_point(field_get:perception.Pedestrian.PedDetExport.have_bike)
  return _internal_have_bike();
}
inline void Pedestrian_PedDetExport::_internal_set_have_bike(bool value) {
  
  have_bike_ = value;
}
inline void Pedestrian_PedDetExport::set_have_bike(bool value) {
  _internal_set_have_bike(value);
  // @@protoc_insertion_point(field_set:perception.Pedestrian.PedDetExport.have_bike)
}

// bool is_key = 24;
inline void Pedestrian_PedDetExport::clear_is_key() {
  is_key_ = false;
}
inline bool Pedestrian_PedDetExport::_internal_is_key() const {
  return is_key_;
}
inline bool Pedestrian_PedDetExport::is_key() const {
  // @@protoc_insertion_point(field_get:perception.Pedestrian.PedDetExport.is_key)
  return _internal_is_key();
}
inline void Pedestrian_PedDetExport::_internal_set_is_key(bool value) {
  
  is_key_ = value;
}
inline void Pedestrian_PedDetExport::set_is_key(bool value) {
  _internal_set_is_key(value);
  // @@protoc_insertion_point(field_set:perception.Pedestrian.PedDetExport.is_key)
}

// bool is_danger = 25;
inline void Pedestrian_PedDetExport::clear_is_danger() {
  is_danger_ = false;
}
inline bool Pedestrian_PedDetExport::_internal_is_danger() const {
  return is_danger_;
}
inline bool Pedestrian_PedDetExport::is_danger() const {
  // @@protoc_insertion_point(field_get:perception.Pedestrian.PedDetExport.is_danger)
  return _internal_is_danger();
}
inline void Pedestrian_PedDetExport::_internal_set_is_danger(bool value) {
  
  is_danger_ = value;
}
inline void Pedestrian_PedDetExport::set_is_danger(bool value) {
  _internal_set_is_danger(value);
  // @@protoc_insertion_point(field_set:perception.Pedestrian.PedDetExport.is_danger)
}

// -------------------------------------------------------------------

// Pedestrian_PedWarningExport

// bool ped_on = 1;
inline void Pedestrian_PedWarningExport::clear_ped_on() {
  ped_on_ = false;
}
inline bool Pedestrian_PedWarningExport::_internal_ped_on() const {
  return ped_on_;
}
inline bool Pedestrian_PedWarningExport::ped_on() const {
  // @@protoc_insertion_point(field_get:perception.Pedestrian.PedWarningExport.ped_on)
  return _internal_ped_on();
}
inline void Pedestrian_PedWarningExport::_internal_set_ped_on(bool value) {
  
  ped_on_ = value;
}
inline void Pedestrian_PedWarningExport::set_ped_on(bool value) {
  _internal_set_ped_on(value);
  // @@protoc_insertion_point(field_set:perception.Pedestrian.PedWarningExport.ped_on)
}

// bool pcw_on = 2;
inline void Pedestrian_PedWarningExport::clear_pcw_on() {
  pcw_on_ = false;
}
inline bool Pedestrian_PedWarningExport::_internal_pcw_on() const {
  return pcw_on_;
}
inline bool Pedestrian_PedWarningExport::pcw_on() const {
  // @@protoc_insertion_point(field_get:perception.Pedestrian.PedWarningExport.pcw_on)
  return _internal_pcw_on();
}
inline void Pedestrian_PedWarningExport::_internal_set_pcw_on(bool value) {
  
  pcw_on_ = value;
}
inline void Pedestrian_PedWarningExport::set_pcw_on(bool value) {
  _internal_set_pcw_on(value);
  // @@protoc_insertion_point(field_set:perception.Pedestrian.PedWarningExport.pcw_on)
}

// -------------------------------------------------------------------

// Pedestrian

// uint64 frame_id = 1;
inline void Pedestrian::clear_frame_id() {
  frame_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Pedestrian::_internal_frame_id() const {
  return frame_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Pedestrian::frame_id() const {
  // @@protoc_insertion_point(field_get:perception.Pedestrian.frame_id)
  return _internal_frame_id();
}
inline void Pedestrian::_internal_set_frame_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  frame_id_ = value;
}
inline void Pedestrian::set_frame_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_frame_id(value);
  // @@protoc_insertion_point(field_set:perception.Pedestrian.frame_id)
}

// uint64 timestamp = 2;
inline void Pedestrian::clear_timestamp() {
  timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Pedestrian::_internal_timestamp() const {
  return timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Pedestrian::timestamp() const {
  // @@protoc_insertion_point(field_get:perception.Pedestrian.timestamp)
  return _internal_timestamp();
}
inline void Pedestrian::_internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  timestamp_ = value;
}
inline void Pedestrian::set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:perception.Pedestrian.timestamp)
}

// repeated .perception.Pedestrian.PedDetExport ped_list = 3;
inline int Pedestrian::_internal_ped_list_size() const {
  return ped_list_.size();
}
inline int Pedestrian::ped_list_size() const {
  return _internal_ped_list_size();
}
inline void Pedestrian::clear_ped_list() {
  ped_list_.Clear();
}
inline ::perception::Pedestrian_PedDetExport* Pedestrian::mutable_ped_list(int index) {
  // @@protoc_insertion_point(field_mutable:perception.Pedestrian.ped_list)
  return ped_list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perception::Pedestrian_PedDetExport >*
Pedestrian::mutable_ped_list() {
  // @@protoc_insertion_point(field_mutable_list:perception.Pedestrian.ped_list)
  return &ped_list_;
}
inline const ::perception::Pedestrian_PedDetExport& Pedestrian::_internal_ped_list(int index) const {
  return ped_list_.Get(index);
}
inline const ::perception::Pedestrian_PedDetExport& Pedestrian::ped_list(int index) const {
  // @@protoc_insertion_point(field_get:perception.Pedestrian.ped_list)
  return _internal_ped_list(index);
}
inline ::perception::Pedestrian_PedDetExport* Pedestrian::_internal_add_ped_list() {
  return ped_list_.Add();
}
inline ::perception::Pedestrian_PedDetExport* Pedestrian::add_ped_list() {
  // @@protoc_insertion_point(field_add:perception.Pedestrian.ped_list)
  return _internal_add_ped_list();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perception::Pedestrian_PedDetExport >&
Pedestrian::ped_list() const {
  // @@protoc_insertion_point(field_list:perception.Pedestrian.ped_list)
  return ped_list_;
}

// .perception.Pedestrian.PedWarningExport ped_warning = 4;
inline bool Pedestrian::_internal_has_ped_warning() const {
  return this != internal_default_instance() && ped_warning_ != nullptr;
}
inline bool Pedestrian::has_ped_warning() const {
  return _internal_has_ped_warning();
}
inline void Pedestrian::clear_ped_warning() {
  if (GetArena() == nullptr && ped_warning_ != nullptr) {
    delete ped_warning_;
  }
  ped_warning_ = nullptr;
}
inline const ::perception::Pedestrian_PedWarningExport& Pedestrian::_internal_ped_warning() const {
  const ::perception::Pedestrian_PedWarningExport* p = ped_warning_;
  return p != nullptr ? *p : *reinterpret_cast<const ::perception::Pedestrian_PedWarningExport*>(
      &::perception::_Pedestrian_PedWarningExport_default_instance_);
}
inline const ::perception::Pedestrian_PedWarningExport& Pedestrian::ped_warning() const {
  // @@protoc_insertion_point(field_get:perception.Pedestrian.ped_warning)
  return _internal_ped_warning();
}
inline void Pedestrian::unsafe_arena_set_allocated_ped_warning(
    ::perception::Pedestrian_PedWarningExport* ped_warning) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ped_warning_);
  }
  ped_warning_ = ped_warning;
  if (ped_warning) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:perception.Pedestrian.ped_warning)
}
inline ::perception::Pedestrian_PedWarningExport* Pedestrian::release_ped_warning() {
  auto temp = unsafe_arena_release_ped_warning();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::perception::Pedestrian_PedWarningExport* Pedestrian::unsafe_arena_release_ped_warning() {
  // @@protoc_insertion_point(field_release:perception.Pedestrian.ped_warning)
  
  ::perception::Pedestrian_PedWarningExport* temp = ped_warning_;
  ped_warning_ = nullptr;
  return temp;
}
inline ::perception::Pedestrian_PedWarningExport* Pedestrian::_internal_mutable_ped_warning() {
  
  if (ped_warning_ == nullptr) {
    auto* p = CreateMaybeMessage<::perception::Pedestrian_PedWarningExport>(GetArena());
    ped_warning_ = p;
  }
  return ped_warning_;
}
inline ::perception::Pedestrian_PedWarningExport* Pedestrian::mutable_ped_warning() {
  // @@protoc_insertion_point(field_mutable:perception.Pedestrian.ped_warning)
  return _internal_mutable_ped_warning();
}
inline void Pedestrian::set_allocated_ped_warning(::perception::Pedestrian_PedWarningExport* ped_warning) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete ped_warning_;
  }
  if (ped_warning) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(ped_warning);
    if (message_arena != submessage_arena) {
      ped_warning = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ped_warning, submessage_arena);
    }
    
  } else {
    
  }
  ped_warning_ = ped_warning;
  // @@protoc_insertion_point(field_set_allocated:perception.Pedestrian.ped_warning)
}

// .minieye.DataSource data_source = 5;
inline void Pedestrian::clear_data_source() {
  data_source_ = 0;
}
inline ::minieye::DataSource Pedestrian::_internal_data_source() const {
  return static_cast< ::minieye::DataSource >(data_source_);
}
inline ::minieye::DataSource Pedestrian::data_source() const {
  // @@protoc_insertion_point(field_get:perception.Pedestrian.data_source)
  return _internal_data_source();
}
inline void Pedestrian::_internal_set_data_source(::minieye::DataSource value) {
  
  data_source_ = value;
}
inline void Pedestrian::set_data_source(::minieye::DataSource value) {
  _internal_set_data_source(value);
  // @@protoc_insertion_point(field_set:perception.Pedestrian.data_source)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace perception

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_pedestrian_2eproto
