// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: object_warning.proto

#include "object_warning.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_geometry_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Point2fList_geometry_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_object_5fwarning_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BsdState_object_5fwarning_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_object_5fwarning_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BsdWarning_object_5fwarning_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_object_5fwarning_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IhcSignal_object_5fwarning_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_object_5fwarning_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IhcState_object_5fwarning_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_object_5fwarning_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LcaState_object_5fwarning_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_object_5fwarning_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LcaWarning_object_5fwarning_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_object_5fwarning_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PedState_object_5fwarning_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_object_5fwarning_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PedWarning_object_5fwarning_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_object_5fwarning_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TsrState_object_5fwarning_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_object_5fwarning_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TsrWarning_object_5fwarning_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_object_5fwarning_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TsrWarning_TrafficLightSignal_object_5fwarning_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_object_5fwarning_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_VehicleState_object_5fwarning_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_object_5fwarning_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_VehicleWarning_object_5fwarning_2eproto;
namespace perception {
namespace object {
class VehicleWarningDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<VehicleWarning> _instance;
} _VehicleWarning_default_instance_;
class VehicleStateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<VehicleState> _instance;
} _VehicleState_default_instance_;
class PedWarningDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PedWarning> _instance;
} _PedWarning_default_instance_;
class PedStateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PedState> _instance;
} _PedState_default_instance_;
class TsrWarning_TrafficLightSignalDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TsrWarning_TrafficLightSignal> _instance;
} _TsrWarning_TrafficLightSignal_default_instance_;
class TsrWarningDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TsrWarning> _instance;
} _TsrWarning_default_instance_;
class TsrStateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TsrState> _instance;
} _TsrState_default_instance_;
class IhcSignalDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IhcSignal> _instance;
} _IhcSignal_default_instance_;
class IhcStateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IhcState> _instance;
} _IhcState_default_instance_;
class BsdWarningDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BsdWarning> _instance;
} _BsdWarning_default_instance_;
class BsdStateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BsdState> _instance;
} _BsdState_default_instance_;
class LcaWarningDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LcaWarning> _instance;
} _LcaWarning_default_instance_;
class LcaStateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LcaState> _instance;
} _LcaState_default_instance_;
class WarningDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Warning> _instance;
} _Warning_default_instance_;
}  // namespace object
}  // namespace perception
static void InitDefaultsscc_info_BsdState_object_5fwarning_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perception::object::_BsdState_default_instance_;
    new (ptr) ::perception::object::BsdState();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perception::object::BsdState::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BsdState_object_5fwarning_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BsdState_object_5fwarning_2eproto}, {}};

static void InitDefaultsscc_info_BsdWarning_object_5fwarning_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perception::object::_BsdWarning_default_instance_;
    new (ptr) ::perception::object::BsdWarning();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perception::object::BsdWarning::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BsdWarning_object_5fwarning_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BsdWarning_object_5fwarning_2eproto}, {}};

static void InitDefaultsscc_info_IhcSignal_object_5fwarning_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perception::object::_IhcSignal_default_instance_;
    new (ptr) ::perception::object::IhcSignal();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perception::object::IhcSignal::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IhcSignal_object_5fwarning_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IhcSignal_object_5fwarning_2eproto}, {}};

static void InitDefaultsscc_info_IhcState_object_5fwarning_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perception::object::_IhcState_default_instance_;
    new (ptr) ::perception::object::IhcState();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perception::object::IhcState::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IhcState_object_5fwarning_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IhcState_object_5fwarning_2eproto}, {}};

static void InitDefaultsscc_info_LcaState_object_5fwarning_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perception::object::_LcaState_default_instance_;
    new (ptr) ::perception::object::LcaState();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perception::object::LcaState::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LcaState_object_5fwarning_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LcaState_object_5fwarning_2eproto}, {}};

static void InitDefaultsscc_info_LcaWarning_object_5fwarning_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perception::object::_LcaWarning_default_instance_;
    new (ptr) ::perception::object::LcaWarning();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perception::object::LcaWarning::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LcaWarning_object_5fwarning_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LcaWarning_object_5fwarning_2eproto}, {}};

static void InitDefaultsscc_info_PedState_object_5fwarning_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perception::object::_PedState_default_instance_;
    new (ptr) ::perception::object::PedState();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perception::object::PedState::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PedState_object_5fwarning_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PedState_object_5fwarning_2eproto}, {}};

static void InitDefaultsscc_info_PedWarning_object_5fwarning_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perception::object::_PedWarning_default_instance_;
    new (ptr) ::perception::object::PedWarning();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perception::object::PedWarning::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PedWarning_object_5fwarning_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PedWarning_object_5fwarning_2eproto}, {}};

static void InitDefaultsscc_info_TsrState_object_5fwarning_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perception::object::_TsrState_default_instance_;
    new (ptr) ::perception::object::TsrState();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perception::object::TsrState::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TsrState_object_5fwarning_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TsrState_object_5fwarning_2eproto}, {}};

static void InitDefaultsscc_info_TsrWarning_object_5fwarning_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perception::object::_TsrWarning_default_instance_;
    new (ptr) ::perception::object::TsrWarning();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perception::object::TsrWarning::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TsrWarning_object_5fwarning_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TsrWarning_object_5fwarning_2eproto}, {
      &scc_info_TsrWarning_TrafficLightSignal_object_5fwarning_2eproto.base,}};

static void InitDefaultsscc_info_TsrWarning_TrafficLightSignal_object_5fwarning_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perception::object::_TsrWarning_TrafficLightSignal_default_instance_;
    new (ptr) ::perception::object::TsrWarning_TrafficLightSignal();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perception::object::TsrWarning_TrafficLightSignal::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TsrWarning_TrafficLightSignal_object_5fwarning_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TsrWarning_TrafficLightSignal_object_5fwarning_2eproto}, {}};

static void InitDefaultsscc_info_VehicleState_object_5fwarning_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perception::object::_VehicleState_default_instance_;
    new (ptr) ::perception::object::VehicleState();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perception::object::VehicleState::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_VehicleState_object_5fwarning_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_VehicleState_object_5fwarning_2eproto}, {}};

static void InitDefaultsscc_info_VehicleWarning_object_5fwarning_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perception::object::_VehicleWarning_default_instance_;
    new (ptr) ::perception::object::VehicleWarning();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perception::object::VehicleWarning::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_VehicleWarning_object_5fwarning_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_VehicleWarning_object_5fwarning_2eproto}, {}};

static void InitDefaultsscc_info_Warning_object_5fwarning_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perception::object::_Warning_default_instance_;
    new (ptr) ::perception::object::Warning();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perception::object::Warning::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<13> scc_info_Warning_object_5fwarning_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 13, 0, InitDefaultsscc_info_Warning_object_5fwarning_2eproto}, {
      &scc_info_VehicleWarning_object_5fwarning_2eproto.base,
      &scc_info_PedWarning_object_5fwarning_2eproto.base,
      &scc_info_TsrWarning_object_5fwarning_2eproto.base,
      &scc_info_IhcSignal_object_5fwarning_2eproto.base,
      &scc_info_BsdWarning_object_5fwarning_2eproto.base,
      &scc_info_LcaWarning_object_5fwarning_2eproto.base,
      &scc_info_VehicleState_object_5fwarning_2eproto.base,
      &scc_info_PedState_object_5fwarning_2eproto.base,
      &scc_info_TsrState_object_5fwarning_2eproto.base,
      &scc_info_IhcState_object_5fwarning_2eproto.base,
      &scc_info_BsdState_object_5fwarning_2eproto.base,
      &scc_info_LcaState_object_5fwarning_2eproto.base,
      &scc_info_Point2fList_geometry_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_object_5fwarning_2eproto[14];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_object_5fwarning_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_object_5fwarning_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_object_5fwarning_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::perception::object::VehicleWarning, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::perception::object::VehicleWarning, vehicle_id_),
  PROTOBUF_FIELD_OFFSET(::perception::object::VehicleWarning, headway_),
  PROTOBUF_FIELD_OFFSET(::perception::object::VehicleWarning, warning_level_),
  PROTOBUF_FIELD_OFFSET(::perception::object::VehicleWarning, fcw_),
  PROTOBUF_FIELD_OFFSET(::perception::object::VehicleWarning, ufcw_),
  PROTOBUF_FIELD_OFFSET(::perception::object::VehicleWarning, headway_warning_),
  PROTOBUF_FIELD_OFFSET(::perception::object::VehicleWarning, vb_warning_),
  PROTOBUF_FIELD_OFFSET(::perception::object::VehicleWarning, sag_warning_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::perception::object::VehicleState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::perception::object::VehicleState, fcw_state_),
  PROTOBUF_FIELD_OFFSET(::perception::object::VehicleState, hmw_state_),
  PROTOBUF_FIELD_OFFSET(::perception::object::VehicleState, fcw_level_),
  PROTOBUF_FIELD_OFFSET(::perception::object::VehicleState, ufcw_level_),
  PROTOBUF_FIELD_OFFSET(::perception::object::VehicleState, hmw_level_),
  PROTOBUF_FIELD_OFFSET(::perception::object::VehicleState, vb_level_),
  PROTOBUF_FIELD_OFFSET(::perception::object::VehicleState, sag_level_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::perception::object::PedWarning, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::perception::object::PedWarning, ped_on_),
  PROTOBUF_FIELD_OFFSET(::perception::object::PedWarning, pcw_on_),
  PROTOBUF_FIELD_OFFSET(::perception::object::PedWarning, pcw_warning_level_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::perception::object::PedState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::perception::object::PedState, pcw_state_),
  PROTOBUF_FIELD_OFFSET(::perception::object::PedState, pcw_level_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::perception::object::TsrWarning_TrafficLightSignal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::perception::object::TsrWarning_TrafficLightSignal, right_turn_on_red_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::perception::object::TsrWarning, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::perception::object::TsrWarning, height_limit_),
  PROTOBUF_FIELD_OFFSET(::perception::object::TsrWarning, weight_limit_),
  PROTOBUF_FIELD_OFFSET(::perception::object::TsrWarning, speed_limit_),
  PROTOBUF_FIELD_OFFSET(::perception::object::TsrWarning, tsr_warning_level_),
  PROTOBUF_FIELD_OFFSET(::perception::object::TsrWarning, no_overtaking_status_),
  PROTOBUF_FIELD_OFFSET(::perception::object::TsrWarning, light_signal_),
  PROTOBUF_FIELD_OFFSET(::perception::object::TsrWarning, removal_speed_limit_),
  PROTOBUF_FIELD_OFFSET(::perception::object::TsrWarning, speed_limit_distance_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::perception::object::TsrState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::perception::object::TsrState, tsr_state_),
  PROTOBUF_FIELD_OFFSET(::perception::object::TsrState, tsr_level_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::perception::object::IhcSignal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::perception::object::IhcSignal, control_signal_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::perception::object::IhcState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::perception::object::IhcState, ihc_state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::perception::object::BsdWarning, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::perception::object::BsdWarning, left_warning_),
  PROTOBUF_FIELD_OFFSET(::perception::object::BsdWarning, right_warning_),
  PROTOBUF_FIELD_OFFSET(::perception::object::BsdWarning, front_warning_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::perception::object::BsdState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::perception::object::BsdState, bsd_state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::perception::object::LcaWarning, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::perception::object::LcaWarning, left_warning_),
  PROTOBUF_FIELD_OFFSET(::perception::object::LcaWarning, right_warning_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::perception::object::LcaState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::perception::object::LcaState, lca_state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::perception::object::Warning, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::perception::object::Warning, vehicle_warning_),
  PROTOBUF_FIELD_OFFSET(::perception::object::Warning, ped_warning_),
  PROTOBUF_FIELD_OFFSET(::perception::object::Warning, tsr_warning_),
  PROTOBUF_FIELD_OFFSET(::perception::object::Warning, ihc_signal_),
  PROTOBUF_FIELD_OFFSET(::perception::object::Warning, bsd_warning_),
  PROTOBUF_FIELD_OFFSET(::perception::object::Warning, lca_warning_),
  PROTOBUF_FIELD_OFFSET(::perception::object::Warning, vehicle_state_),
  PROTOBUF_FIELD_OFFSET(::perception::object::Warning, ped_state_),
  PROTOBUF_FIELD_OFFSET(::perception::object::Warning, tsr_state_),
  PROTOBUF_FIELD_OFFSET(::perception::object::Warning, ihc_state_),
  PROTOBUF_FIELD_OFFSET(::perception::object::Warning, bsd_state_),
  PROTOBUF_FIELD_OFFSET(::perception::object::Warning, lca_state_),
  PROTOBUF_FIELD_OFFSET(::perception::object::Warning, object_valid_),
  PROTOBUF_FIELD_OFFSET(::perception::object::Warning, bsd_warning_zone_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::perception::object::VehicleWarning)},
  { 13, -1, sizeof(::perception::object::VehicleState)},
  { 25, -1, sizeof(::perception::object::PedWarning)},
  { 33, -1, sizeof(::perception::object::PedState)},
  { 40, -1, sizeof(::perception::object::TsrWarning_TrafficLightSignal)},
  { 46, -1, sizeof(::perception::object::TsrWarning)},
  { 59, -1, sizeof(::perception::object::TsrState)},
  { 66, -1, sizeof(::perception::object::IhcSignal)},
  { 72, -1, sizeof(::perception::object::IhcState)},
  { 78, -1, sizeof(::perception::object::BsdWarning)},
  { 86, -1, sizeof(::perception::object::BsdState)},
  { 92, -1, sizeof(::perception::object::LcaWarning)},
  { 99, -1, sizeof(::perception::object::LcaState)},
  { 105, -1, sizeof(::perception::object::Warning)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::perception::object::_VehicleWarning_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::perception::object::_VehicleState_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::perception::object::_PedWarning_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::perception::object::_PedState_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::perception::object::_TsrWarning_TrafficLightSignal_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::perception::object::_TsrWarning_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::perception::object::_TsrState_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::perception::object::_IhcSignal_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::perception::object::_IhcState_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::perception::object::_BsdWarning_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::perception::object::_BsdState_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::perception::object::_LcaWarning_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::perception::object::_LcaState_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::perception::object::_Warning_default_instance_),
};

const char descriptor_table_protodef_object_5fwarning_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\024object_warning.proto\022\021perception.objec"
  "t\032\016geometry.proto\"\251\001\n\016VehicleWarning\022\022\n\n"
  "vehicle_id\030\001 \001(\005\022\017\n\007headway\030\002 \001(\002\022\025\n\rwar"
  "ning_level\030\003 \001(\005\022\013\n\003fcw\030\004 \001(\005\022\014\n\004ufcw\030\005 "
  "\001(\005\022\027\n\017headway_warning\030\006 \001(\005\022\022\n\nvb_warni"
  "ng\030\007 \001(\005\022\023\n\013sag_warning\030\010 \001(\005\"\223\001\n\014Vehicl"
  "eState\022\021\n\tfcw_state\030\001 \001(\005\022\021\n\thmw_state\030\002"
  " \001(\005\022\021\n\tfcw_level\030\n \001(\005\022\022\n\nufcw_level\030\013 "
  "\001(\005\022\021\n\thmw_level\030\014 \001(\005\022\020\n\010vb_level\030\r \001(\005"
  "\022\021\n\tsag_level\030\016 \001(\005\"G\n\nPedWarning\022\016\n\006ped"
  "_on\030\001 \001(\010\022\016\n\006pcw_on\030\002 \001(\010\022\031\n\021pcw_warning"
  "_level\030\003 \001(\005\"0\n\010PedState\022\021\n\tpcw_state\030\001 "
  "\001(\005\022\021\n\tpcw_level\030\n \001(\005\"\272\002\n\nTsrWarning\022\024\n"
  "\014height_limit\030\001 \001(\002\022\024\n\014weight_limit\030\002 \001("
  "\002\022\023\n\013speed_limit\030\003 \001(\005\022\031\n\021tsr_warning_le"
  "vel\030\004 \001(\005\022\034\n\024no_overtaking_status\030\005 \001(\005\022"
  "F\n\014light_signal\030\006 \001(\01320.perception.objec"
  "t.TsrWarning.TrafficLightSignal\022\033\n\023remov"
  "al_speed_limit\030\007 \001(\005\022\034\n\024speed_limit_dist"
  "ance\030\010 \001(\002\032/\n\022TrafficLightSignal\022\031\n\021righ"
  "t_turn_on_red\030\001 \001(\010\"0\n\010TsrState\022\021\n\ttsr_s"
  "tate\030\001 \001(\005\022\021\n\ttsr_level\030\n \001(\005\"\246\001\n\tIhcSig"
  "nal\022B\n\016control_signal\030\001 \001(\0162*.perception"
  ".object.IhcSignal.IhcSignalType\"U\n\rIhcSi"
  "gnalType\022\021\n\rkLightInvalid\020\000\022\r\n\tkLightOff"
  "\020\001\022\021\n\rkDippedBeamOn\020\002\022\017\n\013kHighBeamOn\020\003\"\035"
  "\n\010IhcState\022\021\n\tihc_state\030\001 \001(\005\"P\n\nBsdWarn"
  "ing\022\024\n\014left_warning\030\001 \001(\005\022\025\n\rright_warni"
  "ng\030\002 \001(\005\022\025\n\rfront_warning\030\003 \001(\005\"\035\n\010BsdSt"
  "ate\022\021\n\tbsd_state\030\001 \001(\005\"9\n\nLcaWarning\022\024\n\014"
  "left_warning\030\001 \001(\005\022\025\n\rright_warning\030\002 \001("
  "\005\"\035\n\010LcaState\022\021\n\tlca_state\030\001 \001(\005\"\277\005\n\007War"
  "ning\022:\n\017vehicle_warning\030\001 \001(\0132!.percepti"
  "on.object.VehicleWarning\0222\n\013ped_warning\030"
  "\002 \001(\0132\035.perception.object.PedWarning\0222\n\013"
  "tsr_warning\030\003 \001(\0132\035.perception.object.Ts"
  "rWarning\0220\n\nihc_signal\030\004 \001(\0132\034.perceptio"
  "n.object.IhcSignal\0222\n\013bsd_warning\030\005 \001(\0132"
  "\035.perception.object.BsdWarning\0222\n\013lca_wa"
  "rning\030\006 \001(\0132\035.perception.object.LcaWarni"
  "ng\0226\n\rvehicle_state\030\n \001(\0132\037.perception.o"
  "bject.VehicleState\022.\n\tped_state\030\013 \001(\0132\033."
  "perception.object.PedState\022.\n\ttsr_state\030"
  "\014 \001(\0132\033.perception.object.TsrState\022.\n\tih"
  "c_state\030\r \001(\0132\033.perception.object.IhcSta"
  "te\022.\n\tbsd_state\030\016 \001(\0132\033.perception.objec"
  "t.BsdState\022.\n\tlca_state\030\017 \001(\0132\033.percepti"
  "on.object.LcaState\022\024\n\014object_valid\030\024 \001(\005"
  "\0228\n\020bsd_warning_zone\030\025 \001(\0132\036.perception."
  "common.Point2fListb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_object_5fwarning_2eproto_deps[1] = {
  &::descriptor_table_geometry_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_object_5fwarning_2eproto_sccs[14] = {
  &scc_info_BsdState_object_5fwarning_2eproto.base,
  &scc_info_BsdWarning_object_5fwarning_2eproto.base,
  &scc_info_IhcSignal_object_5fwarning_2eproto.base,
  &scc_info_IhcState_object_5fwarning_2eproto.base,
  &scc_info_LcaState_object_5fwarning_2eproto.base,
  &scc_info_LcaWarning_object_5fwarning_2eproto.base,
  &scc_info_PedState_object_5fwarning_2eproto.base,
  &scc_info_PedWarning_object_5fwarning_2eproto.base,
  &scc_info_TsrState_object_5fwarning_2eproto.base,
  &scc_info_TsrWarning_object_5fwarning_2eproto.base,
  &scc_info_TsrWarning_TrafficLightSignal_object_5fwarning_2eproto.base,
  &scc_info_VehicleState_object_5fwarning_2eproto.base,
  &scc_info_VehicleWarning_object_5fwarning_2eproto.base,
  &scc_info_Warning_object_5fwarning_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_object_5fwarning_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_object_5fwarning_2eproto = {
  false, false, descriptor_table_protodef_object_5fwarning_2eproto, "object_warning.proto", 1986,
  &descriptor_table_object_5fwarning_2eproto_once, descriptor_table_object_5fwarning_2eproto_sccs, descriptor_table_object_5fwarning_2eproto_deps, 14, 1,
  schemas, file_default_instances, TableStruct_object_5fwarning_2eproto::offsets,
  file_level_metadata_object_5fwarning_2eproto, 14, file_level_enum_descriptors_object_5fwarning_2eproto, file_level_service_descriptors_object_5fwarning_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_object_5fwarning_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_object_5fwarning_2eproto)), true);
namespace perception {
namespace object {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* IhcSignal_IhcSignalType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_object_5fwarning_2eproto);
  return file_level_enum_descriptors_object_5fwarning_2eproto[0];
}
bool IhcSignal_IhcSignalType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr IhcSignal_IhcSignalType IhcSignal::kLightInvalid;
constexpr IhcSignal_IhcSignalType IhcSignal::kLightOff;
constexpr IhcSignal_IhcSignalType IhcSignal::kDippedBeamOn;
constexpr IhcSignal_IhcSignalType IhcSignal::kHighBeamOn;
constexpr IhcSignal_IhcSignalType IhcSignal::IhcSignalType_MIN;
constexpr IhcSignal_IhcSignalType IhcSignal::IhcSignalType_MAX;
constexpr int IhcSignal::IhcSignalType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void VehicleWarning::InitAsDefaultInstance() {
}
class VehicleWarning::_Internal {
 public:
};

VehicleWarning::VehicleWarning(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:perception.object.VehicleWarning)
}
VehicleWarning::VehicleWarning(const VehicleWarning& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&vehicle_id_, &from.vehicle_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&sag_warning_) -
    reinterpret_cast<char*>(&vehicle_id_)) + sizeof(sag_warning_));
  // @@protoc_insertion_point(copy_constructor:perception.object.VehicleWarning)
}

void VehicleWarning::SharedCtor() {
  ::memset(&vehicle_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sag_warning_) -
      reinterpret_cast<char*>(&vehicle_id_)) + sizeof(sag_warning_));
}

VehicleWarning::~VehicleWarning() {
  // @@protoc_insertion_point(destructor:perception.object.VehicleWarning)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void VehicleWarning::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void VehicleWarning::ArenaDtor(void* object) {
  VehicleWarning* _this = reinterpret_cast< VehicleWarning* >(object);
  (void)_this;
}
void VehicleWarning::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void VehicleWarning::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VehicleWarning& VehicleWarning::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_VehicleWarning_object_5fwarning_2eproto.base);
  return *internal_default_instance();
}


void VehicleWarning::Clear() {
// @@protoc_insertion_point(message_clear_start:perception.object.VehicleWarning)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&vehicle_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sag_warning_) -
      reinterpret_cast<char*>(&vehicle_id_)) + sizeof(sag_warning_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VehicleWarning::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 vehicle_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          vehicle_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float headway = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          headway_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // int32 warning_level = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          warning_level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 fcw = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          fcw_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 ufcw = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ufcw_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 headway_warning = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          headway_warning_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 vb_warning = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          vb_warning_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 sag_warning = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          sag_warning_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VehicleWarning::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perception.object.VehicleWarning)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 vehicle_id = 1;
  if (this->vehicle_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_vehicle_id(), target);
  }

  // float headway = 2;
  if (!(this->headway() <= 0 && this->headway() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_headway(), target);
  }

  // int32 warning_level = 3;
  if (this->warning_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_warning_level(), target);
  }

  // int32 fcw = 4;
  if (this->fcw() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_fcw(), target);
  }

  // int32 ufcw = 5;
  if (this->ufcw() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_ufcw(), target);
  }

  // int32 headway_warning = 6;
  if (this->headway_warning() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_headway_warning(), target);
  }

  // int32 vb_warning = 7;
  if (this->vb_warning() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_vb_warning(), target);
  }

  // int32 sag_warning = 8;
  if (this->sag_warning() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_sag_warning(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perception.object.VehicleWarning)
  return target;
}

size_t VehicleWarning::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perception.object.VehicleWarning)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 vehicle_id = 1;
  if (this->vehicle_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_vehicle_id());
  }

  // float headway = 2;
  if (!(this->headway() <= 0 && this->headway() >= 0)) {
    total_size += 1 + 4;
  }

  // int32 warning_level = 3;
  if (this->warning_level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_warning_level());
  }

  // int32 fcw = 4;
  if (this->fcw() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_fcw());
  }

  // int32 ufcw = 5;
  if (this->ufcw() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_ufcw());
  }

  // int32 headway_warning = 6;
  if (this->headway_warning() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_headway_warning());
  }

  // int32 vb_warning = 7;
  if (this->vb_warning() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_vb_warning());
  }

  // int32 sag_warning = 8;
  if (this->sag_warning() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_sag_warning());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VehicleWarning::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:perception.object.VehicleWarning)
  GOOGLE_DCHECK_NE(&from, this);
  const VehicleWarning* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VehicleWarning>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:perception.object.VehicleWarning)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:perception.object.VehicleWarning)
    MergeFrom(*source);
  }
}

void VehicleWarning::MergeFrom(const VehicleWarning& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perception.object.VehicleWarning)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vehicle_id() != 0) {
    _internal_set_vehicle_id(from._internal_vehicle_id());
  }
  if (!(from.headway() <= 0 && from.headway() >= 0)) {
    _internal_set_headway(from._internal_headway());
  }
  if (from.warning_level() != 0) {
    _internal_set_warning_level(from._internal_warning_level());
  }
  if (from.fcw() != 0) {
    _internal_set_fcw(from._internal_fcw());
  }
  if (from.ufcw() != 0) {
    _internal_set_ufcw(from._internal_ufcw());
  }
  if (from.headway_warning() != 0) {
    _internal_set_headway_warning(from._internal_headway_warning());
  }
  if (from.vb_warning() != 0) {
    _internal_set_vb_warning(from._internal_vb_warning());
  }
  if (from.sag_warning() != 0) {
    _internal_set_sag_warning(from._internal_sag_warning());
  }
}

void VehicleWarning::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:perception.object.VehicleWarning)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VehicleWarning::CopyFrom(const VehicleWarning& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perception.object.VehicleWarning)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleWarning::IsInitialized() const {
  return true;
}

void VehicleWarning::InternalSwap(VehicleWarning* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VehicleWarning, sag_warning_)
      + sizeof(VehicleWarning::sag_warning_)
      - PROTOBUF_FIELD_OFFSET(VehicleWarning, vehicle_id_)>(
          reinterpret_cast<char*>(&vehicle_id_),
          reinterpret_cast<char*>(&other->vehicle_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata VehicleWarning::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void VehicleState::InitAsDefaultInstance() {
}
class VehicleState::_Internal {
 public:
};

VehicleState::VehicleState(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:perception.object.VehicleState)
}
VehicleState::VehicleState(const VehicleState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&fcw_state_, &from.fcw_state_,
    static_cast<size_t>(reinterpret_cast<char*>(&vb_level_) -
    reinterpret_cast<char*>(&fcw_state_)) + sizeof(vb_level_));
  // @@protoc_insertion_point(copy_constructor:perception.object.VehicleState)
}

void VehicleState::SharedCtor() {
  ::memset(&fcw_state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vb_level_) -
      reinterpret_cast<char*>(&fcw_state_)) + sizeof(vb_level_));
}

VehicleState::~VehicleState() {
  // @@protoc_insertion_point(destructor:perception.object.VehicleState)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void VehicleState::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void VehicleState::ArenaDtor(void* object) {
  VehicleState* _this = reinterpret_cast< VehicleState* >(object);
  (void)_this;
}
void VehicleState::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void VehicleState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VehicleState& VehicleState::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_VehicleState_object_5fwarning_2eproto.base);
  return *internal_default_instance();
}


void VehicleState::Clear() {
// @@protoc_insertion_point(message_clear_start:perception.object.VehicleState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&fcw_state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vb_level_) -
      reinterpret_cast<char*>(&fcw_state_)) + sizeof(vb_level_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VehicleState::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 fcw_state = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          fcw_state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 hmw_state = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          hmw_state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 fcw_level = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          fcw_level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 ufcw_level = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          ufcw_level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 hmw_level = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          hmw_level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 vb_level = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          vb_level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 sag_level = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          sag_level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VehicleState::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perception.object.VehicleState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 fcw_state = 1;
  if (this->fcw_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_fcw_state(), target);
  }

  // int32 hmw_state = 2;
  if (this->hmw_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_hmw_state(), target);
  }

  // int32 fcw_level = 10;
  if (this->fcw_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(10, this->_internal_fcw_level(), target);
  }

  // int32 ufcw_level = 11;
  if (this->ufcw_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(11, this->_internal_ufcw_level(), target);
  }

  // int32 hmw_level = 12;
  if (this->hmw_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(12, this->_internal_hmw_level(), target);
  }

  // int32 vb_level = 13;
  if (this->vb_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(13, this->_internal_vb_level(), target);
  }

  // int32 sag_level = 14;
  if (this->sag_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(14, this->_internal_sag_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perception.object.VehicleState)
  return target;
}

size_t VehicleState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perception.object.VehicleState)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 fcw_state = 1;
  if (this->fcw_state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_fcw_state());
  }

  // int32 hmw_state = 2;
  if (this->hmw_state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_hmw_state());
  }

  // int32 sag_level = 14;
  if (this->sag_level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_sag_level());
  }

  // int32 fcw_level = 10;
  if (this->fcw_level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_fcw_level());
  }

  // int32 ufcw_level = 11;
  if (this->ufcw_level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_ufcw_level());
  }

  // int32 hmw_level = 12;
  if (this->hmw_level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_hmw_level());
  }

  // int32 vb_level = 13;
  if (this->vb_level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_vb_level());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VehicleState::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:perception.object.VehicleState)
  GOOGLE_DCHECK_NE(&from, this);
  const VehicleState* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VehicleState>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:perception.object.VehicleState)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:perception.object.VehicleState)
    MergeFrom(*source);
  }
}

void VehicleState::MergeFrom(const VehicleState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perception.object.VehicleState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fcw_state() != 0) {
    _internal_set_fcw_state(from._internal_fcw_state());
  }
  if (from.hmw_state() != 0) {
    _internal_set_hmw_state(from._internal_hmw_state());
  }
  if (from.sag_level() != 0) {
    _internal_set_sag_level(from._internal_sag_level());
  }
  if (from.fcw_level() != 0) {
    _internal_set_fcw_level(from._internal_fcw_level());
  }
  if (from.ufcw_level() != 0) {
    _internal_set_ufcw_level(from._internal_ufcw_level());
  }
  if (from.hmw_level() != 0) {
    _internal_set_hmw_level(from._internal_hmw_level());
  }
  if (from.vb_level() != 0) {
    _internal_set_vb_level(from._internal_vb_level());
  }
}

void VehicleState::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:perception.object.VehicleState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VehicleState::CopyFrom(const VehicleState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perception.object.VehicleState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleState::IsInitialized() const {
  return true;
}

void VehicleState::InternalSwap(VehicleState* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VehicleState, vb_level_)
      + sizeof(VehicleState::vb_level_)
      - PROTOBUF_FIELD_OFFSET(VehicleState, fcw_state_)>(
          reinterpret_cast<char*>(&fcw_state_),
          reinterpret_cast<char*>(&other->fcw_state_));
}

::PROTOBUF_NAMESPACE_ID::Metadata VehicleState::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PedWarning::InitAsDefaultInstance() {
}
class PedWarning::_Internal {
 public:
};

PedWarning::PedWarning(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:perception.object.PedWarning)
}
PedWarning::PedWarning(const PedWarning& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ped_on_, &from.ped_on_,
    static_cast<size_t>(reinterpret_cast<char*>(&pcw_warning_level_) -
    reinterpret_cast<char*>(&ped_on_)) + sizeof(pcw_warning_level_));
  // @@protoc_insertion_point(copy_constructor:perception.object.PedWarning)
}

void PedWarning::SharedCtor() {
  ::memset(&ped_on_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pcw_warning_level_) -
      reinterpret_cast<char*>(&ped_on_)) + sizeof(pcw_warning_level_));
}

PedWarning::~PedWarning() {
  // @@protoc_insertion_point(destructor:perception.object.PedWarning)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PedWarning::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PedWarning::ArenaDtor(void* object) {
  PedWarning* _this = reinterpret_cast< PedWarning* >(object);
  (void)_this;
}
void PedWarning::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PedWarning::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PedWarning& PedWarning::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PedWarning_object_5fwarning_2eproto.base);
  return *internal_default_instance();
}


void PedWarning::Clear() {
// @@protoc_insertion_point(message_clear_start:perception.object.PedWarning)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ped_on_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pcw_warning_level_) -
      reinterpret_cast<char*>(&ped_on_)) + sizeof(pcw_warning_level_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PedWarning::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool ped_on = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ped_on_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool pcw_on = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          pcw_on_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 pcw_warning_level = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          pcw_warning_level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PedWarning::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perception.object.PedWarning)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ped_on = 1;
  if (this->ped_on() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_ped_on(), target);
  }

  // bool pcw_on = 2;
  if (this->pcw_on() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_pcw_on(), target);
  }

  // int32 pcw_warning_level = 3;
  if (this->pcw_warning_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_pcw_warning_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perception.object.PedWarning)
  return target;
}

size_t PedWarning::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perception.object.PedWarning)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ped_on = 1;
  if (this->ped_on() != 0) {
    total_size += 1 + 1;
  }

  // bool pcw_on = 2;
  if (this->pcw_on() != 0) {
    total_size += 1 + 1;
  }

  // int32 pcw_warning_level = 3;
  if (this->pcw_warning_level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_pcw_warning_level());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PedWarning::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:perception.object.PedWarning)
  GOOGLE_DCHECK_NE(&from, this);
  const PedWarning* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PedWarning>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:perception.object.PedWarning)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:perception.object.PedWarning)
    MergeFrom(*source);
  }
}

void PedWarning::MergeFrom(const PedWarning& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perception.object.PedWarning)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ped_on() != 0) {
    _internal_set_ped_on(from._internal_ped_on());
  }
  if (from.pcw_on() != 0) {
    _internal_set_pcw_on(from._internal_pcw_on());
  }
  if (from.pcw_warning_level() != 0) {
    _internal_set_pcw_warning_level(from._internal_pcw_warning_level());
  }
}

void PedWarning::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:perception.object.PedWarning)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PedWarning::CopyFrom(const PedWarning& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perception.object.PedWarning)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PedWarning::IsInitialized() const {
  return true;
}

void PedWarning::InternalSwap(PedWarning* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PedWarning, pcw_warning_level_)
      + sizeof(PedWarning::pcw_warning_level_)
      - PROTOBUF_FIELD_OFFSET(PedWarning, ped_on_)>(
          reinterpret_cast<char*>(&ped_on_),
          reinterpret_cast<char*>(&other->ped_on_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PedWarning::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PedState::InitAsDefaultInstance() {
}
class PedState::_Internal {
 public:
};

PedState::PedState(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:perception.object.PedState)
}
PedState::PedState(const PedState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&pcw_state_, &from.pcw_state_,
    static_cast<size_t>(reinterpret_cast<char*>(&pcw_level_) -
    reinterpret_cast<char*>(&pcw_state_)) + sizeof(pcw_level_));
  // @@protoc_insertion_point(copy_constructor:perception.object.PedState)
}

void PedState::SharedCtor() {
  ::memset(&pcw_state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pcw_level_) -
      reinterpret_cast<char*>(&pcw_state_)) + sizeof(pcw_level_));
}

PedState::~PedState() {
  // @@protoc_insertion_point(destructor:perception.object.PedState)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PedState::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PedState::ArenaDtor(void* object) {
  PedState* _this = reinterpret_cast< PedState* >(object);
  (void)_this;
}
void PedState::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PedState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PedState& PedState::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PedState_object_5fwarning_2eproto.base);
  return *internal_default_instance();
}


void PedState::Clear() {
// @@protoc_insertion_point(message_clear_start:perception.object.PedState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&pcw_state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pcw_level_) -
      reinterpret_cast<char*>(&pcw_state_)) + sizeof(pcw_level_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PedState::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 pcw_state = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          pcw_state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 pcw_level = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          pcw_level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PedState::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perception.object.PedState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 pcw_state = 1;
  if (this->pcw_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_pcw_state(), target);
  }

  // int32 pcw_level = 10;
  if (this->pcw_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(10, this->_internal_pcw_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perception.object.PedState)
  return target;
}

size_t PedState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perception.object.PedState)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 pcw_state = 1;
  if (this->pcw_state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_pcw_state());
  }

  // int32 pcw_level = 10;
  if (this->pcw_level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_pcw_level());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PedState::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:perception.object.PedState)
  GOOGLE_DCHECK_NE(&from, this);
  const PedState* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PedState>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:perception.object.PedState)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:perception.object.PedState)
    MergeFrom(*source);
  }
}

void PedState::MergeFrom(const PedState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perception.object.PedState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pcw_state() != 0) {
    _internal_set_pcw_state(from._internal_pcw_state());
  }
  if (from.pcw_level() != 0) {
    _internal_set_pcw_level(from._internal_pcw_level());
  }
}

void PedState::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:perception.object.PedState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PedState::CopyFrom(const PedState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perception.object.PedState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PedState::IsInitialized() const {
  return true;
}

void PedState::InternalSwap(PedState* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PedState, pcw_level_)
      + sizeof(PedState::pcw_level_)
      - PROTOBUF_FIELD_OFFSET(PedState, pcw_state_)>(
          reinterpret_cast<char*>(&pcw_state_),
          reinterpret_cast<char*>(&other->pcw_state_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PedState::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TsrWarning_TrafficLightSignal::InitAsDefaultInstance() {
}
class TsrWarning_TrafficLightSignal::_Internal {
 public:
};

TsrWarning_TrafficLightSignal::TsrWarning_TrafficLightSignal(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:perception.object.TsrWarning.TrafficLightSignal)
}
TsrWarning_TrafficLightSignal::TsrWarning_TrafficLightSignal(const TsrWarning_TrafficLightSignal& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  right_turn_on_red_ = from.right_turn_on_red_;
  // @@protoc_insertion_point(copy_constructor:perception.object.TsrWarning.TrafficLightSignal)
}

void TsrWarning_TrafficLightSignal::SharedCtor() {
  right_turn_on_red_ = false;
}

TsrWarning_TrafficLightSignal::~TsrWarning_TrafficLightSignal() {
  // @@protoc_insertion_point(destructor:perception.object.TsrWarning.TrafficLightSignal)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TsrWarning_TrafficLightSignal::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void TsrWarning_TrafficLightSignal::ArenaDtor(void* object) {
  TsrWarning_TrafficLightSignal* _this = reinterpret_cast< TsrWarning_TrafficLightSignal* >(object);
  (void)_this;
}
void TsrWarning_TrafficLightSignal::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TsrWarning_TrafficLightSignal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TsrWarning_TrafficLightSignal& TsrWarning_TrafficLightSignal::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TsrWarning_TrafficLightSignal_object_5fwarning_2eproto.base);
  return *internal_default_instance();
}


void TsrWarning_TrafficLightSignal::Clear() {
// @@protoc_insertion_point(message_clear_start:perception.object.TsrWarning.TrafficLightSignal)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  right_turn_on_red_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TsrWarning_TrafficLightSignal::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool right_turn_on_red = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          right_turn_on_red_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TsrWarning_TrafficLightSignal::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perception.object.TsrWarning.TrafficLightSignal)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool right_turn_on_red = 1;
  if (this->right_turn_on_red() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_right_turn_on_red(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perception.object.TsrWarning.TrafficLightSignal)
  return target;
}

size_t TsrWarning_TrafficLightSignal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perception.object.TsrWarning.TrafficLightSignal)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool right_turn_on_red = 1;
  if (this->right_turn_on_red() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TsrWarning_TrafficLightSignal::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:perception.object.TsrWarning.TrafficLightSignal)
  GOOGLE_DCHECK_NE(&from, this);
  const TsrWarning_TrafficLightSignal* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TsrWarning_TrafficLightSignal>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:perception.object.TsrWarning.TrafficLightSignal)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:perception.object.TsrWarning.TrafficLightSignal)
    MergeFrom(*source);
  }
}

void TsrWarning_TrafficLightSignal::MergeFrom(const TsrWarning_TrafficLightSignal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perception.object.TsrWarning.TrafficLightSignal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.right_turn_on_red() != 0) {
    _internal_set_right_turn_on_red(from._internal_right_turn_on_red());
  }
}

void TsrWarning_TrafficLightSignal::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:perception.object.TsrWarning.TrafficLightSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TsrWarning_TrafficLightSignal::CopyFrom(const TsrWarning_TrafficLightSignal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perception.object.TsrWarning.TrafficLightSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TsrWarning_TrafficLightSignal::IsInitialized() const {
  return true;
}

void TsrWarning_TrafficLightSignal::InternalSwap(TsrWarning_TrafficLightSignal* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(right_turn_on_red_, other->right_turn_on_red_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TsrWarning_TrafficLightSignal::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TsrWarning::InitAsDefaultInstance() {
  ::perception::object::_TsrWarning_default_instance_._instance.get_mutable()->light_signal_ = const_cast< ::perception::object::TsrWarning_TrafficLightSignal*>(
      ::perception::object::TsrWarning_TrafficLightSignal::internal_default_instance());
}
class TsrWarning::_Internal {
 public:
  static const ::perception::object::TsrWarning_TrafficLightSignal& light_signal(const TsrWarning* msg);
};

const ::perception::object::TsrWarning_TrafficLightSignal&
TsrWarning::_Internal::light_signal(const TsrWarning* msg) {
  return *msg->light_signal_;
}
TsrWarning::TsrWarning(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:perception.object.TsrWarning)
}
TsrWarning::TsrWarning(const TsrWarning& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_light_signal()) {
    light_signal_ = new ::perception::object::TsrWarning_TrafficLightSignal(*from.light_signal_);
  } else {
    light_signal_ = nullptr;
  }
  ::memcpy(&height_limit_, &from.height_limit_,
    static_cast<size_t>(reinterpret_cast<char*>(&speed_limit_distance_) -
    reinterpret_cast<char*>(&height_limit_)) + sizeof(speed_limit_distance_));
  // @@protoc_insertion_point(copy_constructor:perception.object.TsrWarning)
}

void TsrWarning::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TsrWarning_object_5fwarning_2eproto.base);
  ::memset(&light_signal_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&speed_limit_distance_) -
      reinterpret_cast<char*>(&light_signal_)) + sizeof(speed_limit_distance_));
}

TsrWarning::~TsrWarning() {
  // @@protoc_insertion_point(destructor:perception.object.TsrWarning)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TsrWarning::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete light_signal_;
}

void TsrWarning::ArenaDtor(void* object) {
  TsrWarning* _this = reinterpret_cast< TsrWarning* >(object);
  (void)_this;
}
void TsrWarning::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TsrWarning::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TsrWarning& TsrWarning::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TsrWarning_object_5fwarning_2eproto.base);
  return *internal_default_instance();
}


void TsrWarning::Clear() {
// @@protoc_insertion_point(message_clear_start:perception.object.TsrWarning)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && light_signal_ != nullptr) {
    delete light_signal_;
  }
  light_signal_ = nullptr;
  ::memset(&height_limit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&speed_limit_distance_) -
      reinterpret_cast<char*>(&height_limit_)) + sizeof(speed_limit_distance_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TsrWarning::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float height_limit = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          height_limit_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float weight_limit = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          weight_limit_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // int32 speed_limit = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          speed_limit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 tsr_warning_level = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          tsr_warning_level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 no_overtaking_status = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          no_overtaking_status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .perception.object.TsrWarning.TrafficLightSignal light_signal = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_light_signal(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 removal_speed_limit = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          removal_speed_limit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float speed_limit_distance = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 69)) {
          speed_limit_distance_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TsrWarning::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perception.object.TsrWarning)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float height_limit = 1;
  if (!(this->height_limit() <= 0 && this->height_limit() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_height_limit(), target);
  }

  // float weight_limit = 2;
  if (!(this->weight_limit() <= 0 && this->weight_limit() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_weight_limit(), target);
  }

  // int32 speed_limit = 3;
  if (this->speed_limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_speed_limit(), target);
  }

  // int32 tsr_warning_level = 4;
  if (this->tsr_warning_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_tsr_warning_level(), target);
  }

  // int32 no_overtaking_status = 5;
  if (this->no_overtaking_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_no_overtaking_status(), target);
  }

  // .perception.object.TsrWarning.TrafficLightSignal light_signal = 6;
  if (this->has_light_signal()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::light_signal(this), target, stream);
  }

  // int32 removal_speed_limit = 7;
  if (this->removal_speed_limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_removal_speed_limit(), target);
  }

  // float speed_limit_distance = 8;
  if (!(this->speed_limit_distance() <= 0 && this->speed_limit_distance() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(8, this->_internal_speed_limit_distance(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perception.object.TsrWarning)
  return target;
}

size_t TsrWarning::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perception.object.TsrWarning)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .perception.object.TsrWarning.TrafficLightSignal light_signal = 6;
  if (this->has_light_signal()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *light_signal_);
  }

  // float height_limit = 1;
  if (!(this->height_limit() <= 0 && this->height_limit() >= 0)) {
    total_size += 1 + 4;
  }

  // float weight_limit = 2;
  if (!(this->weight_limit() <= 0 && this->weight_limit() >= 0)) {
    total_size += 1 + 4;
  }

  // int32 speed_limit = 3;
  if (this->speed_limit() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_speed_limit());
  }

  // int32 tsr_warning_level = 4;
  if (this->tsr_warning_level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_tsr_warning_level());
  }

  // int32 no_overtaking_status = 5;
  if (this->no_overtaking_status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_no_overtaking_status());
  }

  // int32 removal_speed_limit = 7;
  if (this->removal_speed_limit() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_removal_speed_limit());
  }

  // float speed_limit_distance = 8;
  if (!(this->speed_limit_distance() <= 0 && this->speed_limit_distance() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TsrWarning::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:perception.object.TsrWarning)
  GOOGLE_DCHECK_NE(&from, this);
  const TsrWarning* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TsrWarning>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:perception.object.TsrWarning)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:perception.object.TsrWarning)
    MergeFrom(*source);
  }
}

void TsrWarning::MergeFrom(const TsrWarning& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perception.object.TsrWarning)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_light_signal()) {
    _internal_mutable_light_signal()->::perception::object::TsrWarning_TrafficLightSignal::MergeFrom(from._internal_light_signal());
  }
  if (!(from.height_limit() <= 0 && from.height_limit() >= 0)) {
    _internal_set_height_limit(from._internal_height_limit());
  }
  if (!(from.weight_limit() <= 0 && from.weight_limit() >= 0)) {
    _internal_set_weight_limit(from._internal_weight_limit());
  }
  if (from.speed_limit() != 0) {
    _internal_set_speed_limit(from._internal_speed_limit());
  }
  if (from.tsr_warning_level() != 0) {
    _internal_set_tsr_warning_level(from._internal_tsr_warning_level());
  }
  if (from.no_overtaking_status() != 0) {
    _internal_set_no_overtaking_status(from._internal_no_overtaking_status());
  }
  if (from.removal_speed_limit() != 0) {
    _internal_set_removal_speed_limit(from._internal_removal_speed_limit());
  }
  if (!(from.speed_limit_distance() <= 0 && from.speed_limit_distance() >= 0)) {
    _internal_set_speed_limit_distance(from._internal_speed_limit_distance());
  }
}

void TsrWarning::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:perception.object.TsrWarning)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TsrWarning::CopyFrom(const TsrWarning& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perception.object.TsrWarning)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TsrWarning::IsInitialized() const {
  return true;
}

void TsrWarning::InternalSwap(TsrWarning* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TsrWarning, speed_limit_distance_)
      + sizeof(TsrWarning::speed_limit_distance_)
      - PROTOBUF_FIELD_OFFSET(TsrWarning, light_signal_)>(
          reinterpret_cast<char*>(&light_signal_),
          reinterpret_cast<char*>(&other->light_signal_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TsrWarning::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TsrState::InitAsDefaultInstance() {
}
class TsrState::_Internal {
 public:
};

TsrState::TsrState(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:perception.object.TsrState)
}
TsrState::TsrState(const TsrState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&tsr_state_, &from.tsr_state_,
    static_cast<size_t>(reinterpret_cast<char*>(&tsr_level_) -
    reinterpret_cast<char*>(&tsr_state_)) + sizeof(tsr_level_));
  // @@protoc_insertion_point(copy_constructor:perception.object.TsrState)
}

void TsrState::SharedCtor() {
  ::memset(&tsr_state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tsr_level_) -
      reinterpret_cast<char*>(&tsr_state_)) + sizeof(tsr_level_));
}

TsrState::~TsrState() {
  // @@protoc_insertion_point(destructor:perception.object.TsrState)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TsrState::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void TsrState::ArenaDtor(void* object) {
  TsrState* _this = reinterpret_cast< TsrState* >(object);
  (void)_this;
}
void TsrState::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TsrState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TsrState& TsrState::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TsrState_object_5fwarning_2eproto.base);
  return *internal_default_instance();
}


void TsrState::Clear() {
// @@protoc_insertion_point(message_clear_start:perception.object.TsrState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&tsr_state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tsr_level_) -
      reinterpret_cast<char*>(&tsr_state_)) + sizeof(tsr_level_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TsrState::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 tsr_state = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          tsr_state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 tsr_level = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          tsr_level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TsrState::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perception.object.TsrState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 tsr_state = 1;
  if (this->tsr_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_tsr_state(), target);
  }

  // int32 tsr_level = 10;
  if (this->tsr_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(10, this->_internal_tsr_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perception.object.TsrState)
  return target;
}

size_t TsrState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perception.object.TsrState)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 tsr_state = 1;
  if (this->tsr_state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_tsr_state());
  }

  // int32 tsr_level = 10;
  if (this->tsr_level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_tsr_level());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TsrState::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:perception.object.TsrState)
  GOOGLE_DCHECK_NE(&from, this);
  const TsrState* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TsrState>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:perception.object.TsrState)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:perception.object.TsrState)
    MergeFrom(*source);
  }
}

void TsrState::MergeFrom(const TsrState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perception.object.TsrState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tsr_state() != 0) {
    _internal_set_tsr_state(from._internal_tsr_state());
  }
  if (from.tsr_level() != 0) {
    _internal_set_tsr_level(from._internal_tsr_level());
  }
}

void TsrState::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:perception.object.TsrState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TsrState::CopyFrom(const TsrState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perception.object.TsrState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TsrState::IsInitialized() const {
  return true;
}

void TsrState::InternalSwap(TsrState* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TsrState, tsr_level_)
      + sizeof(TsrState::tsr_level_)
      - PROTOBUF_FIELD_OFFSET(TsrState, tsr_state_)>(
          reinterpret_cast<char*>(&tsr_state_),
          reinterpret_cast<char*>(&other->tsr_state_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TsrState::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IhcSignal::InitAsDefaultInstance() {
}
class IhcSignal::_Internal {
 public:
};

IhcSignal::IhcSignal(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:perception.object.IhcSignal)
}
IhcSignal::IhcSignal(const IhcSignal& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  control_signal_ = from.control_signal_;
  // @@protoc_insertion_point(copy_constructor:perception.object.IhcSignal)
}

void IhcSignal::SharedCtor() {
  control_signal_ = 0;
}

IhcSignal::~IhcSignal() {
  // @@protoc_insertion_point(destructor:perception.object.IhcSignal)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IhcSignal::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void IhcSignal::ArenaDtor(void* object) {
  IhcSignal* _this = reinterpret_cast< IhcSignal* >(object);
  (void)_this;
}
void IhcSignal::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IhcSignal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IhcSignal& IhcSignal::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IhcSignal_object_5fwarning_2eproto.base);
  return *internal_default_instance();
}


void IhcSignal::Clear() {
// @@protoc_insertion_point(message_clear_start:perception.object.IhcSignal)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  control_signal_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IhcSignal::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .perception.object.IhcSignal.IhcSignalType control_signal = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_control_signal(static_cast<::perception::object::IhcSignal_IhcSignalType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IhcSignal::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perception.object.IhcSignal)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .perception.object.IhcSignal.IhcSignalType control_signal = 1;
  if (this->control_signal() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_control_signal(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perception.object.IhcSignal)
  return target;
}

size_t IhcSignal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perception.object.IhcSignal)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .perception.object.IhcSignal.IhcSignalType control_signal = 1;
  if (this->control_signal() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_control_signal());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IhcSignal::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:perception.object.IhcSignal)
  GOOGLE_DCHECK_NE(&from, this);
  const IhcSignal* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IhcSignal>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:perception.object.IhcSignal)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:perception.object.IhcSignal)
    MergeFrom(*source);
  }
}

void IhcSignal::MergeFrom(const IhcSignal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perception.object.IhcSignal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.control_signal() != 0) {
    _internal_set_control_signal(from._internal_control_signal());
  }
}

void IhcSignal::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:perception.object.IhcSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IhcSignal::CopyFrom(const IhcSignal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perception.object.IhcSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IhcSignal::IsInitialized() const {
  return true;
}

void IhcSignal::InternalSwap(IhcSignal* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(control_signal_, other->control_signal_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IhcSignal::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IhcState::InitAsDefaultInstance() {
}
class IhcState::_Internal {
 public:
};

IhcState::IhcState(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:perception.object.IhcState)
}
IhcState::IhcState(const IhcState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ihc_state_ = from.ihc_state_;
  // @@protoc_insertion_point(copy_constructor:perception.object.IhcState)
}

void IhcState::SharedCtor() {
  ihc_state_ = 0;
}

IhcState::~IhcState() {
  // @@protoc_insertion_point(destructor:perception.object.IhcState)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IhcState::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void IhcState::ArenaDtor(void* object) {
  IhcState* _this = reinterpret_cast< IhcState* >(object);
  (void)_this;
}
void IhcState::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IhcState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IhcState& IhcState::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IhcState_object_5fwarning_2eproto.base);
  return *internal_default_instance();
}


void IhcState::Clear() {
// @@protoc_insertion_point(message_clear_start:perception.object.IhcState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ihc_state_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IhcState::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 ihc_state = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ihc_state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IhcState::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perception.object.IhcState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ihc_state = 1;
  if (this->ihc_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_ihc_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perception.object.IhcState)
  return target;
}

size_t IhcState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perception.object.IhcState)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 ihc_state = 1;
  if (this->ihc_state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_ihc_state());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IhcState::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:perception.object.IhcState)
  GOOGLE_DCHECK_NE(&from, this);
  const IhcState* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IhcState>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:perception.object.IhcState)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:perception.object.IhcState)
    MergeFrom(*source);
  }
}

void IhcState::MergeFrom(const IhcState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perception.object.IhcState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ihc_state() != 0) {
    _internal_set_ihc_state(from._internal_ihc_state());
  }
}

void IhcState::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:perception.object.IhcState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IhcState::CopyFrom(const IhcState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perception.object.IhcState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IhcState::IsInitialized() const {
  return true;
}

void IhcState::InternalSwap(IhcState* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(ihc_state_, other->ihc_state_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IhcState::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BsdWarning::InitAsDefaultInstance() {
}
class BsdWarning::_Internal {
 public:
};

BsdWarning::BsdWarning(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:perception.object.BsdWarning)
}
BsdWarning::BsdWarning(const BsdWarning& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&left_warning_, &from.left_warning_,
    static_cast<size_t>(reinterpret_cast<char*>(&front_warning_) -
    reinterpret_cast<char*>(&left_warning_)) + sizeof(front_warning_));
  // @@protoc_insertion_point(copy_constructor:perception.object.BsdWarning)
}

void BsdWarning::SharedCtor() {
  ::memset(&left_warning_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&front_warning_) -
      reinterpret_cast<char*>(&left_warning_)) + sizeof(front_warning_));
}

BsdWarning::~BsdWarning() {
  // @@protoc_insertion_point(destructor:perception.object.BsdWarning)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BsdWarning::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BsdWarning::ArenaDtor(void* object) {
  BsdWarning* _this = reinterpret_cast< BsdWarning* >(object);
  (void)_this;
}
void BsdWarning::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BsdWarning::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BsdWarning& BsdWarning::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BsdWarning_object_5fwarning_2eproto.base);
  return *internal_default_instance();
}


void BsdWarning::Clear() {
// @@protoc_insertion_point(message_clear_start:perception.object.BsdWarning)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&left_warning_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&front_warning_) -
      reinterpret_cast<char*>(&left_warning_)) + sizeof(front_warning_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BsdWarning::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 left_warning = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          left_warning_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 right_warning = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          right_warning_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 front_warning = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          front_warning_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BsdWarning::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perception.object.BsdWarning)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 left_warning = 1;
  if (this->left_warning() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_left_warning(), target);
  }

  // int32 right_warning = 2;
  if (this->right_warning() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_right_warning(), target);
  }

  // int32 front_warning = 3;
  if (this->front_warning() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_front_warning(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perception.object.BsdWarning)
  return target;
}

size_t BsdWarning::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perception.object.BsdWarning)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 left_warning = 1;
  if (this->left_warning() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_left_warning());
  }

  // int32 right_warning = 2;
  if (this->right_warning() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_right_warning());
  }

  // int32 front_warning = 3;
  if (this->front_warning() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_front_warning());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BsdWarning::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:perception.object.BsdWarning)
  GOOGLE_DCHECK_NE(&from, this);
  const BsdWarning* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BsdWarning>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:perception.object.BsdWarning)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:perception.object.BsdWarning)
    MergeFrom(*source);
  }
}

void BsdWarning::MergeFrom(const BsdWarning& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perception.object.BsdWarning)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.left_warning() != 0) {
    _internal_set_left_warning(from._internal_left_warning());
  }
  if (from.right_warning() != 0) {
    _internal_set_right_warning(from._internal_right_warning());
  }
  if (from.front_warning() != 0) {
    _internal_set_front_warning(from._internal_front_warning());
  }
}

void BsdWarning::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:perception.object.BsdWarning)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BsdWarning::CopyFrom(const BsdWarning& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perception.object.BsdWarning)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BsdWarning::IsInitialized() const {
  return true;
}

void BsdWarning::InternalSwap(BsdWarning* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BsdWarning, front_warning_)
      + sizeof(BsdWarning::front_warning_)
      - PROTOBUF_FIELD_OFFSET(BsdWarning, left_warning_)>(
          reinterpret_cast<char*>(&left_warning_),
          reinterpret_cast<char*>(&other->left_warning_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BsdWarning::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BsdState::InitAsDefaultInstance() {
}
class BsdState::_Internal {
 public:
};

BsdState::BsdState(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:perception.object.BsdState)
}
BsdState::BsdState(const BsdState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  bsd_state_ = from.bsd_state_;
  // @@protoc_insertion_point(copy_constructor:perception.object.BsdState)
}

void BsdState::SharedCtor() {
  bsd_state_ = 0;
}

BsdState::~BsdState() {
  // @@protoc_insertion_point(destructor:perception.object.BsdState)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BsdState::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BsdState::ArenaDtor(void* object) {
  BsdState* _this = reinterpret_cast< BsdState* >(object);
  (void)_this;
}
void BsdState::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BsdState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BsdState& BsdState::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BsdState_object_5fwarning_2eproto.base);
  return *internal_default_instance();
}


void BsdState::Clear() {
// @@protoc_insertion_point(message_clear_start:perception.object.BsdState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bsd_state_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BsdState::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 bsd_state = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          bsd_state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BsdState::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perception.object.BsdState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 bsd_state = 1;
  if (this->bsd_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_bsd_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perception.object.BsdState)
  return target;
}

size_t BsdState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perception.object.BsdState)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 bsd_state = 1;
  if (this->bsd_state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_bsd_state());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BsdState::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:perception.object.BsdState)
  GOOGLE_DCHECK_NE(&from, this);
  const BsdState* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BsdState>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:perception.object.BsdState)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:perception.object.BsdState)
    MergeFrom(*source);
  }
}

void BsdState::MergeFrom(const BsdState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perception.object.BsdState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bsd_state() != 0) {
    _internal_set_bsd_state(from._internal_bsd_state());
  }
}

void BsdState::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:perception.object.BsdState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BsdState::CopyFrom(const BsdState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perception.object.BsdState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BsdState::IsInitialized() const {
  return true;
}

void BsdState::InternalSwap(BsdState* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(bsd_state_, other->bsd_state_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BsdState::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LcaWarning::InitAsDefaultInstance() {
}
class LcaWarning::_Internal {
 public:
};

LcaWarning::LcaWarning(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:perception.object.LcaWarning)
}
LcaWarning::LcaWarning(const LcaWarning& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&left_warning_, &from.left_warning_,
    static_cast<size_t>(reinterpret_cast<char*>(&right_warning_) -
    reinterpret_cast<char*>(&left_warning_)) + sizeof(right_warning_));
  // @@protoc_insertion_point(copy_constructor:perception.object.LcaWarning)
}

void LcaWarning::SharedCtor() {
  ::memset(&left_warning_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&right_warning_) -
      reinterpret_cast<char*>(&left_warning_)) + sizeof(right_warning_));
}

LcaWarning::~LcaWarning() {
  // @@protoc_insertion_point(destructor:perception.object.LcaWarning)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LcaWarning::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void LcaWarning::ArenaDtor(void* object) {
  LcaWarning* _this = reinterpret_cast< LcaWarning* >(object);
  (void)_this;
}
void LcaWarning::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LcaWarning::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LcaWarning& LcaWarning::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LcaWarning_object_5fwarning_2eproto.base);
  return *internal_default_instance();
}


void LcaWarning::Clear() {
// @@protoc_insertion_point(message_clear_start:perception.object.LcaWarning)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&left_warning_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&right_warning_) -
      reinterpret_cast<char*>(&left_warning_)) + sizeof(right_warning_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LcaWarning::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 left_warning = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          left_warning_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 right_warning = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          right_warning_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LcaWarning::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perception.object.LcaWarning)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 left_warning = 1;
  if (this->left_warning() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_left_warning(), target);
  }

  // int32 right_warning = 2;
  if (this->right_warning() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_right_warning(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perception.object.LcaWarning)
  return target;
}

size_t LcaWarning::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perception.object.LcaWarning)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 left_warning = 1;
  if (this->left_warning() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_left_warning());
  }

  // int32 right_warning = 2;
  if (this->right_warning() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_right_warning());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LcaWarning::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:perception.object.LcaWarning)
  GOOGLE_DCHECK_NE(&from, this);
  const LcaWarning* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LcaWarning>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:perception.object.LcaWarning)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:perception.object.LcaWarning)
    MergeFrom(*source);
  }
}

void LcaWarning::MergeFrom(const LcaWarning& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perception.object.LcaWarning)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.left_warning() != 0) {
    _internal_set_left_warning(from._internal_left_warning());
  }
  if (from.right_warning() != 0) {
    _internal_set_right_warning(from._internal_right_warning());
  }
}

void LcaWarning::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:perception.object.LcaWarning)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LcaWarning::CopyFrom(const LcaWarning& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perception.object.LcaWarning)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LcaWarning::IsInitialized() const {
  return true;
}

void LcaWarning::InternalSwap(LcaWarning* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LcaWarning, right_warning_)
      + sizeof(LcaWarning::right_warning_)
      - PROTOBUF_FIELD_OFFSET(LcaWarning, left_warning_)>(
          reinterpret_cast<char*>(&left_warning_),
          reinterpret_cast<char*>(&other->left_warning_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LcaWarning::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LcaState::InitAsDefaultInstance() {
}
class LcaState::_Internal {
 public:
};

LcaState::LcaState(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:perception.object.LcaState)
}
LcaState::LcaState(const LcaState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  lca_state_ = from.lca_state_;
  // @@protoc_insertion_point(copy_constructor:perception.object.LcaState)
}

void LcaState::SharedCtor() {
  lca_state_ = 0;
}

LcaState::~LcaState() {
  // @@protoc_insertion_point(destructor:perception.object.LcaState)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LcaState::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void LcaState::ArenaDtor(void* object) {
  LcaState* _this = reinterpret_cast< LcaState* >(object);
  (void)_this;
}
void LcaState::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LcaState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LcaState& LcaState::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LcaState_object_5fwarning_2eproto.base);
  return *internal_default_instance();
}


void LcaState::Clear() {
// @@protoc_insertion_point(message_clear_start:perception.object.LcaState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lca_state_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LcaState::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 lca_state = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          lca_state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LcaState::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perception.object.LcaState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 lca_state = 1;
  if (this->lca_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_lca_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perception.object.LcaState)
  return target;
}

size_t LcaState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perception.object.LcaState)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 lca_state = 1;
  if (this->lca_state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_lca_state());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LcaState::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:perception.object.LcaState)
  GOOGLE_DCHECK_NE(&from, this);
  const LcaState* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LcaState>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:perception.object.LcaState)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:perception.object.LcaState)
    MergeFrom(*source);
  }
}

void LcaState::MergeFrom(const LcaState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perception.object.LcaState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.lca_state() != 0) {
    _internal_set_lca_state(from._internal_lca_state());
  }
}

void LcaState::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:perception.object.LcaState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LcaState::CopyFrom(const LcaState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perception.object.LcaState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LcaState::IsInitialized() const {
  return true;
}

void LcaState::InternalSwap(LcaState* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(lca_state_, other->lca_state_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LcaState::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Warning::InitAsDefaultInstance() {
  ::perception::object::_Warning_default_instance_._instance.get_mutable()->vehicle_warning_ = const_cast< ::perception::object::VehicleWarning*>(
      ::perception::object::VehicleWarning::internal_default_instance());
  ::perception::object::_Warning_default_instance_._instance.get_mutable()->ped_warning_ = const_cast< ::perception::object::PedWarning*>(
      ::perception::object::PedWarning::internal_default_instance());
  ::perception::object::_Warning_default_instance_._instance.get_mutable()->tsr_warning_ = const_cast< ::perception::object::TsrWarning*>(
      ::perception::object::TsrWarning::internal_default_instance());
  ::perception::object::_Warning_default_instance_._instance.get_mutable()->ihc_signal_ = const_cast< ::perception::object::IhcSignal*>(
      ::perception::object::IhcSignal::internal_default_instance());
  ::perception::object::_Warning_default_instance_._instance.get_mutable()->bsd_warning_ = const_cast< ::perception::object::BsdWarning*>(
      ::perception::object::BsdWarning::internal_default_instance());
  ::perception::object::_Warning_default_instance_._instance.get_mutable()->lca_warning_ = const_cast< ::perception::object::LcaWarning*>(
      ::perception::object::LcaWarning::internal_default_instance());
  ::perception::object::_Warning_default_instance_._instance.get_mutable()->vehicle_state_ = const_cast< ::perception::object::VehicleState*>(
      ::perception::object::VehicleState::internal_default_instance());
  ::perception::object::_Warning_default_instance_._instance.get_mutable()->ped_state_ = const_cast< ::perception::object::PedState*>(
      ::perception::object::PedState::internal_default_instance());
  ::perception::object::_Warning_default_instance_._instance.get_mutable()->tsr_state_ = const_cast< ::perception::object::TsrState*>(
      ::perception::object::TsrState::internal_default_instance());
  ::perception::object::_Warning_default_instance_._instance.get_mutable()->ihc_state_ = const_cast< ::perception::object::IhcState*>(
      ::perception::object::IhcState::internal_default_instance());
  ::perception::object::_Warning_default_instance_._instance.get_mutable()->bsd_state_ = const_cast< ::perception::object::BsdState*>(
      ::perception::object::BsdState::internal_default_instance());
  ::perception::object::_Warning_default_instance_._instance.get_mutable()->lca_state_ = const_cast< ::perception::object::LcaState*>(
      ::perception::object::LcaState::internal_default_instance());
  ::perception::object::_Warning_default_instance_._instance.get_mutable()->bsd_warning_zone_ = const_cast< ::perception::common::Point2fList*>(
      ::perception::common::Point2fList::internal_default_instance());
}
class Warning::_Internal {
 public:
  static const ::perception::object::VehicleWarning& vehicle_warning(const Warning* msg);
  static const ::perception::object::PedWarning& ped_warning(const Warning* msg);
  static const ::perception::object::TsrWarning& tsr_warning(const Warning* msg);
  static const ::perception::object::IhcSignal& ihc_signal(const Warning* msg);
  static const ::perception::object::BsdWarning& bsd_warning(const Warning* msg);
  static const ::perception::object::LcaWarning& lca_warning(const Warning* msg);
  static const ::perception::object::VehicleState& vehicle_state(const Warning* msg);
  static const ::perception::object::PedState& ped_state(const Warning* msg);
  static const ::perception::object::TsrState& tsr_state(const Warning* msg);
  static const ::perception::object::IhcState& ihc_state(const Warning* msg);
  static const ::perception::object::BsdState& bsd_state(const Warning* msg);
  static const ::perception::object::LcaState& lca_state(const Warning* msg);
  static const ::perception::common::Point2fList& bsd_warning_zone(const Warning* msg);
};

const ::perception::object::VehicleWarning&
Warning::_Internal::vehicle_warning(const Warning* msg) {
  return *msg->vehicle_warning_;
}
const ::perception::object::PedWarning&
Warning::_Internal::ped_warning(const Warning* msg) {
  return *msg->ped_warning_;
}
const ::perception::object::TsrWarning&
Warning::_Internal::tsr_warning(const Warning* msg) {
  return *msg->tsr_warning_;
}
const ::perception::object::IhcSignal&
Warning::_Internal::ihc_signal(const Warning* msg) {
  return *msg->ihc_signal_;
}
const ::perception::object::BsdWarning&
Warning::_Internal::bsd_warning(const Warning* msg) {
  return *msg->bsd_warning_;
}
const ::perception::object::LcaWarning&
Warning::_Internal::lca_warning(const Warning* msg) {
  return *msg->lca_warning_;
}
const ::perception::object::VehicleState&
Warning::_Internal::vehicle_state(const Warning* msg) {
  return *msg->vehicle_state_;
}
const ::perception::object::PedState&
Warning::_Internal::ped_state(const Warning* msg) {
  return *msg->ped_state_;
}
const ::perception::object::TsrState&
Warning::_Internal::tsr_state(const Warning* msg) {
  return *msg->tsr_state_;
}
const ::perception::object::IhcState&
Warning::_Internal::ihc_state(const Warning* msg) {
  return *msg->ihc_state_;
}
const ::perception::object::BsdState&
Warning::_Internal::bsd_state(const Warning* msg) {
  return *msg->bsd_state_;
}
const ::perception::object::LcaState&
Warning::_Internal::lca_state(const Warning* msg) {
  return *msg->lca_state_;
}
const ::perception::common::Point2fList&
Warning::_Internal::bsd_warning_zone(const Warning* msg) {
  return *msg->bsd_warning_zone_;
}
void Warning::clear_bsd_warning_zone() {
  if (GetArena() == nullptr && bsd_warning_zone_ != nullptr) {
    delete bsd_warning_zone_;
  }
  bsd_warning_zone_ = nullptr;
}
Warning::Warning(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:perception.object.Warning)
}
Warning::Warning(const Warning& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_vehicle_warning()) {
    vehicle_warning_ = new ::perception::object::VehicleWarning(*from.vehicle_warning_);
  } else {
    vehicle_warning_ = nullptr;
  }
  if (from._internal_has_ped_warning()) {
    ped_warning_ = new ::perception::object::PedWarning(*from.ped_warning_);
  } else {
    ped_warning_ = nullptr;
  }
  if (from._internal_has_tsr_warning()) {
    tsr_warning_ = new ::perception::object::TsrWarning(*from.tsr_warning_);
  } else {
    tsr_warning_ = nullptr;
  }
  if (from._internal_has_ihc_signal()) {
    ihc_signal_ = new ::perception::object::IhcSignal(*from.ihc_signal_);
  } else {
    ihc_signal_ = nullptr;
  }
  if (from._internal_has_bsd_warning()) {
    bsd_warning_ = new ::perception::object::BsdWarning(*from.bsd_warning_);
  } else {
    bsd_warning_ = nullptr;
  }
  if (from._internal_has_lca_warning()) {
    lca_warning_ = new ::perception::object::LcaWarning(*from.lca_warning_);
  } else {
    lca_warning_ = nullptr;
  }
  if (from._internal_has_vehicle_state()) {
    vehicle_state_ = new ::perception::object::VehicleState(*from.vehicle_state_);
  } else {
    vehicle_state_ = nullptr;
  }
  if (from._internal_has_ped_state()) {
    ped_state_ = new ::perception::object::PedState(*from.ped_state_);
  } else {
    ped_state_ = nullptr;
  }
  if (from._internal_has_tsr_state()) {
    tsr_state_ = new ::perception::object::TsrState(*from.tsr_state_);
  } else {
    tsr_state_ = nullptr;
  }
  if (from._internal_has_ihc_state()) {
    ihc_state_ = new ::perception::object::IhcState(*from.ihc_state_);
  } else {
    ihc_state_ = nullptr;
  }
  if (from._internal_has_bsd_state()) {
    bsd_state_ = new ::perception::object::BsdState(*from.bsd_state_);
  } else {
    bsd_state_ = nullptr;
  }
  if (from._internal_has_lca_state()) {
    lca_state_ = new ::perception::object::LcaState(*from.lca_state_);
  } else {
    lca_state_ = nullptr;
  }
  if (from._internal_has_bsd_warning_zone()) {
    bsd_warning_zone_ = new ::perception::common::Point2fList(*from.bsd_warning_zone_);
  } else {
    bsd_warning_zone_ = nullptr;
  }
  object_valid_ = from.object_valid_;
  // @@protoc_insertion_point(copy_constructor:perception.object.Warning)
}

void Warning::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Warning_object_5fwarning_2eproto.base);
  ::memset(&vehicle_warning_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&object_valid_) -
      reinterpret_cast<char*>(&vehicle_warning_)) + sizeof(object_valid_));
}

Warning::~Warning() {
  // @@protoc_insertion_point(destructor:perception.object.Warning)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Warning::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete vehicle_warning_;
  if (this != internal_default_instance()) delete ped_warning_;
  if (this != internal_default_instance()) delete tsr_warning_;
  if (this != internal_default_instance()) delete ihc_signal_;
  if (this != internal_default_instance()) delete bsd_warning_;
  if (this != internal_default_instance()) delete lca_warning_;
  if (this != internal_default_instance()) delete vehicle_state_;
  if (this != internal_default_instance()) delete ped_state_;
  if (this != internal_default_instance()) delete tsr_state_;
  if (this != internal_default_instance()) delete ihc_state_;
  if (this != internal_default_instance()) delete bsd_state_;
  if (this != internal_default_instance()) delete lca_state_;
  if (this != internal_default_instance()) delete bsd_warning_zone_;
}

void Warning::ArenaDtor(void* object) {
  Warning* _this = reinterpret_cast< Warning* >(object);
  (void)_this;
}
void Warning::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Warning::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Warning& Warning::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Warning_object_5fwarning_2eproto.base);
  return *internal_default_instance();
}


void Warning::Clear() {
// @@protoc_insertion_point(message_clear_start:perception.object.Warning)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && vehicle_warning_ != nullptr) {
    delete vehicle_warning_;
  }
  vehicle_warning_ = nullptr;
  if (GetArena() == nullptr && ped_warning_ != nullptr) {
    delete ped_warning_;
  }
  ped_warning_ = nullptr;
  if (GetArena() == nullptr && tsr_warning_ != nullptr) {
    delete tsr_warning_;
  }
  tsr_warning_ = nullptr;
  if (GetArena() == nullptr && ihc_signal_ != nullptr) {
    delete ihc_signal_;
  }
  ihc_signal_ = nullptr;
  if (GetArena() == nullptr && bsd_warning_ != nullptr) {
    delete bsd_warning_;
  }
  bsd_warning_ = nullptr;
  if (GetArena() == nullptr && lca_warning_ != nullptr) {
    delete lca_warning_;
  }
  lca_warning_ = nullptr;
  if (GetArena() == nullptr && vehicle_state_ != nullptr) {
    delete vehicle_state_;
  }
  vehicle_state_ = nullptr;
  if (GetArena() == nullptr && ped_state_ != nullptr) {
    delete ped_state_;
  }
  ped_state_ = nullptr;
  if (GetArena() == nullptr && tsr_state_ != nullptr) {
    delete tsr_state_;
  }
  tsr_state_ = nullptr;
  if (GetArena() == nullptr && ihc_state_ != nullptr) {
    delete ihc_state_;
  }
  ihc_state_ = nullptr;
  if (GetArena() == nullptr && bsd_state_ != nullptr) {
    delete bsd_state_;
  }
  bsd_state_ = nullptr;
  if (GetArena() == nullptr && lca_state_ != nullptr) {
    delete lca_state_;
  }
  lca_state_ = nullptr;
  if (GetArena() == nullptr && bsd_warning_zone_ != nullptr) {
    delete bsd_warning_zone_;
  }
  bsd_warning_zone_ = nullptr;
  object_valid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Warning::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .perception.object.VehicleWarning vehicle_warning = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_vehicle_warning(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .perception.object.PedWarning ped_warning = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_ped_warning(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .perception.object.TsrWarning tsr_warning = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_tsr_warning(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .perception.object.IhcSignal ihc_signal = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_ihc_signal(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .perception.object.BsdWarning bsd_warning = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_bsd_warning(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .perception.object.LcaWarning lca_warning = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_lca_warning(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .perception.object.VehicleState vehicle_state = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_vehicle_state(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .perception.object.PedState ped_state = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_ped_state(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .perception.object.TsrState tsr_state = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_tsr_state(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .perception.object.IhcState ihc_state = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_ihc_state(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .perception.object.BsdState bsd_state = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_bsd_state(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .perception.object.LcaState lca_state = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_lca_state(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 object_valid = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          object_valid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .perception.common.Point2fList bsd_warning_zone = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_bsd_warning_zone(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Warning::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perception.object.Warning)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .perception.object.VehicleWarning vehicle_warning = 1;
  if (this->has_vehicle_warning()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::vehicle_warning(this), target, stream);
  }

  // .perception.object.PedWarning ped_warning = 2;
  if (this->has_ped_warning()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::ped_warning(this), target, stream);
  }

  // .perception.object.TsrWarning tsr_warning = 3;
  if (this->has_tsr_warning()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::tsr_warning(this), target, stream);
  }

  // .perception.object.IhcSignal ihc_signal = 4;
  if (this->has_ihc_signal()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::ihc_signal(this), target, stream);
  }

  // .perception.object.BsdWarning bsd_warning = 5;
  if (this->has_bsd_warning()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::bsd_warning(this), target, stream);
  }

  // .perception.object.LcaWarning lca_warning = 6;
  if (this->has_lca_warning()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::lca_warning(this), target, stream);
  }

  // .perception.object.VehicleState vehicle_state = 10;
  if (this->has_vehicle_state()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::vehicle_state(this), target, stream);
  }

  // .perception.object.PedState ped_state = 11;
  if (this->has_ped_state()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::ped_state(this), target, stream);
  }

  // .perception.object.TsrState tsr_state = 12;
  if (this->has_tsr_state()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        12, _Internal::tsr_state(this), target, stream);
  }

  // .perception.object.IhcState ihc_state = 13;
  if (this->has_ihc_state()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        13, _Internal::ihc_state(this), target, stream);
  }

  // .perception.object.BsdState bsd_state = 14;
  if (this->has_bsd_state()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        14, _Internal::bsd_state(this), target, stream);
  }

  // .perception.object.LcaState lca_state = 15;
  if (this->has_lca_state()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        15, _Internal::lca_state(this), target, stream);
  }

  // int32 object_valid = 20;
  if (this->object_valid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(20, this->_internal_object_valid(), target);
  }

  // .perception.common.Point2fList bsd_warning_zone = 21;
  if (this->has_bsd_warning_zone()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        21, _Internal::bsd_warning_zone(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perception.object.Warning)
  return target;
}

size_t Warning::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perception.object.Warning)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .perception.object.VehicleWarning vehicle_warning = 1;
  if (this->has_vehicle_warning()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *vehicle_warning_);
  }

  // .perception.object.PedWarning ped_warning = 2;
  if (this->has_ped_warning()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *ped_warning_);
  }

  // .perception.object.TsrWarning tsr_warning = 3;
  if (this->has_tsr_warning()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *tsr_warning_);
  }

  // .perception.object.IhcSignal ihc_signal = 4;
  if (this->has_ihc_signal()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *ihc_signal_);
  }

  // .perception.object.BsdWarning bsd_warning = 5;
  if (this->has_bsd_warning()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *bsd_warning_);
  }

  // .perception.object.LcaWarning lca_warning = 6;
  if (this->has_lca_warning()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *lca_warning_);
  }

  // .perception.object.VehicleState vehicle_state = 10;
  if (this->has_vehicle_state()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *vehicle_state_);
  }

  // .perception.object.PedState ped_state = 11;
  if (this->has_ped_state()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *ped_state_);
  }

  // .perception.object.TsrState tsr_state = 12;
  if (this->has_tsr_state()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *tsr_state_);
  }

  // .perception.object.IhcState ihc_state = 13;
  if (this->has_ihc_state()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *ihc_state_);
  }

  // .perception.object.BsdState bsd_state = 14;
  if (this->has_bsd_state()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *bsd_state_);
  }

  // .perception.object.LcaState lca_state = 15;
  if (this->has_lca_state()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *lca_state_);
  }

  // .perception.common.Point2fList bsd_warning_zone = 21;
  if (this->has_bsd_warning_zone()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *bsd_warning_zone_);
  }

  // int32 object_valid = 20;
  if (this->object_valid() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_object_valid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Warning::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:perception.object.Warning)
  GOOGLE_DCHECK_NE(&from, this);
  const Warning* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Warning>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:perception.object.Warning)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:perception.object.Warning)
    MergeFrom(*source);
  }
}

void Warning::MergeFrom(const Warning& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perception.object.Warning)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_vehicle_warning()) {
    _internal_mutable_vehicle_warning()->::perception::object::VehicleWarning::MergeFrom(from._internal_vehicle_warning());
  }
  if (from.has_ped_warning()) {
    _internal_mutable_ped_warning()->::perception::object::PedWarning::MergeFrom(from._internal_ped_warning());
  }
  if (from.has_tsr_warning()) {
    _internal_mutable_tsr_warning()->::perception::object::TsrWarning::MergeFrom(from._internal_tsr_warning());
  }
  if (from.has_ihc_signal()) {
    _internal_mutable_ihc_signal()->::perception::object::IhcSignal::MergeFrom(from._internal_ihc_signal());
  }
  if (from.has_bsd_warning()) {
    _internal_mutable_bsd_warning()->::perception::object::BsdWarning::MergeFrom(from._internal_bsd_warning());
  }
  if (from.has_lca_warning()) {
    _internal_mutable_lca_warning()->::perception::object::LcaWarning::MergeFrom(from._internal_lca_warning());
  }
  if (from.has_vehicle_state()) {
    _internal_mutable_vehicle_state()->::perception::object::VehicleState::MergeFrom(from._internal_vehicle_state());
  }
  if (from.has_ped_state()) {
    _internal_mutable_ped_state()->::perception::object::PedState::MergeFrom(from._internal_ped_state());
  }
  if (from.has_tsr_state()) {
    _internal_mutable_tsr_state()->::perception::object::TsrState::MergeFrom(from._internal_tsr_state());
  }
  if (from.has_ihc_state()) {
    _internal_mutable_ihc_state()->::perception::object::IhcState::MergeFrom(from._internal_ihc_state());
  }
  if (from.has_bsd_state()) {
    _internal_mutable_bsd_state()->::perception::object::BsdState::MergeFrom(from._internal_bsd_state());
  }
  if (from.has_lca_state()) {
    _internal_mutable_lca_state()->::perception::object::LcaState::MergeFrom(from._internal_lca_state());
  }
  if (from.has_bsd_warning_zone()) {
    _internal_mutable_bsd_warning_zone()->::perception::common::Point2fList::MergeFrom(from._internal_bsd_warning_zone());
  }
  if (from.object_valid() != 0) {
    _internal_set_object_valid(from._internal_object_valid());
  }
}

void Warning::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:perception.object.Warning)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Warning::CopyFrom(const Warning& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perception.object.Warning)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Warning::IsInitialized() const {
  return true;
}

void Warning::InternalSwap(Warning* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Warning, object_valid_)
      + sizeof(Warning::object_valid_)
      - PROTOBUF_FIELD_OFFSET(Warning, vehicle_warning_)>(
          reinterpret_cast<char*>(&vehicle_warning_),
          reinterpret_cast<char*>(&other->vehicle_warning_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Warning::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace object
}  // namespace perception
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::perception::object::VehicleWarning* Arena::CreateMaybeMessage< ::perception::object::VehicleWarning >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perception::object::VehicleWarning >(arena);
}
template<> PROTOBUF_NOINLINE ::perception::object::VehicleState* Arena::CreateMaybeMessage< ::perception::object::VehicleState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perception::object::VehicleState >(arena);
}
template<> PROTOBUF_NOINLINE ::perception::object::PedWarning* Arena::CreateMaybeMessage< ::perception::object::PedWarning >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perception::object::PedWarning >(arena);
}
template<> PROTOBUF_NOINLINE ::perception::object::PedState* Arena::CreateMaybeMessage< ::perception::object::PedState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perception::object::PedState >(arena);
}
template<> PROTOBUF_NOINLINE ::perception::object::TsrWarning_TrafficLightSignal* Arena::CreateMaybeMessage< ::perception::object::TsrWarning_TrafficLightSignal >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perception::object::TsrWarning_TrafficLightSignal >(arena);
}
template<> PROTOBUF_NOINLINE ::perception::object::TsrWarning* Arena::CreateMaybeMessage< ::perception::object::TsrWarning >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perception::object::TsrWarning >(arena);
}
template<> PROTOBUF_NOINLINE ::perception::object::TsrState* Arena::CreateMaybeMessage< ::perception::object::TsrState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perception::object::TsrState >(arena);
}
template<> PROTOBUF_NOINLINE ::perception::object::IhcSignal* Arena::CreateMaybeMessage< ::perception::object::IhcSignal >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perception::object::IhcSignal >(arena);
}
template<> PROTOBUF_NOINLINE ::perception::object::IhcState* Arena::CreateMaybeMessage< ::perception::object::IhcState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perception::object::IhcState >(arena);
}
template<> PROTOBUF_NOINLINE ::perception::object::BsdWarning* Arena::CreateMaybeMessage< ::perception::object::BsdWarning >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perception::object::BsdWarning >(arena);
}
template<> PROTOBUF_NOINLINE ::perception::object::BsdState* Arena::CreateMaybeMessage< ::perception::object::BsdState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perception::object::BsdState >(arena);
}
template<> PROTOBUF_NOINLINE ::perception::object::LcaWarning* Arena::CreateMaybeMessage< ::perception::object::LcaWarning >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perception::object::LcaWarning >(arena);
}
template<> PROTOBUF_NOINLINE ::perception::object::LcaState* Arena::CreateMaybeMessage< ::perception::object::LcaState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perception::object::LcaState >(arena);
}
template<> PROTOBUF_NOINLINE ::perception::object::Warning* Arena::CreateMaybeMessage< ::perception::object::Warning >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perception::object::Warning >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
