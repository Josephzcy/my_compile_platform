// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ihc.proto

#include "ihc.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_ihc_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Ihc_IhcDetectObject_ihc_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ihc_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Ihc_IhcSignal_ihc_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_geometry_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Rect2f_geometry_2eproto;
namespace perception {
class Ihc_IhcDetectObjectDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Ihc_IhcDetectObject> _instance;
} _Ihc_IhcDetectObject_default_instance_;
class Ihc_IhcSignalDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Ihc_IhcSignal> _instance;
} _Ihc_IhcSignal_default_instance_;
class IhcDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Ihc> _instance;
} _Ihc_default_instance_;
}  // namespace perception
static void InitDefaultsscc_info_Ihc_ihc_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perception::_Ihc_default_instance_;
    new (ptr) ::perception::Ihc();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perception::Ihc::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Ihc_ihc_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Ihc_ihc_2eproto}, {
      &scc_info_Ihc_IhcDetectObject_ihc_2eproto.base,
      &scc_info_Ihc_IhcSignal_ihc_2eproto.base,}};

static void InitDefaultsscc_info_Ihc_IhcDetectObject_ihc_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perception::_Ihc_IhcDetectObject_default_instance_;
    new (ptr) ::perception::Ihc_IhcDetectObject();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perception::Ihc_IhcDetectObject::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Ihc_IhcDetectObject_ihc_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Ihc_IhcDetectObject_ihc_2eproto}, {
      &scc_info_Rect2f_geometry_2eproto.base,}};

static void InitDefaultsscc_info_Ihc_IhcSignal_ihc_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perception::_Ihc_IhcSignal_default_instance_;
    new (ptr) ::perception::Ihc_IhcSignal();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perception::Ihc_IhcSignal::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Ihc_IhcSignal_ihc_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Ihc_IhcSignal_ihc_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_ihc_2eproto[3];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_ihc_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ihc_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_ihc_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::perception::Ihc_IhcDetectObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::perception::Ihc_IhcDetectObject, det_rect_),
  PROTOBUF_FIELD_OFFSET(::perception::Ihc_IhcDetectObject, confidence_),
  PROTOBUF_FIELD_OFFSET(::perception::Ihc_IhcDetectObject, hit_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::perception::Ihc_IhcSignal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::perception::Ihc_IhcSignal, control_signal_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::perception::Ihc, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::perception::Ihc, frame_id_),
  PROTOBUF_FIELD_OFFSET(::perception::Ihc, timestamp_),
  PROTOBUF_FIELD_OFFSET(::perception::Ihc, light_list_),
  PROTOBUF_FIELD_OFFSET(::perception::Ihc, ihc_signal_),
  PROTOBUF_FIELD_OFFSET(::perception::Ihc, data_source_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::perception::Ihc_IhcDetectObject)},
  { 8, -1, sizeof(::perception::Ihc_IhcSignal)},
  { 14, -1, sizeof(::perception::Ihc)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::perception::_Ihc_IhcDetectObject_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::perception::_Ihc_IhcSignal_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::perception::_Ihc_default_instance_),
};

const char descriptor_table_protodef_ihc_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\tihc.proto\022\nperception\032\016geometry.proto\032"
  "\021data_source.proto\"\271\003\n\003Ihc\022\020\n\010frame_id\030\001"
  " \001(\004\022\021\n\ttimestamp\030\002 \001(\004\0223\n\nlight_list\030\003 "
  "\003(\0132\037.perception.Ihc.IhcDetectObject\022-\n\n"
  "ihc_signal\030\004 \001(\0132\031.perception.Ihc.IhcSig"
  "nal\022(\n\013data_source\030\005 \001(\0162\023.minieye.DataS"
  "ource\032d\n\017IhcDetectObject\022+\n\010det_rect\030\001 \001"
  "(\0132\031.perception.common.Rect2f\022\022\n\nconfide"
  "nce\030\002 \001(\002\022\020\n\010hit_type\030\003 \001(\005\032B\n\tIhcSignal"
  "\0225\n\016control_signal\030\001 \001(\0162\035.perception.Ih"
  "c.IhcSignalType\"U\n\rIhcSignalType\022\021\n\rkLig"
  "htInvalid\020\000\022\r\n\tkLightOff\020\001\022\017\n\013kHighBeamO"
  "n\020\002\022\021\n\rkDippedBeamOn\020\003b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_ihc_2eproto_deps[2] = {
  &::descriptor_table_data_5fsource_2eproto,
  &::descriptor_table_geometry_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_ihc_2eproto_sccs[3] = {
  &scc_info_Ihc_ihc_2eproto.base,
  &scc_info_Ihc_IhcDetectObject_ihc_2eproto.base,
  &scc_info_Ihc_IhcSignal_ihc_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ihc_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ihc_2eproto = {
  false, false, descriptor_table_protodef_ihc_2eproto, "ihc.proto", 510,
  &descriptor_table_ihc_2eproto_once, descriptor_table_ihc_2eproto_sccs, descriptor_table_ihc_2eproto_deps, 3, 2,
  schemas, file_default_instances, TableStruct_ihc_2eproto::offsets,
  file_level_metadata_ihc_2eproto, 3, file_level_enum_descriptors_ihc_2eproto, file_level_service_descriptors_ihc_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ihc_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_ihc_2eproto)), true);
namespace perception {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Ihc_IhcSignalType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ihc_2eproto);
  return file_level_enum_descriptors_ihc_2eproto[0];
}
bool Ihc_IhcSignalType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Ihc_IhcSignalType Ihc::kLightInvalid;
constexpr Ihc_IhcSignalType Ihc::kLightOff;
constexpr Ihc_IhcSignalType Ihc::kHighBeamOn;
constexpr Ihc_IhcSignalType Ihc::kDippedBeamOn;
constexpr Ihc_IhcSignalType Ihc::IhcSignalType_MIN;
constexpr Ihc_IhcSignalType Ihc::IhcSignalType_MAX;
constexpr int Ihc::IhcSignalType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void Ihc_IhcDetectObject::InitAsDefaultInstance() {
  ::perception::_Ihc_IhcDetectObject_default_instance_._instance.get_mutable()->det_rect_ = const_cast< ::perception::common::Rect2f*>(
      ::perception::common::Rect2f::internal_default_instance());
}
class Ihc_IhcDetectObject::_Internal {
 public:
  static const ::perception::common::Rect2f& det_rect(const Ihc_IhcDetectObject* msg);
};

const ::perception::common::Rect2f&
Ihc_IhcDetectObject::_Internal::det_rect(const Ihc_IhcDetectObject* msg) {
  return *msg->det_rect_;
}
void Ihc_IhcDetectObject::clear_det_rect() {
  if (GetArena() == nullptr && det_rect_ != nullptr) {
    delete det_rect_;
  }
  det_rect_ = nullptr;
}
Ihc_IhcDetectObject::Ihc_IhcDetectObject(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:perception.Ihc.IhcDetectObject)
}
Ihc_IhcDetectObject::Ihc_IhcDetectObject(const Ihc_IhcDetectObject& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_det_rect()) {
    det_rect_ = new ::perception::common::Rect2f(*from.det_rect_);
  } else {
    det_rect_ = nullptr;
  }
  ::memcpy(&confidence_, &from.confidence_,
    static_cast<size_t>(reinterpret_cast<char*>(&hit_type_) -
    reinterpret_cast<char*>(&confidence_)) + sizeof(hit_type_));
  // @@protoc_insertion_point(copy_constructor:perception.Ihc.IhcDetectObject)
}

void Ihc_IhcDetectObject::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Ihc_IhcDetectObject_ihc_2eproto.base);
  ::memset(&det_rect_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hit_type_) -
      reinterpret_cast<char*>(&det_rect_)) + sizeof(hit_type_));
}

Ihc_IhcDetectObject::~Ihc_IhcDetectObject() {
  // @@protoc_insertion_point(destructor:perception.Ihc.IhcDetectObject)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Ihc_IhcDetectObject::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete det_rect_;
}

void Ihc_IhcDetectObject::ArenaDtor(void* object) {
  Ihc_IhcDetectObject* _this = reinterpret_cast< Ihc_IhcDetectObject* >(object);
  (void)_this;
}
void Ihc_IhcDetectObject::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Ihc_IhcDetectObject::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Ihc_IhcDetectObject& Ihc_IhcDetectObject::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Ihc_IhcDetectObject_ihc_2eproto.base);
  return *internal_default_instance();
}


void Ihc_IhcDetectObject::Clear() {
// @@protoc_insertion_point(message_clear_start:perception.Ihc.IhcDetectObject)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && det_rect_ != nullptr) {
    delete det_rect_;
  }
  det_rect_ = nullptr;
  ::memset(&confidence_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hit_type_) -
      reinterpret_cast<char*>(&confidence_)) + sizeof(hit_type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Ihc_IhcDetectObject::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .perception.common.Rect2f det_rect = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_det_rect(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float confidence = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          confidence_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // int32 hit_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          hit_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Ihc_IhcDetectObject::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perception.Ihc.IhcDetectObject)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .perception.common.Rect2f det_rect = 1;
  if (this->has_det_rect()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::det_rect(this), target, stream);
  }

  // float confidence = 2;
  if (!(this->confidence() <= 0 && this->confidence() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_confidence(), target);
  }

  // int32 hit_type = 3;
  if (this->hit_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_hit_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perception.Ihc.IhcDetectObject)
  return target;
}

size_t Ihc_IhcDetectObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perception.Ihc.IhcDetectObject)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .perception.common.Rect2f det_rect = 1;
  if (this->has_det_rect()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *det_rect_);
  }

  // float confidence = 2;
  if (!(this->confidence() <= 0 && this->confidence() >= 0)) {
    total_size += 1 + 4;
  }

  // int32 hit_type = 3;
  if (this->hit_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_hit_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ihc_IhcDetectObject::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:perception.Ihc.IhcDetectObject)
  GOOGLE_DCHECK_NE(&from, this);
  const Ihc_IhcDetectObject* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Ihc_IhcDetectObject>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:perception.Ihc.IhcDetectObject)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:perception.Ihc.IhcDetectObject)
    MergeFrom(*source);
  }
}

void Ihc_IhcDetectObject::MergeFrom(const Ihc_IhcDetectObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perception.Ihc.IhcDetectObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_det_rect()) {
    _internal_mutable_det_rect()->::perception::common::Rect2f::MergeFrom(from._internal_det_rect());
  }
  if (!(from.confidence() <= 0 && from.confidence() >= 0)) {
    _internal_set_confidence(from._internal_confidence());
  }
  if (from.hit_type() != 0) {
    _internal_set_hit_type(from._internal_hit_type());
  }
}

void Ihc_IhcDetectObject::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:perception.Ihc.IhcDetectObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ihc_IhcDetectObject::CopyFrom(const Ihc_IhcDetectObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perception.Ihc.IhcDetectObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ihc_IhcDetectObject::IsInitialized() const {
  return true;
}

void Ihc_IhcDetectObject::InternalSwap(Ihc_IhcDetectObject* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Ihc_IhcDetectObject, hit_type_)
      + sizeof(Ihc_IhcDetectObject::hit_type_)
      - PROTOBUF_FIELD_OFFSET(Ihc_IhcDetectObject, det_rect_)>(
          reinterpret_cast<char*>(&det_rect_),
          reinterpret_cast<char*>(&other->det_rect_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Ihc_IhcDetectObject::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Ihc_IhcSignal::InitAsDefaultInstance() {
}
class Ihc_IhcSignal::_Internal {
 public:
};

Ihc_IhcSignal::Ihc_IhcSignal(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:perception.Ihc.IhcSignal)
}
Ihc_IhcSignal::Ihc_IhcSignal(const Ihc_IhcSignal& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  control_signal_ = from.control_signal_;
  // @@protoc_insertion_point(copy_constructor:perception.Ihc.IhcSignal)
}

void Ihc_IhcSignal::SharedCtor() {
  control_signal_ = 0;
}

Ihc_IhcSignal::~Ihc_IhcSignal() {
  // @@protoc_insertion_point(destructor:perception.Ihc.IhcSignal)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Ihc_IhcSignal::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Ihc_IhcSignal::ArenaDtor(void* object) {
  Ihc_IhcSignal* _this = reinterpret_cast< Ihc_IhcSignal* >(object);
  (void)_this;
}
void Ihc_IhcSignal::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Ihc_IhcSignal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Ihc_IhcSignal& Ihc_IhcSignal::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Ihc_IhcSignal_ihc_2eproto.base);
  return *internal_default_instance();
}


void Ihc_IhcSignal::Clear() {
// @@protoc_insertion_point(message_clear_start:perception.Ihc.IhcSignal)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  control_signal_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Ihc_IhcSignal::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .perception.Ihc.IhcSignalType control_signal = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_control_signal(static_cast<::perception::Ihc_IhcSignalType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Ihc_IhcSignal::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perception.Ihc.IhcSignal)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .perception.Ihc.IhcSignalType control_signal = 1;
  if (this->control_signal() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_control_signal(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perception.Ihc.IhcSignal)
  return target;
}

size_t Ihc_IhcSignal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perception.Ihc.IhcSignal)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .perception.Ihc.IhcSignalType control_signal = 1;
  if (this->control_signal() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_control_signal());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ihc_IhcSignal::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:perception.Ihc.IhcSignal)
  GOOGLE_DCHECK_NE(&from, this);
  const Ihc_IhcSignal* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Ihc_IhcSignal>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:perception.Ihc.IhcSignal)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:perception.Ihc.IhcSignal)
    MergeFrom(*source);
  }
}

void Ihc_IhcSignal::MergeFrom(const Ihc_IhcSignal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perception.Ihc.IhcSignal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.control_signal() != 0) {
    _internal_set_control_signal(from._internal_control_signal());
  }
}

void Ihc_IhcSignal::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:perception.Ihc.IhcSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ihc_IhcSignal::CopyFrom(const Ihc_IhcSignal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perception.Ihc.IhcSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ihc_IhcSignal::IsInitialized() const {
  return true;
}

void Ihc_IhcSignal::InternalSwap(Ihc_IhcSignal* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(control_signal_, other->control_signal_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Ihc_IhcSignal::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Ihc::InitAsDefaultInstance() {
  ::perception::_Ihc_default_instance_._instance.get_mutable()->ihc_signal_ = const_cast< ::perception::Ihc_IhcSignal*>(
      ::perception::Ihc_IhcSignal::internal_default_instance());
}
class Ihc::_Internal {
 public:
  static const ::perception::Ihc_IhcSignal& ihc_signal(const Ihc* msg);
};

const ::perception::Ihc_IhcSignal&
Ihc::_Internal::ihc_signal(const Ihc* msg) {
  return *msg->ihc_signal_;
}
Ihc::Ihc(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  light_list_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:perception.Ihc)
}
Ihc::Ihc(const Ihc& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      light_list_(from.light_list_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_ihc_signal()) {
    ihc_signal_ = new ::perception::Ihc_IhcSignal(*from.ihc_signal_);
  } else {
    ihc_signal_ = nullptr;
  }
  ::memcpy(&frame_id_, &from.frame_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&data_source_) -
    reinterpret_cast<char*>(&frame_id_)) + sizeof(data_source_));
  // @@protoc_insertion_point(copy_constructor:perception.Ihc)
}

void Ihc::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Ihc_ihc_2eproto.base);
  ::memset(&ihc_signal_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_source_) -
      reinterpret_cast<char*>(&ihc_signal_)) + sizeof(data_source_));
}

Ihc::~Ihc() {
  // @@protoc_insertion_point(destructor:perception.Ihc)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Ihc::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete ihc_signal_;
}

void Ihc::ArenaDtor(void* object) {
  Ihc* _this = reinterpret_cast< Ihc* >(object);
  (void)_this;
}
void Ihc::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Ihc::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Ihc& Ihc::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Ihc_ihc_2eproto.base);
  return *internal_default_instance();
}


void Ihc::Clear() {
// @@protoc_insertion_point(message_clear_start:perception.Ihc)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  light_list_.Clear();
  if (GetArena() == nullptr && ihc_signal_ != nullptr) {
    delete ihc_signal_;
  }
  ihc_signal_ = nullptr;
  ::memset(&frame_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_source_) -
      reinterpret_cast<char*>(&frame_id_)) + sizeof(data_source_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Ihc::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 frame_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          frame_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 timestamp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .perception.Ihc.IhcDetectObject light_list = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_light_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // .perception.Ihc.IhcSignal ihc_signal = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_ihc_signal(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .minieye.DataSource data_source = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_data_source(static_cast<::minieye::DataSource>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Ihc::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perception.Ihc)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 frame_id = 1;
  if (this->frame_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_frame_id(), target);
  }

  // uint64 timestamp = 2;
  if (this->timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_timestamp(), target);
  }

  // repeated .perception.Ihc.IhcDetectObject light_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_light_list_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_light_list(i), target, stream);
  }

  // .perception.Ihc.IhcSignal ihc_signal = 4;
  if (this->has_ihc_signal()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::ihc_signal(this), target, stream);
  }

  // .minieye.DataSource data_source = 5;
  if (this->data_source() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_data_source(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perception.Ihc)
  return target;
}

size_t Ihc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perception.Ihc)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .perception.Ihc.IhcDetectObject light_list = 3;
  total_size += 1UL * this->_internal_light_list_size();
  for (const auto& msg : this->light_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .perception.Ihc.IhcSignal ihc_signal = 4;
  if (this->has_ihc_signal()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *ihc_signal_);
  }

  // uint64 frame_id = 1;
  if (this->frame_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_frame_id());
  }

  // uint64 timestamp = 2;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_timestamp());
  }

  // .minieye.DataSource data_source = 5;
  if (this->data_source() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_data_source());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ihc::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:perception.Ihc)
  GOOGLE_DCHECK_NE(&from, this);
  const Ihc* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Ihc>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:perception.Ihc)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:perception.Ihc)
    MergeFrom(*source);
  }
}

void Ihc::MergeFrom(const Ihc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perception.Ihc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  light_list_.MergeFrom(from.light_list_);
  if (from.has_ihc_signal()) {
    _internal_mutable_ihc_signal()->::perception::Ihc_IhcSignal::MergeFrom(from._internal_ihc_signal());
  }
  if (from.frame_id() != 0) {
    _internal_set_frame_id(from._internal_frame_id());
  }
  if (from.timestamp() != 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
  if (from.data_source() != 0) {
    _internal_set_data_source(from._internal_data_source());
  }
}

void Ihc::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:perception.Ihc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ihc::CopyFrom(const Ihc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perception.Ihc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ihc::IsInitialized() const {
  return true;
}

void Ihc::InternalSwap(Ihc* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  light_list_.InternalSwap(&other->light_list_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Ihc, data_source_)
      + sizeof(Ihc::data_source_)
      - PROTOBUF_FIELD_OFFSET(Ihc, ihc_signal_)>(
          reinterpret_cast<char*>(&ihc_signal_),
          reinterpret_cast<char*>(&other->ihc_signal_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Ihc::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace perception
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::perception::Ihc_IhcDetectObject* Arena::CreateMaybeMessage< ::perception::Ihc_IhcDetectObject >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perception::Ihc_IhcDetectObject >(arena);
}
template<> PROTOBUF_NOINLINE ::perception::Ihc_IhcSignal* Arena::CreateMaybeMessage< ::perception::Ihc_IhcSignal >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perception::Ihc_IhcSignal >(arena);
}
template<> PROTOBUF_NOINLINE ::perception::Ihc* Arena::CreateMaybeMessage< ::perception::Ihc >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perception::Ihc >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
