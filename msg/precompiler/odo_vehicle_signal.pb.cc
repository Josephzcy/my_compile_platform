// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: odo_vehicle_signal.proto

#include "odo_vehicle_signal.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_odo_5fvehicle_5fsignal_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ApaVehicleSignal_SignalsEntry_DoNotUse_odo_5fvehicle_5fsignal_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_odo_5fvehicle_5fsignal_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_OdoVehicleSignal_SignalsEntry_DoNotUse_odo_5fvehicle_5fsignal_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_odo_5fvehicle_5fsignal_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SignalTimestamp_odo_5fvehicle_5fsignal_2eproto;
namespace minieye {
class SignalTimestampDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SignalTimestamp> _instance;
} _SignalTimestamp_default_instance_;
class OdoVehicleSignal_SignalsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OdoVehicleSignal_SignalsEntry_DoNotUse> _instance;
} _OdoVehicleSignal_SignalsEntry_DoNotUse_default_instance_;
class OdoVehicleSignalDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OdoVehicleSignal> _instance;
} _OdoVehicleSignal_default_instance_;
class ApaVehicleSignal_SignalsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ApaVehicleSignal_SignalsEntry_DoNotUse> _instance;
} _ApaVehicleSignal_SignalsEntry_DoNotUse_default_instance_;
class ApaVehicleSignalDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ApaVehicleSignal> _instance;
} _ApaVehicleSignal_default_instance_;
}  // namespace minieye
static void InitDefaultsscc_info_ApaVehicleSignal_odo_5fvehicle_5fsignal_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::minieye::_ApaVehicleSignal_default_instance_;
    new (ptr) ::minieye::ApaVehicleSignal();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::minieye::ApaVehicleSignal::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ApaVehicleSignal_odo_5fvehicle_5fsignal_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ApaVehicleSignal_odo_5fvehicle_5fsignal_2eproto}, {
      &scc_info_ApaVehicleSignal_SignalsEntry_DoNotUse_odo_5fvehicle_5fsignal_2eproto.base,}};

static void InitDefaultsscc_info_ApaVehicleSignal_SignalsEntry_DoNotUse_odo_5fvehicle_5fsignal_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::minieye::_ApaVehicleSignal_SignalsEntry_DoNotUse_default_instance_;
    new (ptr) ::minieye::ApaVehicleSignal_SignalsEntry_DoNotUse();
  }
  ::minieye::ApaVehicleSignal_SignalsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ApaVehicleSignal_SignalsEntry_DoNotUse_odo_5fvehicle_5fsignal_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ApaVehicleSignal_SignalsEntry_DoNotUse_odo_5fvehicle_5fsignal_2eproto}, {}};

static void InitDefaultsscc_info_OdoVehicleSignal_odo_5fvehicle_5fsignal_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::minieye::_OdoVehicleSignal_default_instance_;
    new (ptr) ::minieye::OdoVehicleSignal();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::minieye::OdoVehicleSignal::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_OdoVehicleSignal_odo_5fvehicle_5fsignal_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_OdoVehicleSignal_odo_5fvehicle_5fsignal_2eproto}, {
      &scc_info_OdoVehicleSignal_SignalsEntry_DoNotUse_odo_5fvehicle_5fsignal_2eproto.base,}};

static void InitDefaultsscc_info_OdoVehicleSignal_SignalsEntry_DoNotUse_odo_5fvehicle_5fsignal_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::minieye::_OdoVehicleSignal_SignalsEntry_DoNotUse_default_instance_;
    new (ptr) ::minieye::OdoVehicleSignal_SignalsEntry_DoNotUse();
  }
  ::minieye::OdoVehicleSignal_SignalsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_OdoVehicleSignal_SignalsEntry_DoNotUse_odo_5fvehicle_5fsignal_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_OdoVehicleSignal_SignalsEntry_DoNotUse_odo_5fvehicle_5fsignal_2eproto}, {
      &scc_info_SignalTimestamp_odo_5fvehicle_5fsignal_2eproto.base,}};

static void InitDefaultsscc_info_SignalTimestamp_odo_5fvehicle_5fsignal_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::minieye::_SignalTimestamp_default_instance_;
    new (ptr) ::minieye::SignalTimestamp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::minieye::SignalTimestamp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SignalTimestamp_odo_5fvehicle_5fsignal_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SignalTimestamp_odo_5fvehicle_5fsignal_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_odo_5fvehicle_5fsignal_2eproto[5];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_odo_5fvehicle_5fsignal_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_odo_5fvehicle_5fsignal_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_odo_5fvehicle_5fsignal_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::minieye::SignalTimestamp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::minieye::SignalTimestamp, value_),
  PROTOBUF_FIELD_OFFSET(::minieye::SignalTimestamp, tick_),
  PROTOBUF_FIELD_OFFSET(::minieye::OdoVehicleSignal_SignalsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::minieye::OdoVehicleSignal_SignalsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::minieye::OdoVehicleSignal_SignalsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::minieye::OdoVehicleSignal_SignalsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::minieye::OdoVehicleSignal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::minieye::OdoVehicleSignal, signals_),
  PROTOBUF_FIELD_OFFSET(::minieye::OdoVehicleSignal, timestamp_),
  PROTOBUF_FIELD_OFFSET(::minieye::OdoVehicleSignal, tick_),
  PROTOBUF_FIELD_OFFSET(::minieye::ApaVehicleSignal_SignalsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::minieye::ApaVehicleSignal_SignalsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::minieye::ApaVehicleSignal_SignalsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::minieye::ApaVehicleSignal_SignalsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::minieye::ApaVehicleSignal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::minieye::ApaVehicleSignal, signals_),
  PROTOBUF_FIELD_OFFSET(::minieye::ApaVehicleSignal, timestamp_),
  PROTOBUF_FIELD_OFFSET(::minieye::ApaVehicleSignal, tick_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::minieye::SignalTimestamp)},
  { 7, 14, sizeof(::minieye::OdoVehicleSignal_SignalsEntry_DoNotUse)},
  { 16, -1, sizeof(::minieye::OdoVehicleSignal)},
  { 24, 31, sizeof(::minieye::ApaVehicleSignal_SignalsEntry_DoNotUse)},
  { 33, -1, sizeof(::minieye::ApaVehicleSignal)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minieye::_SignalTimestamp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minieye::_OdoVehicleSignal_SignalsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minieye::_OdoVehicleSignal_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minieye::_ApaVehicleSignal_SignalsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minieye::_ApaVehicleSignal_default_instance_),
};

const char descriptor_table_protodef_odo_5fvehicle_5fsignal_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\030odo_vehicle_signal.proto\022\007minieye\".\n\017S"
  "ignalTimestamp\022\r\n\005value\030\001 \001(\002\022\014\n\004tick\030\002 "
  "\001(\004\"\376\002\n\020OdoVehicleSignal\0227\n\007signals\030\001 \003("
  "\0132&.minieye.OdoVehicleSignal.SignalsEntr"
  "y\022\021\n\ttimestamp\030\002 \001(\004\022\014\n\004tick\030\003 \001(\004\032H\n\014Si"
  "gnalsEntry\022\013\n\003key\030\001 \001(\005\022\'\n\005value\030\002 \001(\0132\030"
  ".minieye.SignalTimestamp:\0028\001\"\305\001\n\nSignalT"
  "ype\022\r\n\tkCanSpeed\020\000\022\027\n\023kSteeringWheelAngl"
  "e\020\001\022\014\n\010kYawRate\020\002\022\r\n\tkGearMode\020\003\022\026\n\022kLon"
  "giAcceleration\020\004\022\030\n\024kRLWheelPulseCounter"
  "\020\005\022\030\n\024kRRWheelPulseCounter\020\006\022\022\n\016kRLWheel"
  "Rotate\020\007\022\022\n\016kRRWheelRotate\020\010\"\333\003\n\020ApaVehi"
  "cleSignal\0227\n\007signals\030\001 \003(\0132&.minieye.Apa"
  "VehicleSignal.SignalsEntry\022\021\n\ttimestamp\030"
  "\002 \001(\004\022\014\n\004tick\030\003 \001(\004\032.\n\014SignalsEntry\022\013\n\003k"
  "ey\030\001 \001(\005\022\r\n\005value\030\002 \001(\002:\0028\001\"\274\002\n\nSignalTy"
  "pe\022\023\n\017kFLTirePressure\020\000\022\023\n\017kFRTirePressu"
  "re\020\001\022\023\n\017kRLTirePressure\020\002\022\023\n\017kRRTirePres"
  "sure\020\003\022\017\n\013kMotorSpeed\020\004\022\020\n\014kLngCtrlMode\020"
  "\005\022\020\n\014kLatCtrlMode\020\006\022\016\n\nkLngCtrlSt\020\007\022\016\n\nk"
  "LatCtrlSt\020\010\022\022\n\016kLngQuitReport\020\t\022\022\n\016kLatQ"
  "uitReport\020\n\022\023\n\017kVehicleReadySt\020\013\022\020\n\014kEpb"
  "SystemSt\020\014\022\022\n\016kChargingGunSt\020\r\022\016\n\nkDrive"
  "Mode\020\016\022\022\n\016kFoldMirrorsSt\020\017b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_odo_5fvehicle_5fsignal_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_odo_5fvehicle_5fsignal_2eproto_sccs[5] = {
  &scc_info_ApaVehicleSignal_odo_5fvehicle_5fsignal_2eproto.base,
  &scc_info_ApaVehicleSignal_SignalsEntry_DoNotUse_odo_5fvehicle_5fsignal_2eproto.base,
  &scc_info_OdoVehicleSignal_odo_5fvehicle_5fsignal_2eproto.base,
  &scc_info_OdoVehicleSignal_SignalsEntry_DoNotUse_odo_5fvehicle_5fsignal_2eproto.base,
  &scc_info_SignalTimestamp_odo_5fvehicle_5fsignal_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_odo_5fvehicle_5fsignal_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_odo_5fvehicle_5fsignal_2eproto = {
  false, false, descriptor_table_protodef_odo_5fvehicle_5fsignal_2eproto, "odo_vehicle_signal.proto", 954,
  &descriptor_table_odo_5fvehicle_5fsignal_2eproto_once, descriptor_table_odo_5fvehicle_5fsignal_2eproto_sccs, descriptor_table_odo_5fvehicle_5fsignal_2eproto_deps, 5, 0,
  schemas, file_default_instances, TableStruct_odo_5fvehicle_5fsignal_2eproto::offsets,
  file_level_metadata_odo_5fvehicle_5fsignal_2eproto, 5, file_level_enum_descriptors_odo_5fvehicle_5fsignal_2eproto, file_level_service_descriptors_odo_5fvehicle_5fsignal_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_odo_5fvehicle_5fsignal_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_odo_5fvehicle_5fsignal_2eproto)), true);
namespace minieye {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* OdoVehicleSignal_SignalType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_odo_5fvehicle_5fsignal_2eproto);
  return file_level_enum_descriptors_odo_5fvehicle_5fsignal_2eproto[0];
}
bool OdoVehicleSignal_SignalType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr OdoVehicleSignal_SignalType OdoVehicleSignal::kCanSpeed;
constexpr OdoVehicleSignal_SignalType OdoVehicleSignal::kSteeringWheelAngle;
constexpr OdoVehicleSignal_SignalType OdoVehicleSignal::kYawRate;
constexpr OdoVehicleSignal_SignalType OdoVehicleSignal::kGearMode;
constexpr OdoVehicleSignal_SignalType OdoVehicleSignal::kLongiAcceleration;
constexpr OdoVehicleSignal_SignalType OdoVehicleSignal::kRLWheelPulseCounter;
constexpr OdoVehicleSignal_SignalType OdoVehicleSignal::kRRWheelPulseCounter;
constexpr OdoVehicleSignal_SignalType OdoVehicleSignal::kRLWheelRotate;
constexpr OdoVehicleSignal_SignalType OdoVehicleSignal::kRRWheelRotate;
constexpr OdoVehicleSignal_SignalType OdoVehicleSignal::SignalType_MIN;
constexpr OdoVehicleSignal_SignalType OdoVehicleSignal::SignalType_MAX;
constexpr int OdoVehicleSignal::SignalType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ApaVehicleSignal_SignalType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_odo_5fvehicle_5fsignal_2eproto);
  return file_level_enum_descriptors_odo_5fvehicle_5fsignal_2eproto[1];
}
bool ApaVehicleSignal_SignalType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr ApaVehicleSignal_SignalType ApaVehicleSignal::kFLTirePressure;
constexpr ApaVehicleSignal_SignalType ApaVehicleSignal::kFRTirePressure;
constexpr ApaVehicleSignal_SignalType ApaVehicleSignal::kRLTirePressure;
constexpr ApaVehicleSignal_SignalType ApaVehicleSignal::kRRTirePressure;
constexpr ApaVehicleSignal_SignalType ApaVehicleSignal::kMotorSpeed;
constexpr ApaVehicleSignal_SignalType ApaVehicleSignal::kLngCtrlMode;
constexpr ApaVehicleSignal_SignalType ApaVehicleSignal::kLatCtrlMode;
constexpr ApaVehicleSignal_SignalType ApaVehicleSignal::kLngCtrlSt;
constexpr ApaVehicleSignal_SignalType ApaVehicleSignal::kLatCtrlSt;
constexpr ApaVehicleSignal_SignalType ApaVehicleSignal::kLngQuitReport;
constexpr ApaVehicleSignal_SignalType ApaVehicleSignal::kLatQuitReport;
constexpr ApaVehicleSignal_SignalType ApaVehicleSignal::kVehicleReadySt;
constexpr ApaVehicleSignal_SignalType ApaVehicleSignal::kEpbSystemSt;
constexpr ApaVehicleSignal_SignalType ApaVehicleSignal::kChargingGunSt;
constexpr ApaVehicleSignal_SignalType ApaVehicleSignal::kDriveMode;
constexpr ApaVehicleSignal_SignalType ApaVehicleSignal::kFoldMirrorsSt;
constexpr ApaVehicleSignal_SignalType ApaVehicleSignal::SignalType_MIN;
constexpr ApaVehicleSignal_SignalType ApaVehicleSignal::SignalType_MAX;
constexpr int ApaVehicleSignal::SignalType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void SignalTimestamp::InitAsDefaultInstance() {
}
class SignalTimestamp::_Internal {
 public:
};

SignalTimestamp::SignalTimestamp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:minieye.SignalTimestamp)
}
SignalTimestamp::SignalTimestamp(const SignalTimestamp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&tick_, &from.tick_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&tick_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:minieye.SignalTimestamp)
}

void SignalTimestamp::SharedCtor() {
  ::memset(&tick_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&tick_)) + sizeof(value_));
}

SignalTimestamp::~SignalTimestamp() {
  // @@protoc_insertion_point(destructor:minieye.SignalTimestamp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SignalTimestamp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SignalTimestamp::ArenaDtor(void* object) {
  SignalTimestamp* _this = reinterpret_cast< SignalTimestamp* >(object);
  (void)_this;
}
void SignalTimestamp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SignalTimestamp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SignalTimestamp& SignalTimestamp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SignalTimestamp_odo_5fvehicle_5fsignal_2eproto.base);
  return *internal_default_instance();
}


void SignalTimestamp::Clear() {
// @@protoc_insertion_point(message_clear_start:minieye.SignalTimestamp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&tick_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&tick_)) + sizeof(value_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SignalTimestamp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // uint64 tick = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          tick_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SignalTimestamp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:minieye.SignalTimestamp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float value = 1;
  if (!(this->value() <= 0 && this->value() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_value(), target);
  }

  // uint64 tick = 2;
  if (this->tick() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_tick(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:minieye.SignalTimestamp)
  return target;
}

size_t SignalTimestamp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:minieye.SignalTimestamp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 tick = 2;
  if (this->tick() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_tick());
  }

  // float value = 1;
  if (!(this->value() <= 0 && this->value() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignalTimestamp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:minieye.SignalTimestamp)
  GOOGLE_DCHECK_NE(&from, this);
  const SignalTimestamp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SignalTimestamp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:minieye.SignalTimestamp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:minieye.SignalTimestamp)
    MergeFrom(*source);
  }
}

void SignalTimestamp::MergeFrom(const SignalTimestamp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:minieye.SignalTimestamp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tick() != 0) {
    _internal_set_tick(from._internal_tick());
  }
  if (!(from.value() <= 0 && from.value() >= 0)) {
    _internal_set_value(from._internal_value());
  }
}

void SignalTimestamp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:minieye.SignalTimestamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignalTimestamp::CopyFrom(const SignalTimestamp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:minieye.SignalTimestamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignalTimestamp::IsInitialized() const {
  return true;
}

void SignalTimestamp::InternalSwap(SignalTimestamp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SignalTimestamp, value_)
      + sizeof(SignalTimestamp::value_)
      - PROTOBUF_FIELD_OFFSET(SignalTimestamp, tick_)>(
          reinterpret_cast<char*>(&tick_),
          reinterpret_cast<char*>(&other->tick_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SignalTimestamp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

OdoVehicleSignal_SignalsEntry_DoNotUse::OdoVehicleSignal_SignalsEntry_DoNotUse() {}
OdoVehicleSignal_SignalsEntry_DoNotUse::OdoVehicleSignal_SignalsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void OdoVehicleSignal_SignalsEntry_DoNotUse::MergeFrom(const OdoVehicleSignal_SignalsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata OdoVehicleSignal_SignalsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void OdoVehicleSignal_SignalsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void OdoVehicleSignal::InitAsDefaultInstance() {
}
class OdoVehicleSignal::_Internal {
 public:
};

OdoVehicleSignal::OdoVehicleSignal(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  signals_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:minieye.OdoVehicleSignal)
}
OdoVehicleSignal::OdoVehicleSignal(const OdoVehicleSignal& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  signals_.MergeFrom(from.signals_);
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&tick_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(tick_));
  // @@protoc_insertion_point(copy_constructor:minieye.OdoVehicleSignal)
}

void OdoVehicleSignal::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OdoVehicleSignal_odo_5fvehicle_5fsignal_2eproto.base);
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tick_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(tick_));
}

OdoVehicleSignal::~OdoVehicleSignal() {
  // @@protoc_insertion_point(destructor:minieye.OdoVehicleSignal)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OdoVehicleSignal::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void OdoVehicleSignal::ArenaDtor(void* object) {
  OdoVehicleSignal* _this = reinterpret_cast< OdoVehicleSignal* >(object);
  (void)_this;
}
void OdoVehicleSignal::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OdoVehicleSignal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OdoVehicleSignal& OdoVehicleSignal::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OdoVehicleSignal_odo_5fvehicle_5fsignal_2eproto.base);
  return *internal_default_instance();
}


void OdoVehicleSignal::Clear() {
// @@protoc_insertion_point(message_clear_start:minieye.OdoVehicleSignal)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  signals_.Clear();
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tick_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(tick_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OdoVehicleSignal::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<int32, .minieye.SignalTimestamp> signals = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&signals_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // uint64 timestamp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 tick = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          tick_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OdoVehicleSignal::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:minieye.OdoVehicleSignal)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, .minieye.SignalTimestamp> signals = 1;
  if (!this->_internal_signals().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::minieye::SignalTimestamp >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_signals().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_signals().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::minieye::SignalTimestamp >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::minieye::SignalTimestamp >::const_iterator
          it = this->_internal_signals().begin();
          it != this->_internal_signals().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = OdoVehicleSignal_SignalsEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::minieye::SignalTimestamp >::const_iterator
          it = this->_internal_signals().begin();
          it != this->_internal_signals().end(); ++it) {
        target = OdoVehicleSignal_SignalsEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
      }
    }
  }

  // uint64 timestamp = 2;
  if (this->timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_timestamp(), target);
  }

  // uint64 tick = 3;
  if (this->tick() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_tick(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:minieye.OdoVehicleSignal)
  return target;
}

size_t OdoVehicleSignal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:minieye.OdoVehicleSignal)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int32, .minieye.SignalTimestamp> signals = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_signals_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::minieye::SignalTimestamp >::const_iterator
      it = this->_internal_signals().begin();
      it != this->_internal_signals().end(); ++it) {
    total_size += OdoVehicleSignal_SignalsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // uint64 timestamp = 2;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_timestamp());
  }

  // uint64 tick = 3;
  if (this->tick() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_tick());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OdoVehicleSignal::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:minieye.OdoVehicleSignal)
  GOOGLE_DCHECK_NE(&from, this);
  const OdoVehicleSignal* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OdoVehicleSignal>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:minieye.OdoVehicleSignal)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:minieye.OdoVehicleSignal)
    MergeFrom(*source);
  }
}

void OdoVehicleSignal::MergeFrom(const OdoVehicleSignal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:minieye.OdoVehicleSignal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  signals_.MergeFrom(from.signals_);
  if (from.timestamp() != 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
  if (from.tick() != 0) {
    _internal_set_tick(from._internal_tick());
  }
}

void OdoVehicleSignal::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:minieye.OdoVehicleSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OdoVehicleSignal::CopyFrom(const OdoVehicleSignal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:minieye.OdoVehicleSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OdoVehicleSignal::IsInitialized() const {
  return true;
}

void OdoVehicleSignal::InternalSwap(OdoVehicleSignal* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  signals_.Swap(&other->signals_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OdoVehicleSignal, tick_)
      + sizeof(OdoVehicleSignal::tick_)
      - PROTOBUF_FIELD_OFFSET(OdoVehicleSignal, timestamp_)>(
          reinterpret_cast<char*>(&timestamp_),
          reinterpret_cast<char*>(&other->timestamp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OdoVehicleSignal::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

ApaVehicleSignal_SignalsEntry_DoNotUse::ApaVehicleSignal_SignalsEntry_DoNotUse() {}
ApaVehicleSignal_SignalsEntry_DoNotUse::ApaVehicleSignal_SignalsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ApaVehicleSignal_SignalsEntry_DoNotUse::MergeFrom(const ApaVehicleSignal_SignalsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ApaVehicleSignal_SignalsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void ApaVehicleSignal_SignalsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void ApaVehicleSignal::InitAsDefaultInstance() {
}
class ApaVehicleSignal::_Internal {
 public:
};

ApaVehicleSignal::ApaVehicleSignal(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  signals_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:minieye.ApaVehicleSignal)
}
ApaVehicleSignal::ApaVehicleSignal(const ApaVehicleSignal& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  signals_.MergeFrom(from.signals_);
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&tick_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(tick_));
  // @@protoc_insertion_point(copy_constructor:minieye.ApaVehicleSignal)
}

void ApaVehicleSignal::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ApaVehicleSignal_odo_5fvehicle_5fsignal_2eproto.base);
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tick_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(tick_));
}

ApaVehicleSignal::~ApaVehicleSignal() {
  // @@protoc_insertion_point(destructor:minieye.ApaVehicleSignal)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ApaVehicleSignal::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ApaVehicleSignal::ArenaDtor(void* object) {
  ApaVehicleSignal* _this = reinterpret_cast< ApaVehicleSignal* >(object);
  (void)_this;
}
void ApaVehicleSignal::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ApaVehicleSignal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ApaVehicleSignal& ApaVehicleSignal::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ApaVehicleSignal_odo_5fvehicle_5fsignal_2eproto.base);
  return *internal_default_instance();
}


void ApaVehicleSignal::Clear() {
// @@protoc_insertion_point(message_clear_start:minieye.ApaVehicleSignal)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  signals_.Clear();
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tick_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(tick_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ApaVehicleSignal::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<int32, float> signals = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&signals_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // uint64 timestamp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 tick = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          tick_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ApaVehicleSignal::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:minieye.ApaVehicleSignal)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, float> signals = 1;
  if (!this->_internal_signals().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, float >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_signals().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_signals().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, float >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, float >::const_iterator
          it = this->_internal_signals().begin();
          it != this->_internal_signals().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ApaVehicleSignal_SignalsEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, float >::const_iterator
          it = this->_internal_signals().begin();
          it != this->_internal_signals().end(); ++it) {
        target = ApaVehicleSignal_SignalsEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
      }
    }
  }

  // uint64 timestamp = 2;
  if (this->timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_timestamp(), target);
  }

  // uint64 tick = 3;
  if (this->tick() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_tick(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:minieye.ApaVehicleSignal)
  return target;
}

size_t ApaVehicleSignal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:minieye.ApaVehicleSignal)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int32, float> signals = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_signals_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, float >::const_iterator
      it = this->_internal_signals().begin();
      it != this->_internal_signals().end(); ++it) {
    total_size += ApaVehicleSignal_SignalsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // uint64 timestamp = 2;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_timestamp());
  }

  // uint64 tick = 3;
  if (this->tick() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_tick());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ApaVehicleSignal::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:minieye.ApaVehicleSignal)
  GOOGLE_DCHECK_NE(&from, this);
  const ApaVehicleSignal* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ApaVehicleSignal>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:minieye.ApaVehicleSignal)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:minieye.ApaVehicleSignal)
    MergeFrom(*source);
  }
}

void ApaVehicleSignal::MergeFrom(const ApaVehicleSignal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:minieye.ApaVehicleSignal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  signals_.MergeFrom(from.signals_);
  if (from.timestamp() != 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
  if (from.tick() != 0) {
    _internal_set_tick(from._internal_tick());
  }
}

void ApaVehicleSignal::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:minieye.ApaVehicleSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApaVehicleSignal::CopyFrom(const ApaVehicleSignal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:minieye.ApaVehicleSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApaVehicleSignal::IsInitialized() const {
  return true;
}

void ApaVehicleSignal::InternalSwap(ApaVehicleSignal* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  signals_.Swap(&other->signals_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ApaVehicleSignal, tick_)
      + sizeof(ApaVehicleSignal::tick_)
      - PROTOBUF_FIELD_OFFSET(ApaVehicleSignal, timestamp_)>(
          reinterpret_cast<char*>(&timestamp_),
          reinterpret_cast<char*>(&other->timestamp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ApaVehicleSignal::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace minieye
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::minieye::SignalTimestamp* Arena::CreateMaybeMessage< ::minieye::SignalTimestamp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minieye::SignalTimestamp >(arena);
}
template<> PROTOBUF_NOINLINE ::minieye::OdoVehicleSignal_SignalsEntry_DoNotUse* Arena::CreateMaybeMessage< ::minieye::OdoVehicleSignal_SignalsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minieye::OdoVehicleSignal_SignalsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::minieye::OdoVehicleSignal* Arena::CreateMaybeMessage< ::minieye::OdoVehicleSignal >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minieye::OdoVehicleSignal >(arena);
}
template<> PROTOBUF_NOINLINE ::minieye::ApaVehicleSignal_SignalsEntry_DoNotUse* Arena::CreateMaybeMessage< ::minieye::ApaVehicleSignal_SignalsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minieye::ApaVehicleSignal_SignalsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::minieye::ApaVehicleSignal* Arena::CreateMaybeMessage< ::minieye::ApaVehicleSignal >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minieye::ApaVehicleSignal >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
