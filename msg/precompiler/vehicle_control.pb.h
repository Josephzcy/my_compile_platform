// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vehicle_control.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_vehicle_5fcontrol_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_vehicle_5fcontrol_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_vehicle_5fcontrol_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_vehicle_5fcontrol_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_vehicle_5fcontrol_2eproto;
namespace minieye {
class VehicleControl;
class VehicleControlDefaultTypeInternal;
extern VehicleControlDefaultTypeInternal _VehicleControl_default_instance_;
}  // namespace minieye
PROTOBUF_NAMESPACE_OPEN
template<> ::minieye::VehicleControl* Arena::CreateMaybeMessage<::minieye::VehicleControl>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace minieye {

// ===================================================================

class VehicleControl PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minieye.VehicleControl) */ {
 public:
  inline VehicleControl() : VehicleControl(nullptr) {};
  virtual ~VehicleControl();

  VehicleControl(const VehicleControl& from);
  VehicleControl(VehicleControl&& from) noexcept
    : VehicleControl() {
    *this = ::std::move(from);
  }

  inline VehicleControl& operator=(const VehicleControl& from) {
    CopyFrom(from);
    return *this;
  }
  inline VehicleControl& operator=(VehicleControl&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const VehicleControl& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleControl* internal_default_instance() {
    return reinterpret_cast<const VehicleControl*>(
               &_VehicleControl_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(VehicleControl& a, VehicleControl& b) {
    a.Swap(&b);
  }
  inline void Swap(VehicleControl* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VehicleControl* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline VehicleControl* New() const final {
    return CreateMaybeMessage<VehicleControl>(nullptr);
  }

  VehicleControl* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VehicleControl>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const VehicleControl& from);
  void MergeFrom(const VehicleControl& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VehicleControl* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minieye.VehicleControl";
  }
  protected:
  explicit VehicleControl(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_vehicle_5fcontrol_2eproto);
    return ::descriptor_table_vehicle_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTimestampFieldNumber = 1,
    kTickFieldNumber = 2,
    kControlStateFieldNumber = 3,
    kWheelCmdFieldNumber = 4,
    kSpeedCmdFieldNumber = 5,
    kGearModeFieldNumber = 6,
    kDistCmdFieldNumber = 7,
    kIsReachPathendFieldNumber = 8,
    kLBiasErrFieldNumber = 9,
    kYawBiasErrFieldNumber = 10,
    kFailReasonFieldNumber = 11,
    kBrakeCmdFieldNumber = 12,
  };
  // uint64 timestamp = 1;
  void clear_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 timestamp() const;
  void set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_timestamp() const;
  void _internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 tick = 2;
  void clear_tick();
  ::PROTOBUF_NAMESPACE_ID::uint64 tick() const;
  void set_tick(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_tick() const;
  void _internal_set_tick(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 control_state = 3;
  void clear_control_state();
  ::PROTOBUF_NAMESPACE_ID::uint32 control_state() const;
  void set_control_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_control_state() const;
  void _internal_set_control_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // float wheel_cmd = 4;
  void clear_wheel_cmd();
  float wheel_cmd() const;
  void set_wheel_cmd(float value);
  private:
  float _internal_wheel_cmd() const;
  void _internal_set_wheel_cmd(float value);
  public:

  // float speed_cmd = 5;
  void clear_speed_cmd();
  float speed_cmd() const;
  void set_speed_cmd(float value);
  private:
  float _internal_speed_cmd() const;
  void _internal_set_speed_cmd(float value);
  public:

  // uint32 gear_mode = 6;
  void clear_gear_mode();
  ::PROTOBUF_NAMESPACE_ID::uint32 gear_mode() const;
  void set_gear_mode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_gear_mode() const;
  void _internal_set_gear_mode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // float dist_cmd = 7;
  void clear_dist_cmd();
  float dist_cmd() const;
  void set_dist_cmd(float value);
  private:
  float _internal_dist_cmd() const;
  void _internal_set_dist_cmd(float value);
  public:

  // bool is_reach_pathend = 8;
  void clear_is_reach_pathend();
  bool is_reach_pathend() const;
  void set_is_reach_pathend(bool value);
  private:
  bool _internal_is_reach_pathend() const;
  void _internal_set_is_reach_pathend(bool value);
  public:

  // float l_bias_err = 9;
  void clear_l_bias_err();
  float l_bias_err() const;
  void set_l_bias_err(float value);
  private:
  float _internal_l_bias_err() const;
  void _internal_set_l_bias_err(float value);
  public:

  // float yaw_bias_err = 10;
  void clear_yaw_bias_err();
  float yaw_bias_err() const;
  void set_yaw_bias_err(float value);
  private:
  float _internal_yaw_bias_err() const;
  void _internal_set_yaw_bias_err(float value);
  public:

  // uint32 fail_reason = 11;
  void clear_fail_reason();
  ::PROTOBUF_NAMESPACE_ID::uint32 fail_reason() const;
  void set_fail_reason(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_fail_reason() const;
  void _internal_set_fail_reason(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 brake_cmd = 12;
  void clear_brake_cmd();
  ::PROTOBUF_NAMESPACE_ID::uint32 brake_cmd() const;
  void set_brake_cmd(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_brake_cmd() const;
  void _internal_set_brake_cmd(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:minieye.VehicleControl)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 timestamp_;
  ::PROTOBUF_NAMESPACE_ID::uint64 tick_;
  ::PROTOBUF_NAMESPACE_ID::uint32 control_state_;
  float wheel_cmd_;
  float speed_cmd_;
  ::PROTOBUF_NAMESPACE_ID::uint32 gear_mode_;
  float dist_cmd_;
  bool is_reach_pathend_;
  float l_bias_err_;
  float yaw_bias_err_;
  ::PROTOBUF_NAMESPACE_ID::uint32 fail_reason_;
  ::PROTOBUF_NAMESPACE_ID::uint32 brake_cmd_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_vehicle_5fcontrol_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// VehicleControl

// uint64 timestamp = 1;
inline void VehicleControl::clear_timestamp() {
  timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 VehicleControl::_internal_timestamp() const {
  return timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 VehicleControl::timestamp() const {
  // @@protoc_insertion_point(field_get:minieye.VehicleControl.timestamp)
  return _internal_timestamp();
}
inline void VehicleControl::_internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  timestamp_ = value;
}
inline void VehicleControl::set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:minieye.VehicleControl.timestamp)
}

// uint64 tick = 2;
inline void VehicleControl::clear_tick() {
  tick_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 VehicleControl::_internal_tick() const {
  return tick_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 VehicleControl::tick() const {
  // @@protoc_insertion_point(field_get:minieye.VehicleControl.tick)
  return _internal_tick();
}
inline void VehicleControl::_internal_set_tick(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  tick_ = value;
}
inline void VehicleControl::set_tick(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_tick(value);
  // @@protoc_insertion_point(field_set:minieye.VehicleControl.tick)
}

// uint32 control_state = 3;
inline void VehicleControl::clear_control_state() {
  control_state_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleControl::_internal_control_state() const {
  return control_state_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleControl::control_state() const {
  // @@protoc_insertion_point(field_get:minieye.VehicleControl.control_state)
  return _internal_control_state();
}
inline void VehicleControl::_internal_set_control_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  control_state_ = value;
}
inline void VehicleControl::set_control_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_control_state(value);
  // @@protoc_insertion_point(field_set:minieye.VehicleControl.control_state)
}

// float wheel_cmd = 4;
inline void VehicleControl::clear_wheel_cmd() {
  wheel_cmd_ = 0;
}
inline float VehicleControl::_internal_wheel_cmd() const {
  return wheel_cmd_;
}
inline float VehicleControl::wheel_cmd() const {
  // @@protoc_insertion_point(field_get:minieye.VehicleControl.wheel_cmd)
  return _internal_wheel_cmd();
}
inline void VehicleControl::_internal_set_wheel_cmd(float value) {
  
  wheel_cmd_ = value;
}
inline void VehicleControl::set_wheel_cmd(float value) {
  _internal_set_wheel_cmd(value);
  // @@protoc_insertion_point(field_set:minieye.VehicleControl.wheel_cmd)
}

// float speed_cmd = 5;
inline void VehicleControl::clear_speed_cmd() {
  speed_cmd_ = 0;
}
inline float VehicleControl::_internal_speed_cmd() const {
  return speed_cmd_;
}
inline float VehicleControl::speed_cmd() const {
  // @@protoc_insertion_point(field_get:minieye.VehicleControl.speed_cmd)
  return _internal_speed_cmd();
}
inline void VehicleControl::_internal_set_speed_cmd(float value) {
  
  speed_cmd_ = value;
}
inline void VehicleControl::set_speed_cmd(float value) {
  _internal_set_speed_cmd(value);
  // @@protoc_insertion_point(field_set:minieye.VehicleControl.speed_cmd)
}

// uint32 gear_mode = 6;
inline void VehicleControl::clear_gear_mode() {
  gear_mode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleControl::_internal_gear_mode() const {
  return gear_mode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleControl::gear_mode() const {
  // @@protoc_insertion_point(field_get:minieye.VehicleControl.gear_mode)
  return _internal_gear_mode();
}
inline void VehicleControl::_internal_set_gear_mode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  gear_mode_ = value;
}
inline void VehicleControl::set_gear_mode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_gear_mode(value);
  // @@protoc_insertion_point(field_set:minieye.VehicleControl.gear_mode)
}

// float dist_cmd = 7;
inline void VehicleControl::clear_dist_cmd() {
  dist_cmd_ = 0;
}
inline float VehicleControl::_internal_dist_cmd() const {
  return dist_cmd_;
}
inline float VehicleControl::dist_cmd() const {
  // @@protoc_insertion_point(field_get:minieye.VehicleControl.dist_cmd)
  return _internal_dist_cmd();
}
inline void VehicleControl::_internal_set_dist_cmd(float value) {
  
  dist_cmd_ = value;
}
inline void VehicleControl::set_dist_cmd(float value) {
  _internal_set_dist_cmd(value);
  // @@protoc_insertion_point(field_set:minieye.VehicleControl.dist_cmd)
}

// bool is_reach_pathend = 8;
inline void VehicleControl::clear_is_reach_pathend() {
  is_reach_pathend_ = false;
}
inline bool VehicleControl::_internal_is_reach_pathend() const {
  return is_reach_pathend_;
}
inline bool VehicleControl::is_reach_pathend() const {
  // @@protoc_insertion_point(field_get:minieye.VehicleControl.is_reach_pathend)
  return _internal_is_reach_pathend();
}
inline void VehicleControl::_internal_set_is_reach_pathend(bool value) {
  
  is_reach_pathend_ = value;
}
inline void VehicleControl::set_is_reach_pathend(bool value) {
  _internal_set_is_reach_pathend(value);
  // @@protoc_insertion_point(field_set:minieye.VehicleControl.is_reach_pathend)
}

// float l_bias_err = 9;
inline void VehicleControl::clear_l_bias_err() {
  l_bias_err_ = 0;
}
inline float VehicleControl::_internal_l_bias_err() const {
  return l_bias_err_;
}
inline float VehicleControl::l_bias_err() const {
  // @@protoc_insertion_point(field_get:minieye.VehicleControl.l_bias_err)
  return _internal_l_bias_err();
}
inline void VehicleControl::_internal_set_l_bias_err(float value) {
  
  l_bias_err_ = value;
}
inline void VehicleControl::set_l_bias_err(float value) {
  _internal_set_l_bias_err(value);
  // @@protoc_insertion_point(field_set:minieye.VehicleControl.l_bias_err)
}

// float yaw_bias_err = 10;
inline void VehicleControl::clear_yaw_bias_err() {
  yaw_bias_err_ = 0;
}
inline float VehicleControl::_internal_yaw_bias_err() const {
  return yaw_bias_err_;
}
inline float VehicleControl::yaw_bias_err() const {
  // @@protoc_insertion_point(field_get:minieye.VehicleControl.yaw_bias_err)
  return _internal_yaw_bias_err();
}
inline void VehicleControl::_internal_set_yaw_bias_err(float value) {
  
  yaw_bias_err_ = value;
}
inline void VehicleControl::set_yaw_bias_err(float value) {
  _internal_set_yaw_bias_err(value);
  // @@protoc_insertion_point(field_set:minieye.VehicleControl.yaw_bias_err)
}

// uint32 fail_reason = 11;
inline void VehicleControl::clear_fail_reason() {
  fail_reason_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleControl::_internal_fail_reason() const {
  return fail_reason_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleControl::fail_reason() const {
  // @@protoc_insertion_point(field_get:minieye.VehicleControl.fail_reason)
  return _internal_fail_reason();
}
inline void VehicleControl::_internal_set_fail_reason(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  fail_reason_ = value;
}
inline void VehicleControl::set_fail_reason(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_fail_reason(value);
  // @@protoc_insertion_point(field_set:minieye.VehicleControl.fail_reason)
}

// uint32 brake_cmd = 12;
inline void VehicleControl::clear_brake_cmd() {
  brake_cmd_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleControl::_internal_brake_cmd() const {
  return brake_cmd_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleControl::brake_cmd() const {
  // @@protoc_insertion_point(field_get:minieye.VehicleControl.brake_cmd)
  return _internal_brake_cmd();
}
inline void VehicleControl::_internal_set_brake_cmd(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  brake_cmd_ = value;
}
inline void VehicleControl::set_brake_cmd(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_brake_cmd(value);
  // @@protoc_insertion_point(field_set:minieye.VehicleControl.brake_cmd)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace minieye

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_vehicle_5fcontrol_2eproto
