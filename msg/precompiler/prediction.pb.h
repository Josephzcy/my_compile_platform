// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: prediction.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_prediction_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_prediction_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_prediction_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_prediction_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_prediction_2eproto;
namespace perception {
class Prediction;
class PredictionDefaultTypeInternal;
extern PredictionDefaultTypeInternal _Prediction_default_instance_;
class Prediction_PredictPoint;
class Prediction_PredictPointDefaultTypeInternal;
extern Prediction_PredictPointDefaultTypeInternal _Prediction_PredictPoint_default_instance_;
class Prediction_PredictionObstacle;
class Prediction_PredictionObstacleDefaultTypeInternal;
extern Prediction_PredictionObstacleDefaultTypeInternal _Prediction_PredictionObstacle_default_instance_;
class Prediction_PredictionTrajectory;
class Prediction_PredictionTrajectoryDefaultTypeInternal;
extern Prediction_PredictionTrajectoryDefaultTypeInternal _Prediction_PredictionTrajectory_default_instance_;
}  // namespace perception
PROTOBUF_NAMESPACE_OPEN
template<> ::perception::Prediction* Arena::CreateMaybeMessage<::perception::Prediction>(Arena*);
template<> ::perception::Prediction_PredictPoint* Arena::CreateMaybeMessage<::perception::Prediction_PredictPoint>(Arena*);
template<> ::perception::Prediction_PredictionObstacle* Arena::CreateMaybeMessage<::perception::Prediction_PredictionObstacle>(Arena*);
template<> ::perception::Prediction_PredictionTrajectory* Arena::CreateMaybeMessage<::perception::Prediction_PredictionTrajectory>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace perception {

// ===================================================================

class Prediction_PredictPoint PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perception.Prediction.PredictPoint) */ {
 public:
  inline Prediction_PredictPoint() : Prediction_PredictPoint(nullptr) {};
  virtual ~Prediction_PredictPoint();

  Prediction_PredictPoint(const Prediction_PredictPoint& from);
  Prediction_PredictPoint(Prediction_PredictPoint&& from) noexcept
    : Prediction_PredictPoint() {
    *this = ::std::move(from);
  }

  inline Prediction_PredictPoint& operator=(const Prediction_PredictPoint& from) {
    CopyFrom(from);
    return *this;
  }
  inline Prediction_PredictPoint& operator=(Prediction_PredictPoint&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Prediction_PredictPoint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Prediction_PredictPoint* internal_default_instance() {
    return reinterpret_cast<const Prediction_PredictPoint*>(
               &_Prediction_PredictPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Prediction_PredictPoint& a, Prediction_PredictPoint& b) {
    a.Swap(&b);
  }
  inline void Swap(Prediction_PredictPoint* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Prediction_PredictPoint* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Prediction_PredictPoint* New() const final {
    return CreateMaybeMessage<Prediction_PredictPoint>(nullptr);
  }

  Prediction_PredictPoint* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Prediction_PredictPoint>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Prediction_PredictPoint& from);
  void MergeFrom(const Prediction_PredictPoint& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Prediction_PredictPoint* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "perception.Prediction.PredictPoint";
  }
  protected:
  explicit Prediction_PredictPoint(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_prediction_2eproto);
    return ::descriptor_table_prediction_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
    kThetaFieldNumber = 4,
    kSpeedFieldNumber = 5,
    kAccFieldNumber = 6,
    kConfidenceFieldNumber = 7,
    kTimeRelativeFieldNumber = 8,
  };
  // float x = 1;
  void clear_x();
  float x() const;
  void set_x(float value);
  private:
  float _internal_x() const;
  void _internal_set_x(float value);
  public:

  // float y = 2;
  void clear_y();
  float y() const;
  void set_y(float value);
  private:
  float _internal_y() const;
  void _internal_set_y(float value);
  public:

  // float z = 3;
  void clear_z();
  float z() const;
  void set_z(float value);
  private:
  float _internal_z() const;
  void _internal_set_z(float value);
  public:

  // float theta = 4;
  void clear_theta();
  float theta() const;
  void set_theta(float value);
  private:
  float _internal_theta() const;
  void _internal_set_theta(float value);
  public:

  // float speed = 5;
  void clear_speed();
  float speed() const;
  void set_speed(float value);
  private:
  float _internal_speed() const;
  void _internal_set_speed(float value);
  public:

  // float acc = 6;
  void clear_acc();
  float acc() const;
  void set_acc(float value);
  private:
  float _internal_acc() const;
  void _internal_set_acc(float value);
  public:

  // float confidence = 7;
  void clear_confidence();
  float confidence() const;
  void set_confidence(float value);
  private:
  float _internal_confidence() const;
  void _internal_set_confidence(float value);
  public:

  // float timeRelative = 8;
  void clear_timerelative();
  float timerelative() const;
  void set_timerelative(float value);
  private:
  float _internal_timerelative() const;
  void _internal_set_timerelative(float value);
  public:

  // @@protoc_insertion_point(class_scope:perception.Prediction.PredictPoint)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  float x_;
  float y_;
  float z_;
  float theta_;
  float speed_;
  float acc_;
  float confidence_;
  float timerelative_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_prediction_2eproto;
};
// -------------------------------------------------------------------

class Prediction_PredictionTrajectory PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perception.Prediction.PredictionTrajectory) */ {
 public:
  inline Prediction_PredictionTrajectory() : Prediction_PredictionTrajectory(nullptr) {};
  virtual ~Prediction_PredictionTrajectory();

  Prediction_PredictionTrajectory(const Prediction_PredictionTrajectory& from);
  Prediction_PredictionTrajectory(Prediction_PredictionTrajectory&& from) noexcept
    : Prediction_PredictionTrajectory() {
    *this = ::std::move(from);
  }

  inline Prediction_PredictionTrajectory& operator=(const Prediction_PredictionTrajectory& from) {
    CopyFrom(from);
    return *this;
  }
  inline Prediction_PredictionTrajectory& operator=(Prediction_PredictionTrajectory&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Prediction_PredictionTrajectory& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Prediction_PredictionTrajectory* internal_default_instance() {
    return reinterpret_cast<const Prediction_PredictionTrajectory*>(
               &_Prediction_PredictionTrajectory_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Prediction_PredictionTrajectory& a, Prediction_PredictionTrajectory& b) {
    a.Swap(&b);
  }
  inline void Swap(Prediction_PredictionTrajectory* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Prediction_PredictionTrajectory* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Prediction_PredictionTrajectory* New() const final {
    return CreateMaybeMessage<Prediction_PredictionTrajectory>(nullptr);
  }

  Prediction_PredictionTrajectory* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Prediction_PredictionTrajectory>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Prediction_PredictionTrajectory& from);
  void MergeFrom(const Prediction_PredictionTrajectory& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Prediction_PredictionTrajectory* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "perception.Prediction.PredictionTrajectory";
  }
  protected:
  explicit Prediction_PredictionTrajectory(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_prediction_2eproto);
    return ::descriptor_table_prediction_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathPointsVRFFieldNumber = 1,
    kProbabilityFieldNumber = 2,
  };
  // repeated .perception.Prediction.PredictPoint pathPointsVRF = 1;
  int pathpointsvrf_size() const;
  private:
  int _internal_pathpointsvrf_size() const;
  public:
  void clear_pathpointsvrf();
  ::perception::Prediction_PredictPoint* mutable_pathpointsvrf(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perception::Prediction_PredictPoint >*
      mutable_pathpointsvrf();
  private:
  const ::perception::Prediction_PredictPoint& _internal_pathpointsvrf(int index) const;
  ::perception::Prediction_PredictPoint* _internal_add_pathpointsvrf();
  public:
  const ::perception::Prediction_PredictPoint& pathpointsvrf(int index) const;
  ::perception::Prediction_PredictPoint* add_pathpointsvrf();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perception::Prediction_PredictPoint >&
      pathpointsvrf() const;

  // float probability = 2;
  void clear_probability();
  float probability() const;
  void set_probability(float value);
  private:
  float _internal_probability() const;
  void _internal_set_probability(float value);
  public:

  // @@protoc_insertion_point(class_scope:perception.Prediction.PredictionTrajectory)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perception::Prediction_PredictPoint > pathpointsvrf_;
  float probability_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_prediction_2eproto;
};
// -------------------------------------------------------------------

class Prediction_PredictionObstacle PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perception.Prediction.PredictionObstacle) */ {
 public:
  inline Prediction_PredictionObstacle() : Prediction_PredictionObstacle(nullptr) {};
  virtual ~Prediction_PredictionObstacle();

  Prediction_PredictionObstacle(const Prediction_PredictionObstacle& from);
  Prediction_PredictionObstacle(Prediction_PredictionObstacle&& from) noexcept
    : Prediction_PredictionObstacle() {
    *this = ::std::move(from);
  }

  inline Prediction_PredictionObstacle& operator=(const Prediction_PredictionObstacle& from) {
    CopyFrom(from);
    return *this;
  }
  inline Prediction_PredictionObstacle& operator=(Prediction_PredictionObstacle&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Prediction_PredictionObstacle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Prediction_PredictionObstacle* internal_default_instance() {
    return reinterpret_cast<const Prediction_PredictionObstacle*>(
               &_Prediction_PredictionObstacle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Prediction_PredictionObstacle& a, Prediction_PredictionObstacle& b) {
    a.Swap(&b);
  }
  inline void Swap(Prediction_PredictionObstacle* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Prediction_PredictionObstacle* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Prediction_PredictionObstacle* New() const final {
    return CreateMaybeMessage<Prediction_PredictionObstacle>(nullptr);
  }

  Prediction_PredictionObstacle* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Prediction_PredictionObstacle>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Prediction_PredictionObstacle& from);
  void MergeFrom(const Prediction_PredictionObstacle& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Prediction_PredictionObstacle* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "perception.Prediction.PredictionObstacle";
  }
  protected:
  explicit Prediction_PredictionObstacle(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_prediction_2eproto);
    return ::descriptor_table_prediction_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTrajectoryFieldNumber = 2,
    kIdFieldNumber = 1,
    kIntentFieldNumber = 3,
    kIntentProbabilityFieldNumber = 4,
    kPriorityFieldNumber = 5,
    kIsStaticFieldNumber = 6,
  };
  // repeated .perception.Prediction.PredictionTrajectory Trajectory = 2;
  int trajectory_size() const;
  private:
  int _internal_trajectory_size() const;
  public:
  void clear_trajectory();
  ::perception::Prediction_PredictionTrajectory* mutable_trajectory(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perception::Prediction_PredictionTrajectory >*
      mutable_trajectory();
  private:
  const ::perception::Prediction_PredictionTrajectory& _internal_trajectory(int index) const;
  ::perception::Prediction_PredictionTrajectory* _internal_add_trajectory();
  public:
  const ::perception::Prediction_PredictionTrajectory& trajectory(int index) const;
  ::perception::Prediction_PredictionTrajectory* add_trajectory();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perception::Prediction_PredictionTrajectory >&
      trajectory() const;

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 Intent = 3;
  void clear_intent();
  ::PROTOBUF_NAMESPACE_ID::uint32 intent() const;
  void set_intent(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_intent() const;
  void _internal_set_intent(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // float intentProbability = 4;
  void clear_intentprobability();
  float intentprobability() const;
  void set_intentprobability(float value);
  private:
  float _internal_intentprobability() const;
  void _internal_set_intentprobability(float value);
  public:

  // uint32 Priority = 5;
  void clear_priority();
  ::PROTOBUF_NAMESPACE_ID::uint32 priority() const;
  void set_priority(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_priority() const;
  void _internal_set_priority(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bool is_static = 6;
  void clear_is_static();
  bool is_static() const;
  void set_is_static(bool value);
  private:
  bool _internal_is_static() const;
  void _internal_set_is_static(bool value);
  public:

  // @@protoc_insertion_point(class_scope:perception.Prediction.PredictionObstacle)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perception::Prediction_PredictionTrajectory > trajectory_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 intent_;
  float intentprobability_;
  ::PROTOBUF_NAMESPACE_ID::uint32 priority_;
  bool is_static_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_prediction_2eproto;
};
// -------------------------------------------------------------------

class Prediction PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:perception.Prediction) */ {
 public:
  inline Prediction() : Prediction(nullptr) {};
  virtual ~Prediction();

  Prediction(const Prediction& from);
  Prediction(Prediction&& from) noexcept
    : Prediction() {
    *this = ::std::move(from);
  }

  inline Prediction& operator=(const Prediction& from) {
    CopyFrom(from);
    return *this;
  }
  inline Prediction& operator=(Prediction&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Prediction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Prediction* internal_default_instance() {
    return reinterpret_cast<const Prediction*>(
               &_Prediction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Prediction& a, Prediction& b) {
    a.Swap(&b);
  }
  inline void Swap(Prediction* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Prediction* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Prediction* New() const final {
    return CreateMaybeMessage<Prediction>(nullptr);
  }

  Prediction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Prediction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Prediction& from);
  void MergeFrom(const Prediction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Prediction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "perception.Prediction";
  }
  protected:
  explicit Prediction(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_prediction_2eproto);
    return ::descriptor_table_prediction_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef Prediction_PredictPoint PredictPoint;
  typedef Prediction_PredictionTrajectory PredictionTrajectory;
  typedef Prediction_PredictionObstacle PredictionObstacle;

  // accessors -------------------------------------------------------

  enum : int {
    kPredictionObstaclesFieldNumber = 4,
    kTimestampFieldNumber = 1,
    kTickFieldNumber = 2,
    kCounterFieldNumber = 3,
    kIsValidFieldNumber = 5,
    kStartTimeFieldNumber = 6,
    kEndTimeFieldNumber = 7,
  };
  // repeated .perception.Prediction.PredictionObstacle predictionObstacles = 4;
  int predictionobstacles_size() const;
  private:
  int _internal_predictionobstacles_size() const;
  public:
  void clear_predictionobstacles();
  ::perception::Prediction_PredictionObstacle* mutable_predictionobstacles(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perception::Prediction_PredictionObstacle >*
      mutable_predictionobstacles();
  private:
  const ::perception::Prediction_PredictionObstacle& _internal_predictionobstacles(int index) const;
  ::perception::Prediction_PredictionObstacle* _internal_add_predictionobstacles();
  public:
  const ::perception::Prediction_PredictionObstacle& predictionobstacles(int index) const;
  ::perception::Prediction_PredictionObstacle* add_predictionobstacles();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perception::Prediction_PredictionObstacle >&
      predictionobstacles() const;

  // uint64 timestamp = 1;
  void clear_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 timestamp() const;
  void set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_timestamp() const;
  void _internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 tick = 2;
  void clear_tick();
  ::PROTOBUF_NAMESPACE_ID::uint64 tick() const;
  void set_tick(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_tick() const;
  void _internal_set_tick(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 counter = 3;
  void clear_counter();
  ::PROTOBUF_NAMESPACE_ID::uint32 counter() const;
  void set_counter(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_counter() const;
  void _internal_set_counter(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bool isValid = 5;
  void clear_isvalid();
  bool isvalid() const;
  void set_isvalid(bool value);
  private:
  bool _internal_isvalid() const;
  void _internal_set_isvalid(bool value);
  public:

  // uint64 startTime = 6;
  void clear_starttime();
  ::PROTOBUF_NAMESPACE_ID::uint64 starttime() const;
  void set_starttime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_starttime() const;
  void _internal_set_starttime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 endTime = 7;
  void clear_endtime();
  ::PROTOBUF_NAMESPACE_ID::uint64 endtime() const;
  void set_endtime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_endtime() const;
  void _internal_set_endtime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:perception.Prediction)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perception::Prediction_PredictionObstacle > predictionobstacles_;
  ::PROTOBUF_NAMESPACE_ID::uint64 timestamp_;
  ::PROTOBUF_NAMESPACE_ID::uint64 tick_;
  ::PROTOBUF_NAMESPACE_ID::uint32 counter_;
  bool isvalid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 starttime_;
  ::PROTOBUF_NAMESPACE_ID::uint64 endtime_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_prediction_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Prediction_PredictPoint

// float x = 1;
inline void Prediction_PredictPoint::clear_x() {
  x_ = 0;
}
inline float Prediction_PredictPoint::_internal_x() const {
  return x_;
}
inline float Prediction_PredictPoint::x() const {
  // @@protoc_insertion_point(field_get:perception.Prediction.PredictPoint.x)
  return _internal_x();
}
inline void Prediction_PredictPoint::_internal_set_x(float value) {
  
  x_ = value;
}
inline void Prediction_PredictPoint::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:perception.Prediction.PredictPoint.x)
}

// float y = 2;
inline void Prediction_PredictPoint::clear_y() {
  y_ = 0;
}
inline float Prediction_PredictPoint::_internal_y() const {
  return y_;
}
inline float Prediction_PredictPoint::y() const {
  // @@protoc_insertion_point(field_get:perception.Prediction.PredictPoint.y)
  return _internal_y();
}
inline void Prediction_PredictPoint::_internal_set_y(float value) {
  
  y_ = value;
}
inline void Prediction_PredictPoint::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:perception.Prediction.PredictPoint.y)
}

// float z = 3;
inline void Prediction_PredictPoint::clear_z() {
  z_ = 0;
}
inline float Prediction_PredictPoint::_internal_z() const {
  return z_;
}
inline float Prediction_PredictPoint::z() const {
  // @@protoc_insertion_point(field_get:perception.Prediction.PredictPoint.z)
  return _internal_z();
}
inline void Prediction_PredictPoint::_internal_set_z(float value) {
  
  z_ = value;
}
inline void Prediction_PredictPoint::set_z(float value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:perception.Prediction.PredictPoint.z)
}

// float theta = 4;
inline void Prediction_PredictPoint::clear_theta() {
  theta_ = 0;
}
inline float Prediction_PredictPoint::_internal_theta() const {
  return theta_;
}
inline float Prediction_PredictPoint::theta() const {
  // @@protoc_insertion_point(field_get:perception.Prediction.PredictPoint.theta)
  return _internal_theta();
}
inline void Prediction_PredictPoint::_internal_set_theta(float value) {
  
  theta_ = value;
}
inline void Prediction_PredictPoint::set_theta(float value) {
  _internal_set_theta(value);
  // @@protoc_insertion_point(field_set:perception.Prediction.PredictPoint.theta)
}

// float speed = 5;
inline void Prediction_PredictPoint::clear_speed() {
  speed_ = 0;
}
inline float Prediction_PredictPoint::_internal_speed() const {
  return speed_;
}
inline float Prediction_PredictPoint::speed() const {
  // @@protoc_insertion_point(field_get:perception.Prediction.PredictPoint.speed)
  return _internal_speed();
}
inline void Prediction_PredictPoint::_internal_set_speed(float value) {
  
  speed_ = value;
}
inline void Prediction_PredictPoint::set_speed(float value) {
  _internal_set_speed(value);
  // @@protoc_insertion_point(field_set:perception.Prediction.PredictPoint.speed)
}

// float acc = 6;
inline void Prediction_PredictPoint::clear_acc() {
  acc_ = 0;
}
inline float Prediction_PredictPoint::_internal_acc() const {
  return acc_;
}
inline float Prediction_PredictPoint::acc() const {
  // @@protoc_insertion_point(field_get:perception.Prediction.PredictPoint.acc)
  return _internal_acc();
}
inline void Prediction_PredictPoint::_internal_set_acc(float value) {
  
  acc_ = value;
}
inline void Prediction_PredictPoint::set_acc(float value) {
  _internal_set_acc(value);
  // @@protoc_insertion_point(field_set:perception.Prediction.PredictPoint.acc)
}

// float confidence = 7;
inline void Prediction_PredictPoint::clear_confidence() {
  confidence_ = 0;
}
inline float Prediction_PredictPoint::_internal_confidence() const {
  return confidence_;
}
inline float Prediction_PredictPoint::confidence() const {
  // @@protoc_insertion_point(field_get:perception.Prediction.PredictPoint.confidence)
  return _internal_confidence();
}
inline void Prediction_PredictPoint::_internal_set_confidence(float value) {
  
  confidence_ = value;
}
inline void Prediction_PredictPoint::set_confidence(float value) {
  _internal_set_confidence(value);
  // @@protoc_insertion_point(field_set:perception.Prediction.PredictPoint.confidence)
}

// float timeRelative = 8;
inline void Prediction_PredictPoint::clear_timerelative() {
  timerelative_ = 0;
}
inline float Prediction_PredictPoint::_internal_timerelative() const {
  return timerelative_;
}
inline float Prediction_PredictPoint::timerelative() const {
  // @@protoc_insertion_point(field_get:perception.Prediction.PredictPoint.timeRelative)
  return _internal_timerelative();
}
inline void Prediction_PredictPoint::_internal_set_timerelative(float value) {
  
  timerelative_ = value;
}
inline void Prediction_PredictPoint::set_timerelative(float value) {
  _internal_set_timerelative(value);
  // @@protoc_insertion_point(field_set:perception.Prediction.PredictPoint.timeRelative)
}

// -------------------------------------------------------------------

// Prediction_PredictionTrajectory

// repeated .perception.Prediction.PredictPoint pathPointsVRF = 1;
inline int Prediction_PredictionTrajectory::_internal_pathpointsvrf_size() const {
  return pathpointsvrf_.size();
}
inline int Prediction_PredictionTrajectory::pathpointsvrf_size() const {
  return _internal_pathpointsvrf_size();
}
inline void Prediction_PredictionTrajectory::clear_pathpointsvrf() {
  pathpointsvrf_.Clear();
}
inline ::perception::Prediction_PredictPoint* Prediction_PredictionTrajectory::mutable_pathpointsvrf(int index) {
  // @@protoc_insertion_point(field_mutable:perception.Prediction.PredictionTrajectory.pathPointsVRF)
  return pathpointsvrf_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perception::Prediction_PredictPoint >*
Prediction_PredictionTrajectory::mutable_pathpointsvrf() {
  // @@protoc_insertion_point(field_mutable_list:perception.Prediction.PredictionTrajectory.pathPointsVRF)
  return &pathpointsvrf_;
}
inline const ::perception::Prediction_PredictPoint& Prediction_PredictionTrajectory::_internal_pathpointsvrf(int index) const {
  return pathpointsvrf_.Get(index);
}
inline const ::perception::Prediction_PredictPoint& Prediction_PredictionTrajectory::pathpointsvrf(int index) const {
  // @@protoc_insertion_point(field_get:perception.Prediction.PredictionTrajectory.pathPointsVRF)
  return _internal_pathpointsvrf(index);
}
inline ::perception::Prediction_PredictPoint* Prediction_PredictionTrajectory::_internal_add_pathpointsvrf() {
  return pathpointsvrf_.Add();
}
inline ::perception::Prediction_PredictPoint* Prediction_PredictionTrajectory::add_pathpointsvrf() {
  // @@protoc_insertion_point(field_add:perception.Prediction.PredictionTrajectory.pathPointsVRF)
  return _internal_add_pathpointsvrf();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perception::Prediction_PredictPoint >&
Prediction_PredictionTrajectory::pathpointsvrf() const {
  // @@protoc_insertion_point(field_list:perception.Prediction.PredictionTrajectory.pathPointsVRF)
  return pathpointsvrf_;
}

// float probability = 2;
inline void Prediction_PredictionTrajectory::clear_probability() {
  probability_ = 0;
}
inline float Prediction_PredictionTrajectory::_internal_probability() const {
  return probability_;
}
inline float Prediction_PredictionTrajectory::probability() const {
  // @@protoc_insertion_point(field_get:perception.Prediction.PredictionTrajectory.probability)
  return _internal_probability();
}
inline void Prediction_PredictionTrajectory::_internal_set_probability(float value) {
  
  probability_ = value;
}
inline void Prediction_PredictionTrajectory::set_probability(float value) {
  _internal_set_probability(value);
  // @@protoc_insertion_point(field_set:perception.Prediction.PredictionTrajectory.probability)
}

// -------------------------------------------------------------------

// Prediction_PredictionObstacle

// uint32 id = 1;
inline void Prediction_PredictionObstacle::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Prediction_PredictionObstacle::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Prediction_PredictionObstacle::id() const {
  // @@protoc_insertion_point(field_get:perception.Prediction.PredictionObstacle.id)
  return _internal_id();
}
inline void Prediction_PredictionObstacle::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void Prediction_PredictionObstacle::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:perception.Prediction.PredictionObstacle.id)
}

// repeated .perception.Prediction.PredictionTrajectory Trajectory = 2;
inline int Prediction_PredictionObstacle::_internal_trajectory_size() const {
  return trajectory_.size();
}
inline int Prediction_PredictionObstacle::trajectory_size() const {
  return _internal_trajectory_size();
}
inline void Prediction_PredictionObstacle::clear_trajectory() {
  trajectory_.Clear();
}
inline ::perception::Prediction_PredictionTrajectory* Prediction_PredictionObstacle::mutable_trajectory(int index) {
  // @@protoc_insertion_point(field_mutable:perception.Prediction.PredictionObstacle.Trajectory)
  return trajectory_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perception::Prediction_PredictionTrajectory >*
Prediction_PredictionObstacle::mutable_trajectory() {
  // @@protoc_insertion_point(field_mutable_list:perception.Prediction.PredictionObstacle.Trajectory)
  return &trajectory_;
}
inline const ::perception::Prediction_PredictionTrajectory& Prediction_PredictionObstacle::_internal_trajectory(int index) const {
  return trajectory_.Get(index);
}
inline const ::perception::Prediction_PredictionTrajectory& Prediction_PredictionObstacle::trajectory(int index) const {
  // @@protoc_insertion_point(field_get:perception.Prediction.PredictionObstacle.Trajectory)
  return _internal_trajectory(index);
}
inline ::perception::Prediction_PredictionTrajectory* Prediction_PredictionObstacle::_internal_add_trajectory() {
  return trajectory_.Add();
}
inline ::perception::Prediction_PredictionTrajectory* Prediction_PredictionObstacle::add_trajectory() {
  // @@protoc_insertion_point(field_add:perception.Prediction.PredictionObstacle.Trajectory)
  return _internal_add_trajectory();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perception::Prediction_PredictionTrajectory >&
Prediction_PredictionObstacle::trajectory() const {
  // @@protoc_insertion_point(field_list:perception.Prediction.PredictionObstacle.Trajectory)
  return trajectory_;
}

// uint32 Intent = 3;
inline void Prediction_PredictionObstacle::clear_intent() {
  intent_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Prediction_PredictionObstacle::_internal_intent() const {
  return intent_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Prediction_PredictionObstacle::intent() const {
  // @@protoc_insertion_point(field_get:perception.Prediction.PredictionObstacle.Intent)
  return _internal_intent();
}
inline void Prediction_PredictionObstacle::_internal_set_intent(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  intent_ = value;
}
inline void Prediction_PredictionObstacle::set_intent(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_intent(value);
  // @@protoc_insertion_point(field_set:perception.Prediction.PredictionObstacle.Intent)
}

// float intentProbability = 4;
inline void Prediction_PredictionObstacle::clear_intentprobability() {
  intentprobability_ = 0;
}
inline float Prediction_PredictionObstacle::_internal_intentprobability() const {
  return intentprobability_;
}
inline float Prediction_PredictionObstacle::intentprobability() const {
  // @@protoc_insertion_point(field_get:perception.Prediction.PredictionObstacle.intentProbability)
  return _internal_intentprobability();
}
inline void Prediction_PredictionObstacle::_internal_set_intentprobability(float value) {
  
  intentprobability_ = value;
}
inline void Prediction_PredictionObstacle::set_intentprobability(float value) {
  _internal_set_intentprobability(value);
  // @@protoc_insertion_point(field_set:perception.Prediction.PredictionObstacle.intentProbability)
}

// uint32 Priority = 5;
inline void Prediction_PredictionObstacle::clear_priority() {
  priority_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Prediction_PredictionObstacle::_internal_priority() const {
  return priority_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Prediction_PredictionObstacle::priority() const {
  // @@protoc_insertion_point(field_get:perception.Prediction.PredictionObstacle.Priority)
  return _internal_priority();
}
inline void Prediction_PredictionObstacle::_internal_set_priority(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  priority_ = value;
}
inline void Prediction_PredictionObstacle::set_priority(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_priority(value);
  // @@protoc_insertion_point(field_set:perception.Prediction.PredictionObstacle.Priority)
}

// bool is_static = 6;
inline void Prediction_PredictionObstacle::clear_is_static() {
  is_static_ = false;
}
inline bool Prediction_PredictionObstacle::_internal_is_static() const {
  return is_static_;
}
inline bool Prediction_PredictionObstacle::is_static() const {
  // @@protoc_insertion_point(field_get:perception.Prediction.PredictionObstacle.is_static)
  return _internal_is_static();
}
inline void Prediction_PredictionObstacle::_internal_set_is_static(bool value) {
  
  is_static_ = value;
}
inline void Prediction_PredictionObstacle::set_is_static(bool value) {
  _internal_set_is_static(value);
  // @@protoc_insertion_point(field_set:perception.Prediction.PredictionObstacle.is_static)
}

// -------------------------------------------------------------------

// Prediction

// uint64 timestamp = 1;
inline void Prediction::clear_timestamp() {
  timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Prediction::_internal_timestamp() const {
  return timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Prediction::timestamp() const {
  // @@protoc_insertion_point(field_get:perception.Prediction.timestamp)
  return _internal_timestamp();
}
inline void Prediction::_internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  timestamp_ = value;
}
inline void Prediction::set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:perception.Prediction.timestamp)
}

// uint64 tick = 2;
inline void Prediction::clear_tick() {
  tick_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Prediction::_internal_tick() const {
  return tick_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Prediction::tick() const {
  // @@protoc_insertion_point(field_get:perception.Prediction.tick)
  return _internal_tick();
}
inline void Prediction::_internal_set_tick(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  tick_ = value;
}
inline void Prediction::set_tick(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_tick(value);
  // @@protoc_insertion_point(field_set:perception.Prediction.tick)
}

// uint32 counter = 3;
inline void Prediction::clear_counter() {
  counter_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Prediction::_internal_counter() const {
  return counter_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Prediction::counter() const {
  // @@protoc_insertion_point(field_get:perception.Prediction.counter)
  return _internal_counter();
}
inline void Prediction::_internal_set_counter(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  counter_ = value;
}
inline void Prediction::set_counter(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_counter(value);
  // @@protoc_insertion_point(field_set:perception.Prediction.counter)
}

// repeated .perception.Prediction.PredictionObstacle predictionObstacles = 4;
inline int Prediction::_internal_predictionobstacles_size() const {
  return predictionobstacles_.size();
}
inline int Prediction::predictionobstacles_size() const {
  return _internal_predictionobstacles_size();
}
inline void Prediction::clear_predictionobstacles() {
  predictionobstacles_.Clear();
}
inline ::perception::Prediction_PredictionObstacle* Prediction::mutable_predictionobstacles(int index) {
  // @@protoc_insertion_point(field_mutable:perception.Prediction.predictionObstacles)
  return predictionobstacles_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perception::Prediction_PredictionObstacle >*
Prediction::mutable_predictionobstacles() {
  // @@protoc_insertion_point(field_mutable_list:perception.Prediction.predictionObstacles)
  return &predictionobstacles_;
}
inline const ::perception::Prediction_PredictionObstacle& Prediction::_internal_predictionobstacles(int index) const {
  return predictionobstacles_.Get(index);
}
inline const ::perception::Prediction_PredictionObstacle& Prediction::predictionobstacles(int index) const {
  // @@protoc_insertion_point(field_get:perception.Prediction.predictionObstacles)
  return _internal_predictionobstacles(index);
}
inline ::perception::Prediction_PredictionObstacle* Prediction::_internal_add_predictionobstacles() {
  return predictionobstacles_.Add();
}
inline ::perception::Prediction_PredictionObstacle* Prediction::add_predictionobstacles() {
  // @@protoc_insertion_point(field_add:perception.Prediction.predictionObstacles)
  return _internal_add_predictionobstacles();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perception::Prediction_PredictionObstacle >&
Prediction::predictionobstacles() const {
  // @@protoc_insertion_point(field_list:perception.Prediction.predictionObstacles)
  return predictionobstacles_;
}

// bool isValid = 5;
inline void Prediction::clear_isvalid() {
  isvalid_ = false;
}
inline bool Prediction::_internal_isvalid() const {
  return isvalid_;
}
inline bool Prediction::isvalid() const {
  // @@protoc_insertion_point(field_get:perception.Prediction.isValid)
  return _internal_isvalid();
}
inline void Prediction::_internal_set_isvalid(bool value) {
  
  isvalid_ = value;
}
inline void Prediction::set_isvalid(bool value) {
  _internal_set_isvalid(value);
  // @@protoc_insertion_point(field_set:perception.Prediction.isValid)
}

// uint64 startTime = 6;
inline void Prediction::clear_starttime() {
  starttime_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Prediction::_internal_starttime() const {
  return starttime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Prediction::starttime() const {
  // @@protoc_insertion_point(field_get:perception.Prediction.startTime)
  return _internal_starttime();
}
inline void Prediction::_internal_set_starttime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  starttime_ = value;
}
inline void Prediction::set_starttime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_starttime(value);
  // @@protoc_insertion_point(field_set:perception.Prediction.startTime)
}

// uint64 endTime = 7;
inline void Prediction::clear_endtime() {
  endtime_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Prediction::_internal_endtime() const {
  return endtime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Prediction::endtime() const {
  // @@protoc_insertion_point(field_get:perception.Prediction.endTime)
  return _internal_endtime();
}
inline void Prediction::_internal_set_endtime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  endtime_ = value;
}
inline void Prediction::set_endtime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_endtime(value);
  // @@protoc_insertion_point(field_set:perception.Prediction.endTime)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace perception

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_prediction_2eproto
